{"version":3,"sources":["models/Attribute.ts","views/BattlerInfoView.tsx","views/SideInfoView.tsx","views/ActionInfoView.tsx","views/LoadView.tsx","views/EditView.tsx","models/Battler.ts","models/Side.ts","models/Action.ts","viewmodels/BattleVM.ts","views/BattlerView.tsx","views/SideView.tsx","views/TargetView.tsx","views/AttributeName.ts","views/ResultView.tsx","views/ActionView.tsx","views/ActionSelectionView.tsx","views/ActionRecordsView.tsx","views/BattleView.tsx","views/AppView.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["Attribute","ATTRIBUTE_NAME","_ATTRIBUTE_NAME","Object","defineProperty","Earth","Electric","Fire","Water","Wind","BattlerInfoView","_React$Component","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleDpChange","bind","assertThisInitialized","handlePositionChange","handleNameChange","inherits","createClass","key","value","e","battler","copyBattler","dp","Number","parseInt","target","onBattlerChanged","pos","position","name","attribute","attributeResistances","id","_this2","react_default","a","createElement","className","type","onChange","min","max","map","i","handleAttributeChange","React","Component","SideInfoView","side","handleHpChange","handleSpChange","addBattler","hp","sp","battlers","copySide","onSideChanged","_res","b","length","push","BattlerInfoView_BattlerInfoView","handleBattlerChanged","onClick","ActionInfoView","action","spCost","hpDamage","attributeDamage","targetArea","onAttributeChanged","onAttributeDamageChanged","onHpDamageChanged","onSpCostChanged","onNameChanged","x","y","copyAction","existed","findIndex","v","checked","splice","onActionChanged","undefined","find","handleAreaClicked","isAreaChecked","LoadView","onClosed","saves","onLoad","EditView","state","side2","actions","loadShowing","handleSideChanged","handleSide2Changed","onAddAction","onComplete","setState","arr","savename","window","prompt","Date","toLocaleString","trim","names","stateString","JSON","stringify","namesString","localStorage","getItem","parse","confirm","setItem","alert","dataString","data","Fragment","SideInfoView_SideInfoView","ActionInfoView_ActionInfoView","onSave","onLoadCanceled","onLoadSelected","Battler","currentAttribute","weakState","thisTurnDpDamaged","point","result","dpDamage","attributePointAttached","knockedIntoWeak","resist","Side","opponent","damageMultiplier","thisActionDamageMultiplier","damageMultiplierDelta","flatPosition","isDead","ret","multiplierAdded","forEach","onTurnStart","Action","ad","user","targets","attack","targetPoint","canUse","getBattler","filter","onActionEnd","t","shift","Attack","hpDamageResult","damageMultiplierResult","attributeDamageResult","applyHpDamage","getCurrentAttribute","isWeakState","onDamageWeakState","applyAttributeDamage","BattleVM","sideA","sideB","_sideA","_sideB","_actions","_phase","_inputtingPhase","_actionResults","currentProcessingAction","_inputtingAction","_currentInputtingBattler","_nextActionId","setOpponent","BehaviorSubject","next","startTurn","checkInputting","inputtingPhase","Error","updateLoop","update","setTimeout","step","getCurrentAttack","index","_this$_actions$value$","slicedToArray","get","BattlerView","attributeName","getAttributePoint","SideView","onBattlerClick","BattlerRow","BattlerCell","onHover","highlighted","onMouseLeave","onMouseEnter","concat","TargetView","hoveredPosition","onTargetSelected","hovered","bx","by","areas","Array","fill","battlerMap","onClose","AttributeName_ATTRIBUTE_NAME","ResultView","damageMultipiler","ActionView","onClicked","ActionSelectionView","onActionSelectionClosed","actionDatas","onActionClicked","ActionRecordsView","preventDefault","onActionDeleted","BattleView","subscription","battleVM","previousProps","phase","actionResults","onBattlerSelected","onTargetSelectionClosed","unsubscribe","Subscription","subscribe","p","r","_this3","d","add","registerSubscriptions","addAction","setTarget","selectBattler","endInputting","cancelTargetSelection","cancelActionSelection","_this4","recreateBattleVM","console","log","TargetView_TargetView","inputtingAction","onEndTurn","AppView","editHidden","sideViewHidden","EditView_EditView","BattleView_BattleView","App","AppView_AppView","Boolean","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.0f39d82b.chunk.js","sourcesContent":["export enum Attribute{\r\n    Fire, Water, Earth, Wind, Electric\r\n}","import React, { ChangeEvent } from \"react\";\r\nimport { Attribute } from \"../models/Attribute\";\r\nimport { BattlerData } from \"../models/Battler\";\r\n\r\nconst ATTRIBUTE_NAME = {\r\n    [Attribute.Earth]: \"土\",\r\n    [Attribute.Electric]: \"电\",\r\n    [Attribute.Fire]: \"火\",\r\n    [Attribute.Water]: \"水\",\r\n    [Attribute.Wind]: \"风\"\r\n}\r\n\r\nexport class BattlerInfoView extends React.Component<{battler: BattlerData, onBattlerChanged: (battler: BattlerData) => void}, {}>{\r\n    constructor(props: {battler: BattlerData, onBattlerChanged: (battler: BattlerData) => void}) {\r\n        super(props);\r\n        this.handleDpChange = this.handleDpChange.bind(this);\r\n        this.handlePositionChange = this.handlePositionChange.bind(this);\r\n        this.handleNameChange = this.handleNameChange.bind(this);\r\n        \r\n    }\r\n\r\n    handleDpChange(e: ChangeEvent<HTMLInputElement>) {\r\n        let battler = this.copyBattler(this.props.battler);\r\n        battler.dp = Number.parseInt(e.target.value);\r\n        this.props.onBattlerChanged(battler);\r\n    }\r\n\r\n    handlePositionChange(e: ChangeEvent<HTMLInputElement>) {\r\n        let pos = Number.parseInt(e.target.value);\r\n        if(pos >= 0 && pos < 6) {\r\n            let battler = this.copyBattler(this.props.battler);\r\n            battler.position = pos as any;\r\n            this.props.onBattlerChanged(battler);\r\n        }\r\n    }\r\n\r\n    handleNameChange(e: ChangeEvent<HTMLInputElement>) {\r\n        let battler = this.copyBattler(this.props.battler);\r\n        battler.name = e.target.value;\r\n        this.props.onBattlerChanged(battler);\r\n    }\r\n\r\n    handleAttributeChange(attribute: Attribute, e: ChangeEvent<HTMLInputElement>) {\r\n        let battler = this.copyBattler(this.props.battler);\r\n        battler.attributeResistances[attribute] = Number.parseInt(e.target.value);\r\n        this.props.onBattlerChanged(battler);\r\n    }\r\n\r\n    copyBattler(battler: BattlerData) : BattlerData{\r\n        return {dp: battler.dp, id: battler.id, name: battler.name, position: battler.position, attributeResistances: battler.attributeResistances};\r\n    }\r\n\r\n    render() {\r\n        return <div className=\"battler-info\">\r\n            <p>DP: <input type=\"number\" onChange={this.handleDpChange} value={this.props.battler.dp} /></p>\r\n            <p>位置: <input type=\"number\" onChange={this.handlePositionChange} value={this.props.battler.position} min=\"0\" max=\"5\"/></p>\r\n            <p>名称: <input type=\"text\" onChange={this.handleNameChange} value={this.props.battler.name}/></p>\r\n            <div>\r\n                <p>抗性</p>\r\n                {\r\n                    [Attribute.Earth, Attribute.Electric, Attribute.Fire, Attribute.Water, Attribute.Wind].map((attribute: Attribute, i: number) => {\r\n                        return <p key={i}>{ATTRIBUTE_NAME[attribute]}<input value={this.props.battler.attributeResistances[attribute]} onChange={this.handleAttributeChange.bind(this, attribute)}/></p>\r\n                    })\r\n                }\r\n            </div>\r\n        </div>\r\n    }\r\n\r\n    \r\n}","import React, { ReactNode, ChangeEvent } from \"react\";\r\nimport { BattlerData } from \"../models/Battler\";\r\nimport { BattlerInfoView } from \"./BattlerInfoView\";\r\nimport { SideData } from \"../models/Side\";\r\nimport { Attribute } from \"../models/Attribute\";\r\n\r\nexport class SideInfoView extends React.Component<{side: SideData, onSideChanged: (side: SideData) => void}, {}>{\r\n\r\n    side: SideData;\r\n\r\n    constructor(props : {side: SideData, onSideChanged: (side: SideData) => void}) {\r\n        super(props);\r\n        this.handleHpChange = this.handleHpChange.bind(this);\r\n        this.handleSpChange = this.handleSpChange.bind(this);\r\n        this.addBattler = this.addBattler.bind(this);\r\n        this.side = {hp: 0, sp: 0, battlers: []};\r\n    }\r\n\r\n    handleHpChange(e: ChangeEvent<HTMLInputElement>) {\r\n        let side = this.copySide(this.props.side);\r\n        side.hp = Number.parseInt(e.target.value);\r\n        this.props.onSideChanged(side);\r\n    }\r\n\r\n    handleSpChange(e: ChangeEvent<HTMLInputElement>) {\r\n        let side = this.copySide(this.props.side);\r\n        side.sp = Number.parseInt(e.target.value);\r\n        this.props.onSideChanged(side);\r\n    }\r\n\r\n    handleBattlerChanged(id: number, battler: BattlerData) {\r\n        let side = this.copySide(this.props.side);\r\n        let battlers = side.battlers;\r\n        battlers[id] = battler;\r\n        this.props.onSideChanged(side);\r\n    }\r\n\r\n    addBattler() {\r\n        let side = this.copySide(this.props.side);\r\n        let battlers = side.battlers;\r\n        let res = {[Attribute.Earth]: 0, [Attribute.Electric]: 0, [Attribute.Fire]: 0, [Attribute.Water]: 0, [Attribute.Wind]: 0};\r\n        let b: BattlerData = {dp: 0, name: \"\", attributeResistances: res, id: battlers.length, position: 0};\r\n        battlers.push(b);\r\n        this.props.onSideChanged(side);\r\n    }\r\n\r\n    copySide(side: SideData) : SideData {\r\n        this.side.hp = side.hp;\r\n        this.side.sp = side.sp;\r\n        this.side.battlers = side.battlers;\r\n        return this.side;\r\n    }\r\n\r\n    render(): ReactNode{\r\n        return <div>\r\n            <p>HP: <input type=\"number\" onChange={this.handleHpChange} value={this.props.side.hp}/> </p>\r\n            <p>SP: <input type=\"number\" onChange={this.handleSpChange} value={this.props.side.sp}/></p>\r\n            <div>\r\n                <p>角色：</p>\r\n                {\r\n                    this.props.side.battlers.map((b, id) => {\r\n                        return <BattlerInfoView battler={b} onBattlerChanged={this.handleBattlerChanged.bind(this, id) } key={b.id}/>\r\n                    })\r\n                }\r\n                <button onClick={this.addBattler}>+</button>\r\n            </div>\r\n\r\n        </div>\r\n    }\r\n}","import React, { ChangeEvent } from \"react\";\r\nimport { ActionData } from \"../models/ActionData\";\r\nimport { Attribute } from \"../models/Attribute\";\r\n\r\ninterface Props{\r\n    action: ActionData;\r\n    onActionChanged: (action: ActionData) => void;\r\n}\r\n\r\nexport class ActionInfoView extends React.Component<Props> {\r\n    private action: ActionData;\r\n    constructor(props: Props) {\r\n        super(props);\r\n        this.action = {spCost: 0, hpDamage: 0, attribute: Attribute.Fire, attributeDamage: 0, targetArea: [], name: \"\"};\r\n        this.onAttributeChanged = this.onAttributeChanged.bind(this);\r\n        this.onAttributeDamageChanged = this.onAttributeDamageChanged.bind(this);\r\n        this.onHpDamageChanged = this.onHpDamageChanged.bind(this);\r\n        this.onSpCostChanged = this.onSpCostChanged.bind(this);\r\n        this.onNameChanged = this.onNameChanged.bind(this);\r\n    }\r\n\r\n    copyAction(action: ActionData) {\r\n        this.action.spCost = action.spCost;\r\n        this.action.targetArea = action.targetArea;\r\n        this.action.hpDamage = action.hpDamage;\r\n        this.action.attribute = action.attribute;\r\n        this.action.attributeDamage = action.attributeDamage;\r\n        this.action.name = action.name;\r\n        return this.action;\r\n    }\r\n\r\n    handleAreaClicked(x: number, y: number, e: ChangeEvent<HTMLInputElement>) {\r\n        let action = this.copyAction(this.props.action);\r\n        let existed = action.targetArea.findIndex(v => v[0] === x && v[1] === y);\r\n        if(e.target.checked) {\r\n            if(existed < 0) {\r\n                action.targetArea.push([x,y]);\r\n            }\r\n        }else{\r\n            if(existed >= 0) {\r\n                action.targetArea.splice(existed, 1);\r\n            }\r\n\r\n        }\r\n        this.props.onActionChanged(action);\r\n    }\r\n\r\n    isAreaChecked(x: number, y: number) {\r\n        return this.props.action.targetArea.find(v => v[0] === x && v[1] === y) !== undefined;\r\n    }\r\n\r\n    onAttributeChanged(e: ChangeEvent<HTMLSelectElement>) {\r\n        let action = this.copyAction(this.props.action);\r\n        action.attribute = Number.parseInt(e.target.value);\r\n        this.props.onActionChanged(action);\r\n    }\r\n\r\n    onHpDamageChanged(e: ChangeEvent<HTMLInputElement>) {\r\n        let action = this.copyAction(this.props.action);\r\n        action.hpDamage = Number.parseInt(e.target.value);\r\n        this.props.onActionChanged(action);\r\n    }\r\n\r\n    onSpCostChanged(e: ChangeEvent<HTMLInputElement>) {\r\n        let action = this.copyAction(this.props.action);\r\n        action.spCost = Number.parseInt(e.target.value);\r\n        this.props.onActionChanged(action);\r\n    }\r\n\r\n    onAttributeDamageChanged(e: ChangeEvent<HTMLInputElement>) {\r\n        let action = this.copyAction(this.props.action);\r\n        action.attributeDamage = Number.parseInt(e.target.value);\r\n        this.props.onActionChanged(action);\r\n    }\r\n\r\n    onNameChanged(e: ChangeEvent<HTMLInputElement>) {\r\n        let action = this.copyAction(this.props.action);\r\n        action.name = e.target.value;\r\n        this.props.onActionChanged(action);\r\n    }\r\n\r\n    render() {\r\n        return <div className=\"action-view\">\r\n            <p>名称: <input type=\"text\" value={this.props.action.name} onChange={this.onNameChanged}/></p>\r\n            <p>HP伤害: <input type=\"number\" value={this.props.action.hpDamage} onChange={this.onHpDamageChanged} /></p>\r\n            <p>SP消耗: <input type=\"number\" value={this.props.action.spCost} onChange={this.onSpCostChanged} /></p>\r\n            <p>属性伤害: <input type=\"number\" value={this.props.action.attributeDamage} onChange={this.onAttributeDamageChanged} /></p>\r\n            <p>属性:\r\n                <select onChange={this.onAttributeChanged} value={this.props.action.attribute}>\r\n                    <option value={Attribute.Earth}>土</option>\r\n                    <option value={Attribute.Electric}>电</option>\r\n                    <option value={Attribute.Fire}>火</option>\r\n                    <option value={Attribute.Water}>水</option>\r\n                    <option value={Attribute.Wind}>风</option>\r\n                </select>\r\n            </p>\r\n            <div>\r\n                <p>目标范围</p>\r\n                <table>\r\n                    <tbody>\r\n                        {\r\n                            [-2,-1,0,1,2].map(x => {\r\n                                return <tr key={x}>\r\n                                    {[-2,-1,0,1,2].map(y => <td key={y}><input type=\"checkbox\" onChange={this.handleAreaClicked.bind(this, x, y)} checked={this.isAreaChecked(x,y)} /></td>)}\r\n                                </tr>\r\n                            })\r\n                        }\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        </div>\r\n    }\r\n}","import React from \"react\";\r\ninterface Props{\r\n    saves: string[];\r\n    onClosed: () => void;\r\n    onLoad: (name: string) => void;\r\n}\r\n\r\nexport function LoadView(props: Props) {\r\n    return <div className=\"modal-container show\">\r\n        <div className=\"modal load-dialog\">\r\n            <p className=\"modal-header\">\r\n                <span className=\"modal-title\">读取存档</span>\r\n                <span><button className=\"anchor-like-button\" onClick={() => props.onClosed()}>[X]</button></span>\r\n            </p>\r\n            {\r\n                props.saves.map((name, id) => \r\n                    <p className=\"load-names\" key={id} onClick={() => props.onLoad(name)}>{name}</p>\r\n                )\r\n            }\r\n        </div>\r\n        \r\n    </div>\r\n}","import React from \"react\";\r\nimport { SideInfoView } from \"./SideInfoView\";\r\nimport { SideData } from \"../models/Side\";\r\nimport { ActionData } from \"../models/ActionData\";\r\nimport { ActionInfoView } from \"./ActionInfoView\";\r\nimport { Attribute } from \"../models/Attribute\";\r\nimport { LoadView } from \"./LoadView\";\r\n\r\nconst META_ITEM = \"_saveMetaItem\";\r\n\r\ninterface SaveData{\r\n    side: SideData;\r\n    side2: SideData;\r\n    actions: ActionData[];\r\n}\r\n\r\ninterface Props{\r\n    onComplete: (sideA: SideData, sideB: SideData, actions: ActionData[]) => void;\r\n}\r\n\r\nexport class EditView extends React.Component<Props, {side: SideData, side2: SideData, actions: ActionData[], loadShowing: boolean, saves: string[]}>{\r\n    constructor(props: Props) {\r\n        super(props);\r\n        this.state = {\r\n            side: {hp: 0, sp: 0, battlers: []},\r\n            side2: {hp:0, sp:0, battlers: []},\r\n            actions: [],\r\n            loadShowing: false,\r\n            saves: []\r\n        }\r\n        this.handleSideChanged = this.handleSideChanged.bind(this);\r\n        this.handleSide2Changed = this.handleSide2Changed.bind(this);\r\n        this.onAddAction = this.onAddAction.bind(this);\r\n        this.onComplete = this.onComplete.bind(this);\r\n    }\r\n\r\n    handleSideChanged(side: SideData) {\r\n        this.setState({side: side});\r\n    }\r\n\r\n    handleSide2Changed(side: SideData) {\r\n        this.setState({side2: side});\r\n    }\r\n\r\n    onActionChanged(id: number, action: ActionData) {\r\n        this.setState((state) => {\r\n            let arr = state.actions;\r\n            arr[id] = action;\r\n            return {actions: arr};\r\n        })\r\n    }\r\n\r\n    onAddAction() {\r\n        this.setState((state) => {\r\n            let arr = state.actions;\r\n            arr.push({hpDamage: 0, spCost: 0, attribute: Attribute.Earth, attributeDamage: 0, targetArea: [], name: \"\"})\r\n            return {actions: arr};\r\n        })\r\n    }\r\n\r\n    onComplete() {\r\n        this.props.onComplete(this.state.side, this.state.side2, this.state.actions);\r\n    }\r\n\r\n    onSave() {\r\n        let savename = window.prompt(\"存档名称（同名会自动覆盖）\", new Date().toLocaleString());\r\n        if(savename === null) {\r\n            return;\r\n        }\r\n        savename = savename.trim();\r\n        if(savename === \"\") {\r\n            return;\r\n        }\r\n        if(savename === META_ITEM) {\r\n            window.alert(\"非法名称\");\r\n            return;\r\n        }\r\n        const stateString = JSON.stringify({side: this.state.side, side2: this.state.side2, actions: this.state.actions});\r\n        const namesString = localStorage.getItem(META_ITEM);\r\n        let names: string[];\r\n        if(namesString === null) {\r\n            names = [];\r\n        }else{\r\n            names = JSON.parse(namesString) as string[];\r\n        }\r\n        if(names.findIndex(x => x === savename) !== -1) {\r\n            if(window.confirm(\"存在同名存档，是否覆盖？\") === false) {\r\n                return;\r\n            }\r\n        }else{\r\n            names.push(savename);\r\n        }\r\n        localStorage.setItem(META_ITEM, JSON.stringify(names));\r\n        localStorage.setItem(savename, stateString);\r\n    }\r\n\r\n    onLoad() {\r\n        const namesString = localStorage.getItem(META_ITEM);\r\n        if(namesString === null) {\r\n            alert(\"无存档\");\r\n            return;\r\n        }\r\n        let names = JSON.parse(namesString) as string[];\r\n        this.setState({\r\n            loadShowing: true,\r\n            saves: names\r\n        });\r\n    }\r\n\r\n    onLoadCanceled() {\r\n        this.setState({loadShowing: false})\r\n    }\r\n\r\n    onLoadSelected(name: string) { \r\n        const dataString = localStorage.getItem(name);\r\n        if(dataString === null) {\r\n            alert(\"读取错误！\");\r\n            this.setState({loadShowing: false});\r\n            return;\r\n        }\r\n        const data = JSON.parse(dataString) as SaveData;\r\n        this.setState({\r\n            loadShowing: false,\r\n            side: data.side,\r\n            side2: data.side2,\r\n            actions: data.actions\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return <React.Fragment>\r\n            <div className=\"platform\">\r\n                <div className=\"sides-info-view\">\r\n                    <SideInfoView side={this.state.side} onSideChanged={this.handleSideChanged}/>\r\n                    <p className=\"vs\">VS</p>\r\n                    <SideInfoView side={this.state.side2} onSideChanged={this.handleSide2Changed} />\r\n                </div>\r\n                <div className=\"actions-view\">\r\n                    <p>行动:</p>\r\n                    {\r\n                        this.state.actions.map((action, id) => {\r\n                            return <ActionInfoView action={action} onActionChanged={this.onActionChanged.bind(this, id)} key={id}/>\r\n                        })\r\n                    }\r\n                    <button onClick={this.onAddAction}>+</button>\r\n                </div>\r\n                <div className=\"footer-view\">\r\n                    <button onClick={this.onComplete}>完成</button>\r\n                    <button onClick={() => this.onSave()}>保存</button>\r\n                    <button onClick={() => this.onLoad()}>读取</button>\r\n                </div>\r\n            </div>\r\n            {\r\n                this.state.loadShowing ? \r\n                    <LoadView saves={this.state.saves} onClosed={() => this.onLoadCanceled()} onLoad={(name) => this.onLoadSelected(name)} /> : null\r\n            }\r\n        </React.Fragment>\r\n    }\r\n\r\n}","import {Attribute} from \"./Attribute\"\r\nimport { Side } from \"./Side\";\r\nexport class Battler{\r\n    dp: number;\r\n    attributeResistances: {[key in Attribute]: number}\r\n    side: Side;\r\n    private currentAttribute: {attribute: Attribute | null, point: number}\r\n    private weakState: boolean;\r\n    private thisTurnDpDamaged: boolean;\r\n    position: number;\r\n    name: string;\r\n    id: number;\r\n\r\n    constructor(side: Side, data: BattlerData) {\r\n        this.position = data.position;\r\n        this.side = side;\r\n        this.dp = data.dp;\r\n        this.attributeResistances = data.attributeResistances;\r\n        this.currentAttribute = {attribute: null, point: 0};\r\n        this.weakState = false;\r\n        this.thisTurnDpDamaged = false;\r\n        this.name = data.name;\r\n        this.id = data.id;\r\n    }\r\n\r\n    getCurrentAttribute() : Attribute | null { \r\n        return this.currentAttribute.attribute;\r\n    }\r\n\r\n    getAttributePoint(): number {\r\n        return this.currentAttribute.point;\r\n    }    \r\n\r\n    applyAttributeDamage(attribute: Attribute, attributeDamage: number): AttributeDamageResult{\r\n        let result: AttributeDamageResult = {dpDamage: 0, attributePointAttached: 0, knockedIntoWeak: false, attribute: null};\r\n        \r\n        if(this.weakState && !this.thisTurnDpDamaged) {\r\n            result.dpDamage = 1;\r\n            this.dp -= 1;\r\n            this.thisTurnDpDamaged = true;\r\n        }\r\n        if(this.weakState) {\r\n            //in weak state, attribute point won't increase anymore.\r\n            return result;\r\n        }\r\n        result.attribute = attribute;\r\n        result.attributePointAttached = attributeDamage;\r\n        if(this.currentAttribute.attribute === attribute) {\r\n            this.currentAttribute.point += attributeDamage;\r\n        }\r\n        else{\r\n            this.currentAttribute.attribute = attribute;\r\n            this.currentAttribute.point = attributeDamage;\r\n        }\r\n        let resist = this.attributeResistances[attribute];\r\n        if(resist !== 0 && resist <= this.currentAttribute.point) {\r\n            this.weakState = true;\r\n            this.currentAttribute.point = 0;\r\n            result.knockedIntoWeak = true;\r\n        }\r\n        return result;\r\n    }\r\n\r\n    onTurnStart() : void{\r\n        this.thisTurnDpDamaged = false;\r\n        this.weakState = false;\r\n    }\r\n\r\n    isDead() : boolean {\r\n        return this.dp <= 0;\r\n    }\r\n\r\n    isWeakState(): boolean {\r\n        return this.weakState;\r\n    }\r\n}\r\nexport interface AttributeDamageResult{\r\n    knockedIntoWeak: boolean;\r\n    dpDamage: number;\r\n    attribute: Attribute | null;\r\n    attributePointAttached: number;\r\n}\r\nexport interface BattlerData{\r\n    name: string;\r\n    dp: number;\r\n    id: number;\r\n    attributeResistances: {[key in Attribute]: number};\r\n    position: 0|1|2|3|4|5;\r\n}\r\n","import { Battler, BattlerData } from \"./Battler\";\r\nimport { Action } from \"./Action\";\r\n\r\nexport class Side{\r\n    opponent: Side | null;\r\n    damageMultiplier: number;\r\n    thisActionDamageMultiplier: number;\r\n    damageMultiplierDelta: number;\r\n    battlers: Battler[];\r\n    hp: number;\r\n    sp: number;\r\n    \r\n    constructor(data: SideData) {\r\n        this.battlers = data.battlers.map(v => new Battler(this, v));\r\n        this.damageMultiplier = 1.0;\r\n        this.thisActionDamageMultiplier = 1.0;\r\n        this.damageMultiplierDelta = 0.2;\r\n        this.opponent = null;\r\n        this.hp = data.hp;\r\n        this.sp = data.sp;\r\n    }\r\n\r\n    getBattler(position: [number, number]) : Battler | undefined {\r\n        const flatPosition = position[0] * 2 + position[1];\r\n        return this.battlers.find(b => b.position === flatPosition);\r\n    }\r\n    \r\n\r\n    setOpponent(side: Side) {\r\n        this.opponent = side;\r\n    }\r\n\r\n    applyHpDamage(hpDamage: number): HpDamageResult {\r\n        this.hp -= hpDamage;\r\n        if(this.hp < 0) {\r\n            this.hp = 0;\r\n        }\r\n        return {hpDamage: hpDamage, isDead: this.hp === 0};\r\n    }\r\n\r\n    onDamageWeakState(action: Action): DamageMultiplierResult {\r\n        let ret = {multiplierAdded: this.damageMultiplierDelta};\r\n        this.thisActionDamageMultiplier += this.damageMultiplierDelta;\r\n        this.damageMultiplierDelta += 0.2;\r\n        return ret;\r\n    }\r\n\r\n    onActionEnd() {\r\n        this.damageMultiplier = this.thisActionDamageMultiplier;\r\n    }\r\n\r\n    onTurnStart() {\r\n        this.damageMultiplier = 1.0;\r\n        this.thisActionDamageMultiplier = 1.0;\r\n        this.damageMultiplierDelta = 0.2;\r\n        this.battlers.forEach(b => b.onTurnStart());\r\n    }\r\n\r\n    getDisplayDamageMultiplier(): number{\r\n        return this.thisActionDamageMultiplier;\r\n    }\r\n\r\n\r\n}\r\n\r\nexport interface HpDamageResult{\r\n    hpDamage: number;\r\n    isDead: boolean;\r\n}\r\n\r\nexport interface SideData{\r\n    battlers: BattlerData[];\r\n    hp: number;\r\n    sp: number;\r\n}\r\n\r\nexport interface DamageMultiplierResult{\r\n    multiplierAdded: number;\r\n}\r\n","import { Battler, AttributeDamageResult } from \"./Battler\";\r\nimport { HpDamageResult, DamageMultiplierResult  } from \"./Side\";\r\nimport { ActionData } from \"./ActionData\";\r\n\r\nexport class Action{\r\n    user: Battler;\r\n    targets: Battler[] | null;\r\n    data: ActionData;\r\n    id: number;\r\n    private attack: Attack | null;\r\n    private targetPoint: [number, number];\r\n\r\n    constructor(ad: ActionData, user: Battler, target: [number, number], id: number) {\r\n        this.data = ad;\r\n        this.targets = null;\r\n        this.attack = null;\r\n        this.user = user;\r\n        this.targetPoint = target;\r\n        this.id = id;\r\n    }\r\n\r\n    canUse(){\r\n        return !this.user.isDead();\r\n    }\r\n\r\n    step() : boolean{\r\n        if(!this.canUse()){\r\n            return false;\r\n        }\r\n        if(this.targets === null) {\r\n            let side = this.user.side.opponent;\r\n            this.targets = this.data.targetArea.map(point => {\r\n                let x = (this.targetPoint[0] + point[0]);\r\n                let y = (this.targetPoint[1] + point[1]);\r\n                //todo extract position calculator.\r\n                if(x > 2 || x < 0 || y > 1 || y < 0) {\r\n                    return undefined;\r\n                }\r\n                return side!.getBattler([x,y]);\r\n            }).filter(v => v !== undefined) as Battler[];\r\n        }\r\n        if(this.targets.length === 0) {\r\n            this.user.side.onActionEnd();\r\n            return false;\r\n        }\r\n        let t = this.targets.shift();\r\n        this.attack = new Attack(this.user, t!, this);\r\n        return true;\r\n    }\r\n\r\n    getCurrentAttack() : Attack | null{\r\n        return this.attack;\r\n    }\r\n}\r\n\r\nexport class Attack{\r\n    user: Battler;\r\n    target: Battler;\r\n    action: Action;\r\n    hpDamageResult: HpDamageResult;\r\n    damageMultiplierResult: DamageMultiplierResult | null;\r\n    attributeDamageResult: AttributeDamageResult;\r\n\r\n    constructor(user: Battler, target: Battler, action: Action){\r\n        this.user = user;\r\n        this.target = target;\r\n        this.action = action;\r\n        let hpDamage = this.user.side.damageMultiplier * this.action.data.hpDamage;\r\n        this.hpDamageResult = this.target.side.applyHpDamage(hpDamage);\r\n        this.damageMultiplierResult = null;\r\n        if(this.action.data.attribute === this.target.getCurrentAttribute() && this.target.isWeakState()) {\r\n            this.damageMultiplierResult = this.user.side.onDamageWeakState(this.action);\r\n        }\r\n        this.attributeDamageResult = this.target.applyAttributeDamage(this.action.data.attribute, this.action.data.attributeDamage);\r\n    }\r\n}","import { Side, SideData } from \"../models/Side\";\r\nimport { Action, Attack } from \"../models/Action\";\r\nimport { ActionData } from \"../models/ActionData\";\r\nimport { Battler } from \"../models/Battler\";\r\nimport { Observable, BehaviorSubject } from \"rxjs\" \r\n\r\nexport type InputtingPhase = \"decideBattler\" | \"decideAction\" | \"decideTarget\" | undefined;\r\nexport type Phase = \"inputting\"|\"processing\" | undefined;\r\n\r\nconst UPDATE_INTERVAL = 200;\r\n\r\nexport class BattleVM {\r\n    private _sideA: Side;\r\n    private _sideB: Side;\r\n    private _actions: BehaviorSubject<Action[]>;\r\n    private _phase: BehaviorSubject<Phase>;\r\n    private _inputtingPhase: BehaviorSubject<InputtingPhase>;\r\n    private _actionResults : BehaviorSubject<Attack[]>;\r\n    private currentProcessingAction: Action | undefined;\r\n    private _inputtingAction: ActionData | undefined;\r\n    private _currentInputtingBattler: Battler | undefined;\r\n    private _nextActionId: number;\r\n\r\n    constructor(sideA: SideData, sideB: SideData) {\r\n        this._sideA = new Side(sideA);\r\n        this._sideB = new Side(sideB);\r\n        this._sideA.setOpponent(this._sideB);\r\n        this._sideB.setOpponent(this._sideA);\r\n        this._actions = new BehaviorSubject([] as Action[]);\r\n        this._phase = new BehaviorSubject(undefined as Phase);\r\n        this._inputtingPhase = new BehaviorSubject(undefined as InputtingPhase);\r\n        this._actionResults = new BehaviorSubject([] as Attack[]);\r\n        this._actions.next([]);\r\n        this._actionResults.next([]);\r\n        this.currentProcessingAction = undefined;\r\n        this.startTurn();\r\n        this._nextActionId = 0;\r\n    }\r\n\r\n    get phase() : Observable<Phase>{\r\n        return this._phase;\r\n    }\r\n\r\n    get sideA() {\r\n        return this._sideA;\r\n    }\r\n\r\n    get sideB() {\r\n        return this._sideB;\r\n    }\r\n\r\n    get actions() : Observable<Action[]>{\r\n        return this._actions;\r\n    }\r\n\r\n    get inputtingPhase() : Observable<InputtingPhase> {\r\n        return this._inputtingPhase;\r\n    }\r\n\r\n    get actionResults() : Observable<Attack[]> {\r\n        return this._actionResults;\r\n    }\r\n\r\n    get inputtingAction() : ActionData | undefined{\r\n        return this._inputtingAction;\r\n    }\r\n\r\n    get targets() : Battler[] | undefined{\r\n        if(this._currentInputtingBattler === undefined) {\r\n            return undefined;\r\n        }\r\n        else{\r\n            return this._currentInputtingBattler!.side.opponent!.battlers; \r\n        }\r\n    }\r\n    \r\n\r\n    addAction(action: ActionData) : boolean{\r\n        this.checkInputting(\"decideAction\");\r\n        if(action.spCost > this._currentInputtingBattler!.side.sp) {\r\n            return false;\r\n        }\r\n        this._inputtingAction = action;\r\n        this._inputtingPhase.next(\"decideTarget\");\r\n        return true;\r\n    }\r\n\r\n    setTarget(target: [number, number]) {\r\n        if(this._inputtingAction!.spCost <= this._currentInputtingBattler!.side.sp) {\r\n            this._currentInputtingBattler!.side.sp -= this._inputtingAction!.spCost;\r\n            this._actions.value.push(new Action(this._inputtingAction!, this._currentInputtingBattler!, target, this._nextActionId));\r\n            ++this._nextActionId;\r\n        }\r\n        this._inputtingPhase.next(\"decideBattler\");\r\n    }\r\n\r\n    selectBattler(battler: Battler) {\r\n        this.checkInputting(\"decideBattler\");\r\n        this._currentInputtingBattler = battler;\r\n        this._inputtingPhase.next(\"decideAction\");\r\n    }\r\n\r\n    checkInputting(inputtingPhase: InputtingPhase) {\r\n        if(this._phase.value !== \"inputting\") {\r\n            throw new Error(\"phase must be inputting\");\r\n        }\r\n        if(this._inputtingPhase.value !== inputtingPhase) {\r\n            throw new Error(\"inputting phase must be \" + inputtingPhase);\r\n        }\r\n    }\r\n\r\n    endInputting() {\r\n        this._phase.next(\"processing\");\r\n        this._inputtingPhase.next(undefined);\r\n        this._actionResults.value.length = 0;\r\n        this._actionResults.next(this._actionResults.value);\r\n        this.updateLoop();\r\n    }\r\n\r\n    updateLoop() {\r\n        this.update();\r\n        if(this._phase.value === \"processing\") {\r\n            setTimeout( ()=> this.updateLoop(), UPDATE_INTERVAL);\r\n        }\r\n    }\r\n\r\n    update() {\r\n        if(this._phase.value === \"inputting\") {\r\n            throw new Error(\"You shouldn't call update in inputting state.\");\r\n        }\r\n        while(true) {\r\n            if(this.currentProcessingAction !== undefined) {\r\n                if(this.currentProcessingAction.step()){\r\n                    this._actionResults.value.push(this.currentProcessingAction.getCurrentAttack()!);\r\n                    this._actionResults.next(this._actionResults.value);\r\n                    return;\r\n                }\r\n            }\r\n            this.currentProcessingAction = this._actions.value.shift();\r\n            this._actions.next(this._actions.value);\r\n            if(this.currentProcessingAction === undefined) {\r\n                this.startTurn();\r\n                break;\r\n            }\r\n        }\r\n        \r\n    }\r\n\r\n    cancelTargetSelection(): void {\r\n        this.checkInputting(\"decideTarget\");\r\n        this._inputtingAction = undefined;\r\n        this._inputtingPhase.next(\"decideAction\");\r\n    }\r\n\r\n    cancelActionSelection() : void {\r\n        this.checkInputting(\"decideAction\");\r\n        this._currentInputtingBattler = undefined;\r\n        this._inputtingPhase.next(\"decideBattler\");\r\n    }\r\n\r\n    private startTurn() {\r\n        this._sideA.onTurnStart();\r\n        this._sideB.onTurnStart();\r\n        this._phase.next(\"inputting\");\r\n        this._inputtingPhase.next(\"decideBattler\");\r\n    }\r\n\r\n    onActionDeleted(id: number): void {\r\n        this.checkInputting(\"decideBattler\");\r\n        const index = this._actions.value.findIndex((a) => a.id === id);\r\n        const [action] = this._actions.value.splice(index, 1);\r\n        action.user.side.sp += action.data.spCost;\r\n        this._actions.next(this._actions.value);\r\n    }\r\n    \r\n}","import { Battler } from \"../models/Battler\";\r\nimport { Attribute } from \"../models/Attribute\";\r\nimport React from \"react\";\r\n\r\nexport function BattlerView(props: {battler: Battler, onClick: (battler: Battler) => void}){\r\n    const attribute: Attribute | null = props.battler.getCurrentAttribute();\r\n    let attributeName : string = \"无\";\r\n    if(attribute !== null){\r\n        switch(attribute) {\r\n            case Attribute.Fire:\r\n                attributeName = \"火\";\r\n                break;\r\n            case Attribute.Water:\r\n                attributeName = \"水\";\r\n                break;\r\n            case Attribute.Wind:\r\n                attributeName = \"风\";\r\n                break;\r\n            case Attribute.Electric:\r\n                attributeName = \"电\";\r\n                break;\r\n            case Attribute.Earth:\r\n                attributeName = \"土\";\r\n                break;\r\n        }\r\n    }\r\n    return <p className=\"battler\" onClick={(e) => props.onClick(props.battler)}>\r\n        <b>{props.battler.name}</b> &nbsp;\r\n        <b>DP: </b> {props.battler.dp} | &nbsp;\r\n        <b>属性：</b>{attributeName}[{props.battler.getAttributePoint()}]\r\n        <span className={props.battler.isWeakState() ? \"\" : \"hidden\"}>| 弱点</span>\r\n        <span className={props.battler.isDead() ? \"\" : \"hidden\"}>| 死亡</span>\r\n    </p>\r\n}","import { Side } from \"../models/Side\";\r\nimport { BattlerView } from \"./BattlerView\";\r\nimport React from \"react\";\r\nimport { Battler } from \"../models/Battler\";\r\n\r\nexport function SideView(props: {side: Side, onBattlerClick: (b: Battler) => void}) {\r\n    return <div className=\"side-view\">\r\n        <p><b>HP:</b> {props.side.hp}</p>\r\n        <p><b>SP:</b> {props.side.sp}</p>\r\n        {props.side.battlers.map(battler => {\r\n            return <BattlerView battler={battler} key={battler.id} onClick={props.onBattlerClick}/>\r\n        })}\r\n    </div>\r\n}","import { Battler } from \"../models/Battler\";\r\nimport React from \"react\";\r\n\r\ninterface Props{\r\n    battlers: Battler[];\r\n    areas: [number, number][];\r\n    onTargetSelected: (n: [number, number]) => void;\r\n    onClose: () => void;\r\n}\r\n\r\nfunction BattlerRow(props: {onHover: (b: boolean, p: [number, number]) => void, onClick: (p: [number, number]) => void, x: number, battlers: Battler[], highlighted: boolean[]}) {\r\n    return <tr>\r\n        <BattlerCell onHover={props.onHover} onClick={props.onClick} x={props.x} y={0} battlers={props.battlers} highlighted={props.highlighted} />\r\n        <BattlerCell onHover={props.onHover} onClick={props.onClick} x={props.x} y={1} battlers={props.battlers} highlighted={props.highlighted} />\r\n    </tr>\r\n    \r\n\r\n}\r\n\r\nfunction BattlerCell(props: {onHover: (b: boolean, p: [number, number]) => void, onClick: (p: [number, number]) => void, x: number, y: number, battlers: Battler[], highlighted: boolean[]}) {\r\n    let pos = props.x * 2 + props.y;\r\n    return <td onMouseLeave={() => props.onHover(false, [props.x,props.y])} onMouseEnter={() => props.onHover(true, [props.x,props.y])} className={`${props.highlighted[pos] ? \"highlighted\" : \"\"} target-cell`} onClick={(e) => props.onClick([props.x, props.y])}>{props.battlers[pos] == null ? \"\" : props.battlers[pos].name}</td>\r\n}\r\n\r\n\r\n\r\nexport class TargetView extends React.Component<Props, {hoveredPosition: [number, number] | undefined}> {\r\n    constructor(props: Props) {\r\n        super(props);\r\n        this.state = {hoveredPosition: undefined};\r\n        this.onTargetSelected = this.onTargetSelected.bind(this);\r\n        this.onHover = this.onHover.bind(this);\r\n    }\r\n\r\n    onTargetSelected(pos: [number, number]) {\r\n        this.props.onTargetSelected(pos);\r\n    }\r\n\r\n    onHover(hovered: boolean, pos: [number, number])  {\r\n        if(hovered) {\r\n            this.setState({hoveredPosition: pos});\r\n        }\r\n        else {\r\n            this.setState((state) => {\r\n                if(state.hoveredPosition !== undefined && state.hoveredPosition[0] === pos[0] && state.hoveredPosition[1] === pos[1]) {\r\n                    return {hoveredPosition: undefined};\r\n                }\r\n                else{\r\n                    return {hoveredPosition: state.hoveredPosition};\r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        let highlighted : number[] = [];\r\n        if(this.state.hoveredPosition !== undefined) {\r\n            let bx = this.state.hoveredPosition[0];\r\n            let by = this.state.hoveredPosition[1];\r\n            this.props.areas.forEach((pos) => {\r\n                let x = bx + pos[0];\r\n                let y = by + pos[1];\r\n                if(x >= 0 && x <= 2 && y >= 0 && y <= 1) {\r\n                    highlighted.push(x * 2 + y);\r\n                }\r\n            })\r\n        }\r\n        let map = Array(6).fill(false);\r\n        highlighted.forEach(v => map[v] = true);\r\n        let battlerMap = Array(6).fill(null);\r\n        this.props.battlers.forEach(b => battlerMap[b.position] = b);\r\n        return <div className=\"modal target\">\r\n                <p className=\"modal-header\">\r\n                    <span className=\"modal-title\">选择目标</span>\r\n                    <button className=\"modal-close anchor-like-button\" onClick={(e) => this.props.onClose()}>[X]</button>\r\n                </p>\r\n                <table className=\"target-table\">\r\n                    <tbody>\r\n                    {\r\n                        [0,1,2].map(v => <BattlerRow key={v} onHover={this.onHover} onClick={this.onTargetSelected} x={v} battlers={battlerMap} highlighted={map}/>)\r\n                    }\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n    }\r\n}","import { Attribute } from \"../models/Attribute\";\r\n\r\nexport const ATTRIBUTE_NAME = {\r\n    [Attribute.Earth] : \"地\",\r\n    [Attribute.Electric] : \"电\",\r\n    [Attribute.Fire] : \"火\",\r\n    [Attribute.Water] : \"水\",\r\n    [Attribute.Wind] : \"风\"\r\n}","import { Attack } from \"../models/Action\";\r\nimport { ATTRIBUTE_NAME } from \"./AttributeName\";\r\nimport React from \"react\";\r\n\r\ninterface Props{\r\n    result: Attack;\r\n}\r\nexport function ResultView(props: Props) {\r\n    let attribute = null;\r\n    if(props.result.attributeDamageResult.attribute !== null) {\r\n        attribute = <React.Fragment>\r\n                <p>附加了 {props.result.attributeDamageResult.attributePointAttached} 点 {ATTRIBUTE_NAME[props.result.attributeDamageResult.attribute]} </p>\r\n                <p>{props.result.attributeDamageResult.knockedIntoWeak ? \"打入了弱点状态\" : \"\"} \r\n                 {props.result.attributeDamageResult.dpDamage > 0 ? `造成了${props.result.attributeDamageResult.dpDamage}点DP伤害` : \"\" } </p>\r\n            </React.Fragment>;\r\n    }\r\n    let damageMultipiler = null;\r\n    if(props.result.damageMultiplierResult !== null) {\r\n        damageMultipiler = <p>\r\n            伤害提升率上涨了: {props.result.damageMultiplierResult.multiplierAdded}\r\n        </p>\r\n    }\r\n    return <div>\r\n        <p>{props.result.action.user.name} 对 {props.result.target.name} 使用了 {props.result.action.data.name}</p>\r\n        <p>造成了 {props.result.hpDamageResult.hpDamage} 点伤害 {props.result.hpDamageResult.isDead ? \"对面已死亡\" : \"\"}</p>\r\n        {attribute}\r\n        {damageMultipiler}\r\n    </div>\r\n}","import { ActionData } from \"../models/ActionData\";\r\nimport React from \"react\";\r\n\r\n\r\ninterface Props{\r\n    action: ActionData;\r\n    onClicked: (action: ActionData) => void;\r\n}\r\n\r\nexport function ActionView(props: Props) {\r\n    return <p onClick={() => props.onClicked(props.action)} className=\"action\">\r\n        <span>{props.action.name}</span> \r\n        &nbsp;\r\n        <span><b>SP消耗:</b>{props.action.spCost}</span>\r\n    </p>\r\n\r\n}","import { ActionData } from \"../models/ActionData\";\r\nimport { ActionView } from \"./ActionView\";\r\nimport React from \"react\";\r\n\r\ninterface Props {\r\n    onActionSelectionClosed: () => void;\r\n    actionDatas: ActionData[];\r\n    onActionClicked: (action: ActionData) => void;\r\n}\r\nexport function ActionSelectionView(props: Props) {\r\n    return <div className=\"actions modal\"> \r\n        <p className=\"modal-header\">\r\n            <span className=\"modal-title\">选择行动：</span>\r\n            <button className=\"modal-close anchor-like-button\" onClick={() => props.onActionSelectionClosed()}>[X]</button>\r\n        </p>\r\n        {\r\n            props.actionDatas.map((action, id) => \r\n                <ActionView action={action} key={id} onClicked={() => props.onActionClicked(action)}/>)\r\n        }\r\n    </div>\r\n}","import { Action } from \"../models/Action\";\r\nimport React from \"react\";\r\n\r\ninterface Props{\r\n    actions: Action[];\r\n    onActionDeleted: (id: number) => void;\r\n}\r\nexport function ActionRecordsView(props: Props) {\r\n    return <div className=\"action-records\">\r\n        {\r\n            props.actions.map(action => <p key={action.id} className=\"action-record\">\r\n                <span>{action.user.name}</span>\r\n                <span className=\"action-record-action-name\">{action.data.name}</span>\r\n                <button className=\"anchor-like-button action-record-delete\" onClick={e=>{e.preventDefault(); props.onActionDeleted(action.id)} }>X</button>\r\n            </p>)\r\n        }\r\n    </div>\r\n}","import React from \"react\";\r\nimport { SideData } from \"../models/Side\";\r\nimport { ActionData } from \"../models/ActionData\";\r\nimport { Phase, BattleVM, InputtingPhase } from \"../viewmodels/BattleVM\";\r\nimport { Action, Attack } from \"../models/Action\";\r\nimport { Subscription } from \"rxjs\";\r\nimport { SideView } from \"./SideView\";\r\nimport { TargetView } from \"./TargetView\";\r\nimport { Battler } from \"../models/Battler\";\r\nimport { ResultView } from \"./ResultView\";\r\nimport { ActionSelectionView } from \"./ActionSelectionView\";\r\nimport { ActionRecordsView } from \"./ActionRecordsView\";\r\n\r\ninterface Props{\r\n    sideA: SideData | undefined;\r\n    sideB: SideData | undefined;\r\n    actionDatas: ActionData[] | undefined;\r\n}\r\ninterface State {\r\n    phase: Phase;\r\n    inputtingPhase: InputtingPhase;\r\n    actionResults: Attack[];\r\n    actions: Action[];\r\n}\r\n\r\nexport class BattleView extends React.Component<Props, State>{\r\n\r\n    private subscription : Subscription | undefined;\r\n    private battleVM : BattleVM | undefined;\r\n    private previousProps : Props | undefined;\r\n\r\n    constructor(props: Props) {\r\n        super(props);\r\n        this.state = {\r\n            phase: undefined,\r\n            inputtingPhase: undefined,\r\n            actionResults: [],\r\n            actions: []\r\n        }\r\n        this.onActionClicked = this.onActionClicked.bind(this);\r\n        this.onTargetSelected = this.onTargetSelected.bind(this);\r\n        this.onBattlerSelected = this.onBattlerSelected.bind(this);\r\n        this.onTargetSelectionClosed = this.onTargetSelectionClosed.bind(this);\r\n        this.onActionSelectionClosed = this.onActionSelectionClosed.bind(this);\r\n        this.onActionDeleted = this.onActionDeleted.bind(this);\r\n    }\r\n\r\n    createVM() {\r\n        this.subscription!.unsubscribe();\r\n        this.subscription = new Subscription();\r\n        this.battleVM = undefined;\r\n        if(this.props.sideA !== undefined && this.props.sideB !== undefined) {\r\n            this.battleVM = new BattleVM(this.props.sideA, this.props.sideB);\r\n            this.battleVM!.phase.subscribe(p => this.setState({phase: p}));\r\n            this.battleVM!.inputtingPhase.subscribe(p => this.setState({inputtingPhase: p}));\r\n            this.battleVM!.actionResults.subscribe(r => this.setState({actionResults: r}));\r\n            this.battleVM!.actions.subscribe(a => this.setState({actions: a}));\r\n        }\r\n    }\r\n\r\n    recreateBattleVM() {\r\n        if(this.previousProps !== this.props){\r\n\r\n            this.previousProps = this.props;\r\n\r\n            if(this.subscription !== undefined) {\r\n                this.subscription!.unsubscribe();\r\n                this.subscription = undefined;\r\n            }\r\n            \r\n            this.battleVM = undefined;\r\n            if(this.props.sideA !== undefined && this.props.sideB !== undefined) {\r\n                this.battleVM = new BattleVM(this.props.sideA, this.props.sideB);\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    registerSubscriptions() {\r\n        if(this.subscription === undefined && this.battleVM !== undefined) {\r\n            let d = [];\r\n            d[0] = this.battleVM!.phase.subscribe(p => this.setState({phase: p}));\r\n            d[1] = this.battleVM!.inputtingPhase.subscribe(p => this.setState({inputtingPhase: p}));\r\n            d[2] = this.battleVM!.actionResults.subscribe(r => this.setState({actionResults: r}));\r\n            d[3] = this.battleVM!.actions.subscribe(a => this.setState({actions: a}));\r\n            this.subscription = new Subscription();\r\n            d.forEach(d => this.subscription!.add(d));\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.registerSubscriptions();\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        this.registerSubscriptions();\r\n    }\r\n\r\n    onActionClicked(action: ActionData) {\r\n        this.battleVM!.addAction(action);\r\n    }\r\n\r\n    onTargetSelected(target: [number, number]) {\r\n        this.battleVM!.setTarget(target);\r\n    }\r\n\r\n    onBattlerSelected(battler: Battler) {\r\n        this.battleVM!.selectBattler(battler);\r\n    }\r\n\r\n    onEndTurn() {\r\n        this.battleVM!.endInputting();\r\n    }\r\n\r\n    onTargetSelectionClosed() {\r\n        this.battleVM!.cancelTargetSelection();\r\n    }\r\n\r\n    onActionSelectionClosed() {\r\n        this.battleVM!.cancelActionSelection();\r\n    }\r\n\r\n    onActionDeleted(id: number) {\r\n        this.battleVM!.onActionDeleted(id);\r\n    }\r\n\r\n    render() {\r\n        this.recreateBattleVM();\r\n        if(this.battleVM === undefined) {\r\n            return <React.Fragment/>\r\n        }\r\n        let actions = null;\r\n        console.log(this.state.inputtingPhase);\r\n        if(this.props.actionDatas !== undefined && this.state.inputtingPhase === \"decideAction\") {\r\n            actions = <ActionSelectionView onActionClicked={this.onActionClicked} actionDatas={this.props.actionDatas} onActionSelectionClosed={this.onActionSelectionClosed}\r\n            />\r\n        }\r\n        let target = null;\r\n        if(this.state.inputtingPhase === \"decideTarget\") {\r\n            target = <TargetView battlers={this.battleVM.targets!} onTargetSelected={this.onTargetSelected} areas={this.battleVM.inputtingAction!.targetArea} onClose={this.onTargetSelectionClosed}/>\r\n        }\r\n        return <div>\r\n            <SideView side={this.battleVM!.sideA} onBattlerClick={this.onBattlerSelected}/>\r\n            <SideView side={this.battleVM!.sideB} onBattlerClick={this.onBattlerSelected}/>\r\n            <ActionRecordsView actions={this.state.actions} onActionDeleted={this.onActionDeleted} />\r\n            {\r\n                this.state.phase === \"inputting\" ? <button onClick={() => this.onEndTurn()}>结束回合</button> : null\r\n            }\r\n            <div className={`modal-container ${actions !== null || target !== null ? \"show\" : \"\"}`}>                 \r\n                {\r\n                    actions !== null ? actions : <React.Fragment />\r\n                }\r\n                {\r\n                    target !== null ? target : <React.Fragment />\r\n                }\r\n\r\n            </div>\r\n            {\r\n                this.state.actionResults.map((result, key) => <ResultView key={key} result={result}/>)\r\n            }\r\n        </div>\r\n    }\r\n}","import React from \"react\";\r\nimport { EditView } from \"./EditView\";\r\nimport { SideData } from \"../models/Side\";\r\nimport { ActionData } from \"../models/ActionData\";\r\nimport { BattleView } from \"./BattleView\";\r\n\r\nexport class AppView extends React.Component<{}, {editHidden: boolean, sideViewHidden: boolean, sideA: SideData | undefined, sideB: SideData | undefined, actions: ActionData[]}>{\r\n\r\n    constructor(props: {}) {\r\n        super(props);\r\n        this.state = {editHidden: false, sideViewHidden: true, sideA: undefined, sideB: undefined, actions: []};\r\n        // this.state = {\r\n        //     editHidden: true,\r\n        //     sideViewHidden: false, \r\n        //     sideA: {hp: 100, sp:10, battlers: [{dp: 5, name: \"A\", id: 1, position: 1, attributeResistances: {0: 0, 1: 0, 2: 2, 3: 0, 4: 0}}]},\r\n        //     sideB: {hp: 80, sp:6, battlers: [{dp: 2, name: \"B\", id: 1, position: 2, attributeResistances: {0: 0, 1: 2, 2: 0, 3: 0, 4: 0}}]},\r\n        //     actions: [{targetArea: [[0, 0], [-1, 0], [-1, 1], [0, 1]], spCost: 2, hpDamage: 20, attribute: Attribute.Fire, attributeDamage: 1, name: \"XX\"}]\r\n        // }\r\n        this.onComplete = this.onComplete.bind(this);\r\n    }\r\n\r\n    onComplete(sideA:SideData, sideB: SideData, actions: ActionData[]) {\r\n        this.setState({editHidden: true, sideViewHidden: false, sideA: sideA, sideB: sideB, actions: actions});\r\n    }\r\n\r\n    render() {\r\n        return<div>\r\n            <div className={this.state.editHidden ? \"hidden\" : \"\"}>\r\n                <EditView onComplete={this.onComplete}  />\r\n            </div>\r\n            {\r\n                this.state.sideViewHidden ? <></> : \r\n                    <BattleView sideA={this.state.sideA} sideB={this.state.sideB} actionDatas={this.state.actions} />\r\n            }\r\n        </div>\r\n    }\r\n}","import React from 'react';\nimport './App.css';\nimport { AppView } from './views/AppView';\n\nconst App: React.FC = () => {\n    \n    return <AppView  />\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}