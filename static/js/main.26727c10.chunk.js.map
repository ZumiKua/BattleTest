{"version":3,"sources":["models/Attribute.ts","views/Field.tsx","views/PositionSelectionView.tsx","views/BattlerInfoView.tsx","views/SideInfoView.tsx","views/ActionInfoView.tsx","views/LoadView.tsx","views/EditView.tsx","models/Battler.ts","models/Side.ts","models/Action.ts","viewmodels/BattleVM.ts","views/AttributeName.ts","views/BattleFieldView.tsx","views/SideView.tsx","views/TargetView.tsx","views/ResultView.tsx","views/ActionView.tsx","views/ActionSelectionView.tsx","views/ActionRecordsView.tsx","views/BattleView.tsx","views/AppView.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["Attribute","Field","props","label","inputProps","Object","objectWithoutProperties","react_default","a","createElement","className","assign","PositionSelectionView","col","isLeft","map","x","key","rowSpan","y","currentPosition","onClick","onPositionChange","ATTRIBUTE_NAME","_ATTRIBUTE_NAME","defineProperty","Earth","Electric","Fire","Water","Wind","ICON_NAME","_ICON_NAME","BattlerInfoView","_React$Component","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleDpChange","bind","assertThisInitialized","handlePositionChange","handleNameChange","inherits","createClass","value","e","battler","copyBattler","dp","Number","parseInt","target","onBattlerChanged","pos","objectSpread","position","name","attribute","attributeResistances","id","_this2","type","onChange","handleAttributeChange","placeholder","onBattlerDeleted","React","Component","SideInfoView","side","maxBattlerId","handleHpChange","handleSpChange","addBattler","hp","sp","battlers","copySide","onSideChanged","_res","b","push","filter","BattlerInfoView_BattlerInfoView","handleBattlerChanged","deleteBattler","ActionInfoView","onAttributeChanged","onAttributeDamageChanged","onHpDamageChanged","onSpCostChanged","onNameChanged","onDpRecoveryChanged","onSpRecoveryChanged","onDefenceIncreaseChanged","action","targetArea","toConsumableArray","existed","findIndex","v","splice","onActionChanged","undefined","find","hpDamage","spCost","attributeDamage","dpRecovery","spRecovery","defenceIncrease","isAreaChecked","getCellClassName","handleAreaClicked","onActionDeleted","LoadView","aria-label","onClosed","saves","onLoad","onDelete","stopPropagation","META_ITEM","EditView","maxActionId","state","side2","actions","loadShowing","currentPage","handleSideChanged","handleSide2Changed","onAddAction","onComplete","setState","arr","index","data","savename","window","prompt","Date","toLocaleString","trim","names","stateString","JSON","stringify","namesString","localStorage","getItem","parse","confirm","setItem","alert","length","nameString","indexOf","removeItem","_this3","dataString","_this4","Fragment","preventDefault","SideInfoView_SideInfoView","ActionInfoView_ActionInfoView","onRemoveAction","react_router_dom","to","onSave","onLoadCanceled","onLoadSelected","onDeleteSave","Battler","maxDp","currentAttribute","weakState","thisTurnDpDamaged","defence","point","result","dpDamage","attributePointAttached","knockedIntoWeak","resist","oldDp","console","log","defended","applyHpDamage","FlatPosToXY","Math","floor","XYPosToFlat","Side","opponent","damageMultiplier","thisActionDamageMultiplier","damageMultiplierDelta","flatPosition","isDead","oldSp","ret","multiplierAdded","forEach","onTurnStart","Action","ad","user","targetSide","targets","attack","targetPoint","canUse","getBattler","onActionEnd","t","shift","Attack","hpDamageResult","spRecoveryResult","dpRecoveryResult","defenceIncreaseResult","damageMultiplierResult","attributeDamageResult","applySpRecovery","applyDpRecovery","applyDefenceIncrease","getCurrentAttribute","isWeakState","onDamageWeakState","applyAttributeDamage","BattleVM","sideA","sideB","_sideA","_sideB","_actions","_phase","_inputtingPhase","_actionResults","currentProcessingAction","_inputtingAction","_currentInputtingBattler","_nextActionId","setOpponent","BehaviorSubject","next","startTurn","checkInputting","inputtingPhase","Error","updateLoop","update","setTimeout","step","getCurrentAttack","_this$_actions$value$","slicedToArray","get","AttributeName_ATTRIBUTE_NAME","BattlerBriefView","onMouseEnter","enter","onMouseLeave","exit","BattlerDetailView","getAttributePoint","BattleFieldView","prevState","reduce","currentBattler","onEnterBattler","onExitBattler","onBattlerClick","SideView","isRed","BattleFieldView_BattleFieldView","BattlerCell","onEnter","onExit","highlighted","TargetView","hoveredPosition","onTargetSelected","_FlatPosToXY","_FlatPosToXY2","bx","by","areas","Array","fill","leftBattlersMap","rightBattlersMap","battlersLeft","battlersRight","isHighlighted","ResultView","concat","damageMultipiler","dpRcovery","defenceIncreasement","ActionView","onClicked","ActionSelectionView","onActionSelectionClosed","actionDatas","onActionClicked","ActionRecordsView","BattleView","subscription","battleVM","previousProps","phase","actionResults","onBattlerSelected","onTargetSelectionClosed","unsubscribe","Subscription","subscribe","p","r","d","add","registerSubscriptions","addAction","setTarget","selectBattler","endInputting","cancelTargetSelection","cancelActionSelection","recreateBattleVM","react_router","TargetView_TargetView","inputtingAction","onClose","onEndTurn","AppView","render","EditView_EditView","path","exact","BattleView_BattleView","App","AppView_AppView","Boolean","location","hostname","match","ReactDOM","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.26727c10.chunk.js","sourcesContent":["export enum Attribute{\r\n    Fire, Water, Earth, Wind, Electric\r\n}","import React from \"react\";\r\ninterface Props{\r\n    label: string;\r\n    [x:string] :any;\r\n}\r\nexport function Field(props: Props) {\r\n    let {label, ...inputProps} = props;\r\n    return <div className=\"field is-horizontal\">\r\n        <div className=\"field-label\">\r\n            <label className=\"label\">{label}</label>\r\n        </div>\r\n        <div className=\"field-body\">\r\n            <div className=\"field\">\r\n                <div className=\"control\">\r\n                    <input className=\"input\" {...inputProps}/>\r\n                </div>\r\n                \r\n            </div>\r\n        </div>\r\n        \r\n    </div>\r\n}","import React from \"react\";\r\ntype Pos = 0|1|2|3|4|5;\r\n\r\ninterface Props {\r\n    onPositionChange: (int: Pos) => void;\r\n    currentPosition: Pos;\r\n    isLeft: boolean;\r\n}\r\nexport function PositionSelectionView(props: Props) {\r\n    const col = props.isLeft ? [0, 1] : [1, 0];\r\n\r\n    return <table className=\"position-selector\">\r\n        <tbody>\r\n            {\r\n                [0,1,2].map(x => <tr key={x}>\r\n                    {\r\n                        (x === 0 && !props.isLeft) ? <td className=\"frontline\" rowSpan={3}>前线</td> : null\r\n                    }\r\n                    {\r\n                        col.map(y => <td key={y} className={x * 2 + y === props.currentPosition ? \"selected\" : \"\"} onClick={() => props.onPositionChange((x * 2 + y) as Pos) }></td>)\r\n                    }\r\n                    {\r\n                        (x === 0 && props.isLeft) ? <td className=\"frontline\" rowSpan={3}>前线</td> : null\r\n                    }\r\n                </tr>)\r\n            }\r\n        </tbody>\r\n    </table>\r\n}","import React, { ChangeEvent } from \"react\";\r\nimport { Attribute } from \"../models/Attribute\";\r\nimport { BattlerData, Position } from \"../models/Battler\";\r\nimport { Field } from \"./Field\";\r\nimport { PositionSelectionView } from \"./PositionSelectionView\";\r\n\r\nconst ATTRIBUTE_NAME = {\r\n    [Attribute.Earth]: \"土\",\r\n    [Attribute.Electric]: \"电\",\r\n    [Attribute.Fire]: \"火\",\r\n    [Attribute.Water]: \"水\",\r\n    [Attribute.Wind]: \"风\"\r\n}\r\nconst ICON_NAME = {\r\n    [Attribute.Earth]: \"fa-mountain\",\r\n    [Attribute.Electric]: \"fa-bolt\",\r\n    [Attribute.Fire]: \"fa-fire\",\r\n    [Attribute.Water]: \"fa-tint\",\r\n    [Attribute.Wind]: \"fa-wind\"\r\n}\r\n\r\ninterface Props{\r\n    isLeft: boolean;\r\n    battler: BattlerData;\r\n    onBattlerChanged: (battler: BattlerData) => void;\r\n    onBattlerDeleted: () => void\r\n}\r\n\r\nexport class BattlerInfoView extends React.Component<Props, {}>{\r\n    constructor(props: Props) {\r\n        super(props);\r\n        this.handleDpChange = this.handleDpChange.bind(this);\r\n        this.handlePositionChange = this.handlePositionChange.bind(this);\r\n        this.handleNameChange = this.handleNameChange.bind(this);\r\n        \r\n    }\r\n\r\n    handleDpChange(e: ChangeEvent<HTMLInputElement>) {\r\n        let battler = this.copyBattler(this.props.battler);\r\n        battler.dp = Number.parseInt(e.target.value);\r\n        this.props.onBattlerChanged(battler);\r\n    }\r\n\r\n    handlePositionChange(pos: Position) {\r\n        let battler = {...this.props.battler, position: pos};\r\n        this.props.onBattlerChanged(battler);\r\n    }\r\n\r\n    handleNameChange(e: ChangeEvent<HTMLInputElement>) {\r\n        let battler = this.copyBattler(this.props.battler);\r\n        battler.name = e.target.value;\r\n        this.props.onBattlerChanged(battler);\r\n    }\r\n\r\n    handleAttributeChange(attribute: Attribute, e: ChangeEvent<HTMLInputElement>) {\r\n        let battler = this.copyBattler(this.props.battler);\r\n        battler.attributeResistances[attribute] = Number.parseInt(e.target.value);\r\n        this.props.onBattlerChanged(battler);\r\n    }\r\n\r\n    copyBattler(battler: BattlerData) : BattlerData{\r\n        return {dp: battler.dp, id: battler.id, name: battler.name, position: battler.position, attributeResistances: battler.attributeResistances};\r\n    }\r\n\r\n    render() {\r\n        return <div className=\"battler-info-view\">\r\n            <Field label=\"DP:\" type=\"number\" onChange={this.handleDpChange} value={this.props.battler.dp} />\r\n            <div className=\"field is-horizontal\">\r\n                <div className=\"field-label is-normal\">\r\n                    <label className=\"label\">位置</label>\r\n                </div>\r\n                <div className=\"field-body\">\r\n                    <PositionSelectionView isLeft={this.props.isLeft} currentPosition={this.props.battler.position} onPositionChange={pos => this.handlePositionChange(pos)}/>\r\n                </div>\r\n            </div>\r\n            <Field label=\"名称:\" type=\"text\" onChange={this.handleNameChange} value={this.props.battler.name} />\r\n        \r\n            <div className=\"field is-horizontal\">\r\n                <div className=\"field-label\">\r\n                    <label className=\"label\">抗性</label>\r\n                </div>\r\n                <div className=\"field-body\">\r\n                    {\r\n                        [Attribute.Earth, Attribute.Electric, Attribute.Fire, Attribute.Water, Attribute.Wind].map((attribute: Attribute) => {\r\n                            return <div className=\"field\" key={attribute}>\r\n                                <p className=\"control has-icons-left\">\r\n                                    <input type=\"number\" className=\"input\" value={this.props.battler.attributeResistances[attribute]} onChange={this.handleAttributeChange.bind(this, attribute)} placeholder={ATTRIBUTE_NAME[attribute]}/>\r\n                                    <span className=\"icon is-small is-left\">\r\n                                        <i className={\"fas \" + ICON_NAME[attribute]}></i>\r\n                                    </span>\r\n                                </p>\r\n                            </div>\r\n                        })\r\n                    }\r\n                </div>\r\n            </div>\r\n        \r\n            <div className=\"is-grouped-right is-grouped field\">\r\n                <div className=\"control\">\r\n                    <button className=\"button is-danger\" onClick={this.props.onBattlerDeleted}>删除</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    }\r\n\r\n    \r\n}","import React, { ReactNode, ChangeEvent } from \"react\";\r\nimport { BattlerData } from \"../models/Battler\";\r\nimport { BattlerInfoView } from \"./BattlerInfoView\";\r\nimport { SideData } from \"../models/Side\";\r\nimport { Attribute } from \"../models/Attribute\";\r\nimport { Field } from \"./Field\";\r\n\r\ninterface Props{\r\n    isLeft: boolean;\r\n    side: SideData;\r\n    onSideChanged: (side: SideData) => void;\r\n}\r\n\r\nexport class SideInfoView extends React.Component<Props, {}>{\r\n\r\n    side: SideData;\r\n    maxBattlerId: number;\r\n\r\n    constructor(props : Props) {\r\n        super(props);\r\n        this.handleHpChange = this.handleHpChange.bind(this);\r\n        this.handleSpChange = this.handleSpChange.bind(this);\r\n        this.addBattler = this.addBattler.bind(this);\r\n        this.side = {hp: 0, sp: 0, battlers: []};\r\n        this.maxBattlerId = 0;\r\n    }\r\n\r\n    handleHpChange(e: ChangeEvent<HTMLInputElement>) {\r\n        let side = this.copySide(this.props.side);\r\n        side.hp = Number.parseInt(e.target.value);\r\n        this.props.onSideChanged(side);\r\n    }\r\n\r\n    handleSpChange(e: ChangeEvent<HTMLInputElement>) {\r\n        let side = this.copySide(this.props.side);\r\n        side.sp = Number.parseInt(e.target.value);\r\n        this.props.onSideChanged(side);\r\n    }\r\n\r\n    handleBattlerChanged(id: number, battler: BattlerData) {\r\n        let side = this.copySide(this.props.side);\r\n        let battlers = side.battlers;\r\n        battlers[id] = battler;\r\n        this.props.onSideChanged(side);\r\n    }\r\n\r\n    addBattler() {\r\n        let side = this.copySide(this.props.side);\r\n        let battlers = side.battlers;\r\n        let res = {[Attribute.Earth]: 0, [Attribute.Electric]: 0, [Attribute.Fire]: 0, [Attribute.Water]: 0, [Attribute.Wind]: 0};\r\n        let b: BattlerData = {dp: 0, name: \"\", attributeResistances: res, id: this.maxBattlerId++, position: 0};\r\n        battlers.push(b);\r\n        this.props.onSideChanged(side);\r\n    }\r\n\r\n    deleteBattler(id: number) {\r\n        let battlers = this.props.side.battlers.filter(b => b.id !== id);\r\n        this.props.onSideChanged({...this.props.side, battlers});\r\n        \r\n\r\n    }\r\n\r\n    copySide(side: SideData) : SideData {\r\n        this.side.hp = side.hp;\r\n        this.side.sp = side.sp;\r\n        this.side.battlers = side.battlers;\r\n        return this.side;\r\n    }\r\n\r\n    render(): ReactNode{\r\n        return <div className=\"column\">\r\n            <div className=\"side-info-view\">\r\n                <Field label=\"HP:\" className=\"input\" type=\"number\" onChange={this.handleHpChange} value={this.props.side.hp}/>\r\n                <Field label=\"AP:\" className=\"input\" type=\"number\" onChange={this.handleSpChange} value={this.props.side.sp}/>\r\n                <div className=\"battlers-view\">\r\n                    <label className=\"label\">角色：</label>\r\n                    {\r\n                        this.props.side.battlers.map((b, id) => {\r\n                            return <BattlerInfoView isLeft={this.props.isLeft} battler={b} onBattlerChanged={this.handleBattlerChanged.bind(this, id) } onBattlerDeleted={() => this.deleteBattler(b.id)} key={b.id}/>\r\n                        })\r\n                    }\r\n                    <button className=\"button\" onClick={this.addBattler}>添加角色</button>\r\n                </div>\r\n            </div>\r\n            \r\n\r\n        </div>\r\n    }\r\n}","import React, { ChangeEvent } from \"react\";\r\nimport { ActionData } from \"../models/ActionData\";\r\nimport { Attribute } from \"../models/Attribute\";\r\nimport { Field } from \"./Field\";\r\n\r\ninterface Props{\r\n    action: ActionData;\r\n    onActionChanged: (action: ActionData) => void;\r\n    onActionDeleted: () => void;\r\n}\r\n\r\nexport class ActionInfoView extends React.Component<Props> {\r\n\r\n    constructor(props: Props) {\r\n        super(props);\r\n        this.onAttributeChanged = this.onAttributeChanged.bind(this);\r\n        this.onAttributeDamageChanged = this.onAttributeDamageChanged.bind(this);\r\n        this.onHpDamageChanged = this.onHpDamageChanged.bind(this);\r\n        this.onSpCostChanged = this.onSpCostChanged.bind(this);\r\n        this.onNameChanged = this.onNameChanged.bind(this);\r\n        this.onDpRecoveryChanged = this.onDpRecoveryChanged.bind(this);\r\n        this.onSpRecoveryChanged = this.onSpRecoveryChanged.bind(this);\r\n        this.onDefenceIncreaseChanged = this.onDefenceIncreaseChanged.bind(this);\r\n    }\r\n\r\n    handleAreaClicked(x: number, y: number) {\r\n        let action = {...this.props.action, targetArea: [...this.props.action.targetArea]};\r\n        let existed = action.targetArea.findIndex(v => v[0] === x && v[1] === y);\r\n        if(existed >= 0) {\r\n            action.targetArea.splice(existed, 1);\r\n        }\r\n        else{\r\n            action.targetArea.push([x, y]);\r\n        }\r\n        this.props.onActionChanged(action);\r\n    }\r\n\r\n    isAreaChecked(x: number, y: number) {\r\n        return this.props.action.targetArea.find(v => v[0] === x && v[1] === y) !== undefined;\r\n    }\r\n\r\n    onAttributeChanged(e: ChangeEvent<HTMLSelectElement>) {\r\n        let action = {...this.props.action, attribute: Number.parseInt(e.target.value)};\r\n        this.props.onActionChanged(action);\r\n    }\r\n\r\n    onHpDamageChanged(e: ChangeEvent<HTMLInputElement>) {\r\n        let action = {...this.props.action, hpDamage: Number.parseInt(e.target.value)};\r\n        this.props.onActionChanged(action);\r\n    }\r\n\r\n    onSpCostChanged(e: ChangeEvent<HTMLInputElement>) {\r\n        let action = {...this.props.action, spCost: Number.parseInt(e.target.value)};\r\n        this.props.onActionChanged(action);\r\n    }\r\n\r\n    onAttributeDamageChanged(e: ChangeEvent<HTMLInputElement>) {\r\n        let action = {...this.props.action, attributeDamage: Number.parseInt(e.target.value)};\r\n        this.props.onActionChanged(action);\r\n    }\r\n\r\n    onNameChanged(e: ChangeEvent<HTMLInputElement>) {\r\n        let action = {...this.props.action, name: e.target.value};\r\n        this.props.onActionChanged(action);\r\n    }\r\n\r\n    onDpRecoveryChanged(e: ChangeEvent<HTMLInputElement>) {\r\n        let action = {...this.props.action, dpRecovery: Number.parseInt(e.target.value)};\r\n        this.props.onActionChanged(action);\r\n    }\r\n\r\n    onSpRecoveryChanged(e: ChangeEvent<HTMLInputElement>) {\r\n        let action = {...this.props.action, spRecovery: Number.parseInt(e.target.value)};\r\n        this.props.onActionChanged(action);\r\n    }\r\n\r\n    onDefenceIncreaseChanged(e: ChangeEvent<HTMLInputElement>) {\r\n        let action = {...this.props.action, defenceIncrease: Number.parseInt(e.target.value)};\r\n        this.props.onActionChanged(action);\r\n    }\r\n\r\n    getCellClassName(x: number, y: number) {\r\n        return \"action-info-target-cell\" + (this.isAreaChecked(x,y) ? \" checked\" : \"\") + (x === 0 && y === 0 ? \" center\" : \"\");\r\n    }\r\n\r\n    render() {\r\n        return <div className=\"action-view\">\r\n            <Field label=\"名称\"  type=\"text\" value={this.props.action.name} onChange={this.onNameChanged} />\r\n            <Field label=\"HP伤害\" type=\"number\" value={this.props.action.hpDamage} onChange={this.onHpDamageChanged} />\r\n            <Field label=\"SP消耗\" type=\"number\" value={this.props.action.spCost} onChange={this.onSpCostChanged} />\r\n            <Field label=\"属性伤害\" type=\"number\" value={this.props.action.attributeDamage} onChange={this.onAttributeDamageChanged} />\r\n            <Field label=\"DP回复\" type=\"number\" value={this.props.action.dpRecovery} onChange={this.onDpRecoveryChanged} />\r\n            <Field label=\"AP回复\" type=\"number\" value={this.props.action.spRecovery} onChange={this.onSpRecoveryChanged} />\r\n            <Field label=\"防御值增加\" type=\"number\" value={this.props.action.defenceIncrease} onChange={this.onDefenceIncreaseChanged} />\r\n            <div className=\"field is-horizontal\">\r\n                <div className=\"field-label is-normal\">\r\n                    <label className=\"label\">属性</label>\r\n                </div>\r\n                <div className=\"field-body\">\r\n                    <div className=\"field\">\r\n                        <div className=\"control\">\r\n                            <div className=\"select is-fullwidth\">\r\n                                <select onChange={this.onAttributeChanged} value={this.props.action.attribute}>\r\n                                    <option value={Attribute.Earth}>土</option>\r\n                                    <option value={Attribute.Electric}>电</option>\r\n                                    <option value={Attribute.Fire}>火</option>\r\n                                    <option value={Attribute.Water}>水</option>\r\n                                    <option value={Attribute.Wind}>风</option>\r\n                                </select> \r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"field is-horizontal\">\r\n                <div className=\"field-label is-normal\">\r\n                    <label className=\"label\">目标范围</label>\r\n                </div>\r\n                <div className=\"field-body\">\r\n                    <table className=\"action-info-target-table\">\r\n                        <tbody>\r\n                        {\r\n                            [-2,-1,0,1,2].map(x => {\r\n                                return <tr key={x}>\r\n                                    {[-2,-1,0,1,2].map(y => <td className={this.getCellClassName(x,y)} key={y} onClick={(v) => this.handleAreaClicked(x, y, )}></td>)}\r\n                                </tr>\r\n                            })\r\n                        }\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n            </div>\r\n            <div className=\"is-grouped-right is-grouped field\">\r\n                <div className=\"control\">\r\n                    <button className=\"button is-danger\" onClick={this.props.onActionDeleted}>删除</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    }\r\n}","import React from \"react\";\r\ninterface Props{\r\n    saves: string[];\r\n    onClosed: () => void;\r\n    onLoad: (name: string) => void;\r\n    onDelete: (name: string) => void;\r\n}\r\n\r\nexport function LoadView(props: Props) {\r\n    return <div className=\"modal is-active\">\r\n        <div className=\"modal-background\"></div>\r\n        <div className=\"modal-card\">\r\n            <header className=\"modal-card-head\">\r\n                <p className=\"modal-card-title\">\r\n                    读取存档\r\n                </p>\r\n                <button className=\"delete\" aria-label=\"close\" onClick={props.onClosed}></button>\r\n            </header>\r\n            <section className=\"modal-card-body\">\r\n                <div className=\"content\">\r\n                    <ol>\r\n                        {\r\n                            props.saves.map((name, id) => \r\n                                <li className=\"load-name\" key={id} onClick={() => props.onLoad(name)}><span>{name}</span> <button className=\"delete\" onClick={(e) => {props.onDelete(name); e.stopPropagation();}}></button></li>\r\n                            )\r\n                        }\r\n                    </ol>\r\n                </div>\r\n            </section>\r\n        </div>\r\n    </div>\r\n}","import React from \"react\";\r\nimport { SideInfoView } from \"./SideInfoView\";\r\nimport { SideData } from \"../models/Side\";\r\nimport { ActionData } from \"../models/ActionData\";\r\nimport { ActionInfoView } from \"./ActionInfoView\";\r\nimport { Attribute } from \"../models/Attribute\";\r\nimport { LoadView } from \"./LoadView\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst META_ITEM = \"_saveMetaItem_V2\";\r\n\r\ninterface SaveData{\r\n    side: SideData;\r\n    side2: SideData;\r\n    actions: ActionData[];\r\n}\r\n\r\ninterface Props{\r\n    onComplete: (sideA: SideData, sideB: SideData, actions: ActionData[]) => void;\r\n}\r\n\r\ninterface Action {\r\n    data: ActionData;\r\n    id: number;\r\n}\r\n\r\ninterface State{\r\n    side: SideData;\r\n    side2: SideData;\r\n    actions: Action[];\r\n    loadShowing: boolean;\r\n    saves: string[];\r\n    currentPage: \"sides\" | \"actions\";\r\n}\r\n\r\nexport class EditView extends React.Component<Props, State>{\r\n\r\n    maxActionId: number;\r\n\r\n    constructor(props: Props) {\r\n        super(props);\r\n        this.state = {\r\n            side: {hp: 0, sp: 0, battlers: []},\r\n            side2: {hp:0, sp:0, battlers: []},\r\n            actions: [],\r\n            loadShowing: false,\r\n            saves: [],\r\n            currentPage: \"sides\" \r\n        }\r\n        this.maxActionId = 0;\r\n        this.handleSideChanged = this.handleSideChanged.bind(this);\r\n        this.handleSide2Changed = this.handleSide2Changed.bind(this);\r\n        this.onAddAction = this.onAddAction.bind(this);\r\n        this.onComplete = this.onComplete.bind(this);\r\n    }\r\n\r\n    handleSideChanged(side: SideData) {\r\n        this.setState({side: side});\r\n    }\r\n\r\n    handleSide2Changed(side: SideData) {\r\n        this.setState({side2: side});\r\n    }\r\n\r\n    onActionChanged(id: number, action: ActionData) {\r\n        this.setState((state) => {\r\n            let arr = [...state.actions];\r\n            const index = arr.findIndex(v=> v.id === id);\r\n            arr[index] = {...arr[index], data: action};\r\n            return {actions: arr};\r\n        })\r\n    }\r\n\r\n    onAddAction() {\r\n        this.setState((state) => {\r\n            let arr = [...state.actions];\r\n            arr.push({id: this.maxActionId++, data: {hpDamage: 0, spCost: 0, attribute: Attribute.Earth, attributeDamage: 0, targetArea: [], name: \"\", spRecovery: 0, dpRecovery: 0, defenceIncrease: 0}});\r\n            return {actions: arr};\r\n        })\r\n    }\r\n\r\n    onRemoveAction(id: number) {\r\n        this.setState((state) => {\r\n            const actions = [...state.actions];\r\n            const index = actions.findIndex(v => v.id === id);\r\n            if(index !== -1) {\r\n                actions.splice(index, 1);\r\n            }\r\n            return {actions};\r\n        });\r\n    }\r\n\r\n    onComplete() {\r\n        this.props.onComplete(this.state.side, this.state.side2, this.state.actions.map(v=>v.data));\r\n    }\r\n\r\n    onSave() {\r\n        let savename = window.prompt(\"存档名称（同名会自动覆盖）\", new Date().toLocaleString());\r\n        if(savename === null) {\r\n            return;\r\n        }\r\n        savename = savename.trim();\r\n        if(savename === \"\") {\r\n            return;\r\n        }\r\n        if(savename === META_ITEM) {\r\n            window.alert(\"非法名称\");\r\n            return;\r\n        }\r\n        //todo remove actions id.\r\n        const stateString = JSON.stringify({side: this.state.side, side2: this.state.side2, actions: this.state.actions.map(v => v.data)});\r\n        const namesString = localStorage.getItem(META_ITEM);\r\n        let names: string[];\r\n        if(namesString === null) {\r\n            names = [];\r\n        }else{\r\n            names = JSON.parse(namesString) as string[];\r\n        }\r\n        if(names.findIndex(x => x === savename) !== -1) {\r\n            if(window.confirm(\"存在同名存档，是否覆盖？\") === false) {\r\n                return;\r\n            }\r\n        }else{\r\n            names.push(savename);\r\n        }\r\n        localStorage.setItem(META_ITEM, JSON.stringify(names));\r\n        localStorage.setItem(savename, stateString);\r\n    }\r\n\r\n    onLoad() {\r\n        const namesString = localStorage.getItem(META_ITEM);\r\n        if(namesString === null) {\r\n            alert(\"无存档\");\r\n            return;\r\n        }\r\n        let names = JSON.parse(namesString) as string[];\r\n        if(names.length === 0) {\r\n            alert(\"无存档\");\r\n            return;\r\n        }\r\n        this.setState({\r\n            loadShowing: true,\r\n            saves: names\r\n        });\r\n    }\r\n\r\n    onLoadCanceled() {\r\n        this.setState({loadShowing: false})\r\n    }\r\n\r\n    onDeleteSave(name: string) {\r\n        const nameString = localStorage.getItem(META_ITEM);\r\n        if(nameString === null) {\r\n            alert(\"读取错误！\");\r\n            this.setState({loadShowing: false});\r\n            return;\r\n        }\r\n        let names = JSON.parse(nameString) as string[];\r\n        const index = names.indexOf(name);\r\n        if(index === -1) {\r\n            alert(\"读取错误！\");\r\n            this.setState({loadShowing: false});\r\n            return;\r\n        }\r\n        names.splice(index, 1);\r\n\r\n        localStorage.setItem(META_ITEM, JSON.stringify(names));\r\n        localStorage.removeItem(name);\r\n\r\n        if(names.length === 0) {\r\n            this.setState({\r\n                loadShowing: false,\r\n                saves: names\r\n            });\r\n        }\r\n        else {\r\n            this.setState({\r\n                loadShowing: true,\r\n                saves: names\r\n            });\r\n        }\r\n    }\r\n\r\n    onLoadSelected(name: string) { \r\n        const dataString = localStorage.getItem(name);\r\n        if(dataString === null) {\r\n            alert(\"读取错误！\");\r\n            this.setState({loadShowing: false});\r\n            return;\r\n        }\r\n        const data = JSON.parse(dataString) as SaveData;\r\n        this.setState({\r\n            loadShowing: false,\r\n            side: data.side,\r\n            side2: data.side2,\r\n            actions: data.actions.map(v => ({id: this.maxActionId++, data: v}))\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return <React.Fragment>\r\n            <div className=\"container\">\r\n                <div className=\"tabs\">\r\n                    <ul>\r\n                        <li className={this.state.currentPage === \"sides\" ? \"is-active\" : \"\"}>\r\n                            <a onClick={(e) => {e.preventDefault(); this.setState({currentPage: \"sides\"});}}>角色</a>\r\n                        </li>\r\n                        <li className={this.state.currentPage === \"actions\" ? \"is-active\" : \"\"}>\r\n                            <a onClick={(e) => {e.preventDefault(); this.setState({currentPage: \"actions\"});}}>行为</a>\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n                {\r\n                    this.state.currentPage === \"sides\" ? \r\n                        <div className=\"sides-view\">\r\n                            <div className=\"columns edit-view-troop-headers\">\r\n                                <div className=\"column edit-view-troop-header red\"><p>红方</p></div>\r\n                                <div className=\"column edit-view-troop-header blue\"><p>蓝方</p></div>\r\n                            </div>\r\n                            \r\n                            <div className=\"columns side-info-views\">\r\n                                <SideInfoView side={this.state.side} onSideChanged={this.handleSideChanged} isLeft={true}/>\r\n                                \r\n                                <SideInfoView side={this.state.side2} onSideChanged={this.handleSide2Changed} isLeft={false}/>\r\n                            </div>\r\n                        </div> \r\n                    :\r\n                         null\r\n                }\r\n                \r\n\r\n                {\r\n                    this.state.currentPage === \"actions\" ? \r\n                        <div className=\"actions-view\">\r\n                            {\r\n                                this.state.actions.map((action) => {\r\n                                    return <ActionInfoView action={action.data} onActionChanged={this.onActionChanged.bind(this, action.id)} key={action.id} onActionDeleted={() => this.onRemoveAction(action.id)}/>\r\n                                })\r\n                            }\r\n                            <div className=\"field\">\r\n                                <button className=\"button\" onClick={this.onAddAction}>添加</button>\r\n                            </div>\r\n                            \r\n                        </div>\r\n                    :\r\n                        null\r\n                }\r\n                \r\n                <div className=\"footer-view field is-grouped\">\r\n                    <p className=\"control\">\r\n                        <Link className=\"button is-primary\" to=\"/battle\" onClick={this.onComplete}>完成</Link>\r\n                    </p>\r\n                    <p className=\"control\">\r\n                        <button className=\"button\" onClick={() => this.onSave()}>保存</button>\r\n                    </p>\r\n                    <p className=\"control\">\r\n                        <button className=\"button\" onClick={() => this.onLoad()}>读取</button>\r\n                    </p>\r\n                    \r\n                </div>\r\n            </div>\r\n            {\r\n                this.state.loadShowing ? \r\n                    <LoadView saves={this.state.saves} onClosed={() => this.onLoadCanceled()} onLoad={(name) => this.onLoadSelected(name)} onDelete={(name) => this.onDeleteSave(name)}/> : null\r\n            }\r\n        </React.Fragment>\r\n    }\r\n\r\n}","import {Attribute} from \"./Attribute\"\r\nimport { Side, HpDamageResult as SideHpDamageResult } from \"./Side\";\r\nexport class Battler{\r\n    maxDp: number;\r\n    dp: number;\r\n    attributeResistances: {[key in Attribute]: number}\r\n    side: Side;\r\n    private currentAttribute: {attribute: Attribute | null, point: number}\r\n    private weakState: boolean;\r\n    private thisTurnDpDamaged: boolean;\r\n    position: Position;\r\n    name: string;\r\n    id: number;\r\n    defence: number;\r\n\r\n    constructor(side: Side, data: BattlerData) {\r\n        this.position = data.position;\r\n        this.side = side;\r\n        this.dp = data.dp;\r\n        this.maxDp = data.dp;\r\n        this.attributeResistances = data.attributeResistances;\r\n        this.currentAttribute = {attribute: null, point: 0};\r\n        this.weakState = false;\r\n        this.thisTurnDpDamaged = false;\r\n        this.name = data.name;\r\n        this.id = data.id;\r\n        this.defence = 0;\r\n    }\r\n\r\n    getCurrentAttribute() : Attribute | null { \r\n        return this.currentAttribute.attribute;\r\n    }\r\n\r\n    getAttributePoint(): number {\r\n        return this.currentAttribute.point;\r\n    }    \r\n\r\n    applyAttributeDamage(attribute: Attribute, attributeDamage: number): AttributeDamageResult{\r\n        let result: AttributeDamageResult = {dpDamage: 0, attributePointAttached: 0, knockedIntoWeak: false, attribute: null};\r\n        \r\n        if(this.weakState && !this.thisTurnDpDamaged) {\r\n            result.dpDamage = 1;\r\n            this.dp -= 1;\r\n            this.thisTurnDpDamaged = true;\r\n        }\r\n        if(this.weakState) {\r\n            //in weak state, attribute point won't increase anymore.\r\n            return result;\r\n        }\r\n        result.attribute = attribute;\r\n        result.attributePointAttached = attributeDamage;\r\n        if(this.currentAttribute.attribute === attribute) {\r\n            this.currentAttribute.point += attributeDamage;\r\n        }\r\n        else{\r\n            this.currentAttribute.attribute = attribute;\r\n            this.currentAttribute.point = attributeDamage;\r\n        }\r\n        let resist = this.attributeResistances[attribute];\r\n        if(resist !== 0 && resist <= this.currentAttribute.point) {\r\n            this.weakState = true;\r\n            this.currentAttribute.point = 0;\r\n            result.knockedIntoWeak = true;\r\n        }\r\n        return result;\r\n    }\r\n\r\n    applyDpRecovery(dpRecovery: number): DpRecoveryResult {\r\n        const oldDp = this.dp;\r\n        this.dp += dpRecovery;\r\n        if(this.dp >= this.maxDp){\r\n            this.dp = this.maxDp;\r\n        }\r\n        if(this.dp < 0) {\r\n            this.dp = 0;\r\n        }\r\n        \r\n        return this.dp - oldDp;\r\n    }\r\n\r\n    applyDefenceIncrease(defenceIncrease: number): DefenceIncreaseResult {\r\n        this.defence += defenceIncrease;\r\n        console.log(this, defenceIncrease);\r\n        return defenceIncrease;\r\n    }\r\n\r\n    applyHpDamage(hpDamage: number): HpDamageResult {\r\n        let defended;\r\n        if(this.defence < hpDamage) {\r\n            defended = this.defence;\r\n            hpDamage -= this.defence;\r\n            this.defence = 0;\r\n            \r\n        }\r\n        else{\r\n            this.defence -= hpDamage;\r\n            defended = hpDamage;\r\n            hpDamage = 0;\r\n        }\r\n        return {...this.side.applyHpDamage(hpDamage), defended};\r\n        \r\n    }\r\n\r\n    onTurnStart() : void{\r\n        this.thisTurnDpDamaged = false;\r\n        this.weakState = false;\r\n        this.defence = 0;\r\n    }\r\n\r\n    isDead() : boolean {\r\n        return this.dp <= 0;\r\n    }\r\n\r\n    isWeakState(): boolean {\r\n        return this.weakState;\r\n    }\r\n}\r\nexport interface AttributeDamageResult{\r\n    knockedIntoWeak: boolean;\r\n    dpDamage: number;\r\n    attribute: Attribute | null;\r\n    attributePointAttached: number;\r\n}\r\nexport interface BattlerData{\r\n    name: string;\r\n    dp: number;\r\n    id: number;\r\n    attributeResistances: {[key in Attribute]: number};\r\n    position: 0|1|2|3|4|5;\r\n}\r\nexport type Position = 0|1|2|3|4|5;\r\nexport function FlatPosToXY(pos: Position) : [0|1|2, 0|1]{\r\n    return [Math.floor(pos / 2), pos % 2] as [0|1|2, 0|1];\r\n}\r\n\r\nexport function XYPosToFlat(x: 0|1|2, y: 0|1): Position {\r\n    return x * 2 + y as Position;\r\n}\r\n\r\nexport interface HpDamageResult extends SideHpDamageResult{\r\n    defended: number;\r\n}\r\n\r\nexport type DpRecoveryResult = number;\r\nexport type DefenceIncreaseResult = number;","import { Battler, BattlerData } from \"./Battler\";\r\nimport { Action } from \"./Action\";\r\n\r\nexport class Side{\r\n    \r\n    opponent: Side | null;\r\n    damageMultiplier: number;\r\n    thisActionDamageMultiplier: number;\r\n    damageMultiplierDelta: number;\r\n    battlers: Battler[];\r\n    hp: number;\r\n    sp: number;\r\n    \r\n    constructor(data: SideData) {\r\n        this.battlers = data.battlers.map(v => new Battler(this, v));\r\n        this.damageMultiplier = 1.0;\r\n        this.thisActionDamageMultiplier = 1.0;\r\n        this.damageMultiplierDelta = 0.2;\r\n        this.opponent = null;\r\n        this.hp = data.hp;\r\n        this.sp = data.sp;\r\n    }\r\n\r\n    getBattler(position: [number, number]) : Battler | undefined {\r\n        const flatPosition = position[0] * 2 + position[1];\r\n        return this.battlers.find(b => b.position === flatPosition);\r\n    }\r\n    \r\n\r\n    setOpponent(side: Side) {\r\n        this.opponent = side;\r\n    }\r\n\r\n    applyHpDamage(hpDamage: number): HpDamageResult {\r\n        this.hp -= hpDamage;\r\n        if(this.hp < 0) {\r\n            this.hp = 0;\r\n        }\r\n        return {hpDamage: hpDamage, isDead: this.hp === 0};\r\n    }\r\n\r\n    applySpRecovery(spRecovery: number): SpRecoveryResult {\r\n        const oldSp = this.sp;\r\n        this.sp += spRecovery;\r\n        if(this.sp >= 10) {\r\n            this.sp = 10;\r\n        }\r\n        if(this.sp < 0) {\r\n            this.sp = 0;\r\n        }\r\n        return this.sp - oldSp;\r\n    }\r\n\r\n    onDamageWeakState(action: Action): DamageMultiplierResult {\r\n        let ret = {multiplierAdded: this.damageMultiplierDelta};\r\n        this.thisActionDamageMultiplier += this.damageMultiplierDelta;\r\n        this.damageMultiplierDelta += 0.2;\r\n        return ret;\r\n    }\r\n\r\n    onActionEnd() {\r\n        this.damageMultiplier = this.thisActionDamageMultiplier;\r\n    }\r\n\r\n    onTurnStart() {\r\n        this.damageMultiplier = 1.0;\r\n        this.thisActionDamageMultiplier = 1.0;\r\n        this.damageMultiplierDelta = 0.2;\r\n        this.battlers.forEach(b => b.onTurnStart());\r\n        if(this.sp <= 3) {\r\n            this.sp = 3;\r\n        }\r\n    }\r\n\r\n    getDisplayDamageMultiplier(): number{\r\n        return this.thisActionDamageMultiplier;\r\n    }\r\n\r\n\r\n}\r\n\r\nexport interface HpDamageResult{\r\n    hpDamage: number;\r\n    isDead: boolean;\r\n}\r\n\r\nexport type SpRecoveryResult = number;\r\n\r\nexport interface SideData{\r\n    battlers: BattlerData[];\r\n    hp: number;\r\n    sp: number;\r\n}\r\n\r\nexport interface DamageMultiplierResult{\r\n    multiplierAdded: number;\r\n}\r\n","import { HpDamageResult, Battler, AttributeDamageResult, DpRecoveryResult, DefenceIncreaseResult } from \"./Battler\";\r\nimport { DamageMultiplierResult, Side, SpRecoveryResult  } from \"./Side\";\r\nimport { ActionData } from \"./ActionData\";\r\n\r\nexport class Action{\r\n    user: Battler;\r\n    targets: Battler[] | null;\r\n    data: ActionData;\r\n    id: number;\r\n    private attack: Attack | null;\r\n    private targetPoint: [number, number];\r\n    targetSide: Side;\r\n\r\n    constructor(ad: ActionData, user: Battler, target: [number, number], targetSide: Side, id: number) {\r\n        this.data = ad;\r\n        this.targets = null;\r\n        this.attack = null;\r\n        this.user = user;\r\n        this.targetPoint = target;\r\n        this.targetSide = targetSide;\r\n        this.id = id;\r\n    }\r\n\r\n    canUse(){\r\n        return !this.user.isDead();\r\n    }\r\n\r\n    step() : boolean{\r\n        if(!this.canUse()){\r\n            return false;\r\n        }\r\n        if(this.targets === null) {\r\n            let side = this.targetSide;\r\n            this.targets = this.data.targetArea.map(point => {\r\n                let x = (this.targetPoint[0] + point[0]);\r\n                let y = (this.targetPoint[1] + point[1]);\r\n                //todo extract position calculator.\r\n                if(x > 2 || x < 0 || y > 1 || y < 0) {\r\n                    return undefined;\r\n                }\r\n                return side!.getBattler([x,y]);\r\n            }).filter(v => v !== undefined) as Battler[];\r\n        }\r\n        if(this.targets.length === 0) {\r\n            this.user.side.onActionEnd();\r\n            return false;\r\n        }\r\n        let t = this.targets.shift();\r\n        this.attack = new Attack(this.user, t!, this);\r\n        return true;\r\n    }\r\n\r\n    getCurrentAttack() : Attack | null{\r\n        return this.attack;\r\n    }\r\n}\r\n\r\nexport class Attack{\r\n    user: Battler;\r\n    target: Battler;\r\n    action: Action;\r\n    hpDamageResult: HpDamageResult;\r\n    spRecoveryResult: SpRecoveryResult;\r\n    dpRecoveryResult: DpRecoveryResult;\r\n    defenceIncreaseResult: DefenceIncreaseResult;\r\n    damageMultiplierResult: DamageMultiplierResult | null;\r\n    attributeDamageResult: AttributeDamageResult;\r\n\r\n    constructor(user: Battler, target: Battler, action: Action){\r\n        this.user = user;\r\n        this.target = target;\r\n        this.action = action;\r\n        let hpDamage = this.user.side.damageMultiplier * this.action.data.hpDamage;\r\n        this.hpDamageResult = this.target.applyHpDamage(hpDamage);\r\n        this.damageMultiplierResult = null;\r\n        this.spRecoveryResult = this.target.side.applySpRecovery(this.action.data.spRecovery);\r\n        this.dpRecoveryResult = this.target.applyDpRecovery(this.action.data.dpRecovery);\r\n        this.defenceIncreaseResult = this.target.applyDefenceIncrease(this.action.data.defenceIncrease);\r\n        //TODO: we can combine damageMultiplierResult and attributeDamageResult.\r\n        if(this.action.data.attribute === this.target.getCurrentAttribute() && this.target.isWeakState()) {\r\n            this.damageMultiplierResult = this.user.side.onDamageWeakState(this.action);\r\n        }\r\n        this.attributeDamageResult = this.target.applyAttributeDamage(this.action.data.attribute, this.action.data.attributeDamage);\r\n    }\r\n}","import { Side, SideData } from \"../models/Side\";\r\nimport { Action, Attack } from \"../models/Action\";\r\nimport { ActionData } from \"../models/ActionData\";\r\nimport { Battler } from \"../models/Battler\";\r\nimport { Observable, BehaviorSubject } from \"rxjs\" \r\n\r\nexport type InputtingPhase = \"decideBattler\" | \"decideAction\" | \"decideTarget\" | undefined;\r\nexport type Phase = \"inputting\"|\"processing\" | undefined;\r\n\r\nconst UPDATE_INTERVAL = 200;\r\n\r\nexport class BattleVM {\r\n    private _sideA: Side;\r\n    private _sideB: Side;\r\n    private _actions: BehaviorSubject<Action[]>;\r\n    private _phase: BehaviorSubject<Phase>;\r\n    private _inputtingPhase: BehaviorSubject<InputtingPhase>;\r\n    private _actionResults : BehaviorSubject<Attack[]>;\r\n    private currentProcessingAction: Action | undefined;\r\n    private _inputtingAction: ActionData | undefined;\r\n    private _currentInputtingBattler: Battler | undefined;\r\n    private _nextActionId: number;\r\n\r\n    constructor(sideA: SideData, sideB: SideData) {\r\n        this._sideA = new Side(sideA);\r\n        this._sideB = new Side(sideB);\r\n        this._sideA.setOpponent(this._sideB);\r\n        this._sideB.setOpponent(this._sideA);\r\n        this._actions = new BehaviorSubject([] as Action[]);\r\n        this._phase = new BehaviorSubject(undefined as Phase);\r\n        this._inputtingPhase = new BehaviorSubject(undefined as InputtingPhase);\r\n        this._actionResults = new BehaviorSubject([] as Attack[]);\r\n        this._actions.next([]);\r\n        this._actionResults.next([]);\r\n        this.currentProcessingAction = undefined;\r\n        this.startTurn();\r\n        this._nextActionId = 0;\r\n    }\r\n\r\n    get phase() : Observable<Phase>{\r\n        return this._phase;\r\n    }\r\n\r\n    get sideA() {\r\n        return this._sideA;\r\n    }\r\n\r\n    get sideB() {\r\n        return this._sideB;\r\n    }\r\n\r\n    get actions() : Observable<Action[]>{\r\n        return this._actions;\r\n    }\r\n\r\n    get inputtingPhase() : Observable<InputtingPhase> {\r\n        return this._inputtingPhase;\r\n    }\r\n\r\n    get actionResults() : Observable<Attack[]> {\r\n        return this._actionResults;\r\n    }\r\n\r\n    get inputtingAction() : ActionData | undefined{\r\n        return this._inputtingAction;\r\n    }\r\n\r\n    get targets() : Battler[] | undefined{\r\n        if(this._currentInputtingBattler === undefined) {\r\n            return undefined;\r\n        }\r\n        else{\r\n            return this._currentInputtingBattler!.side.opponent!.battlers; \r\n        }\r\n    }\r\n    \r\n\r\n    addAction(action: ActionData) : boolean{\r\n        this.checkInputting(\"decideAction\");\r\n        if(action.spCost > this._currentInputtingBattler!.side.sp) {\r\n            return false;\r\n        }\r\n        this._inputtingAction = action;\r\n        this._inputtingPhase.next(\"decideTarget\");\r\n        return true;\r\n    }\r\n\r\n    setTarget(target: [number, number], isLeft: boolean) {\r\n        if(this._inputtingAction!.spCost <= this._currentInputtingBattler!.side.sp) {\r\n            this._currentInputtingBattler!.side.sp -= this._inputtingAction!.spCost;\r\n            const side = isLeft ? this.sideA : this.sideB;\r\n            this._actions.value.push(new Action(this._inputtingAction!, this._currentInputtingBattler!, target, side, this._nextActionId));\r\n            ++this._nextActionId;\r\n        }\r\n        this._inputtingPhase.next(\"decideBattler\");\r\n    }\r\n\r\n    selectBattler(battler: Battler) {\r\n        this.checkInputting(\"decideBattler\");\r\n        this._currentInputtingBattler = battler;\r\n        this._inputtingPhase.next(\"decideAction\");\r\n    }\r\n\r\n    checkInputting(inputtingPhase: InputtingPhase) {\r\n        if(this._phase.value !== \"inputting\") {\r\n            throw new Error(\"phase must be inputting\");\r\n        }\r\n        if(this._inputtingPhase.value !== inputtingPhase) {\r\n            throw new Error(\"inputting phase must be \" + inputtingPhase);\r\n        }\r\n    }\r\n\r\n    endInputting() {\r\n        this._phase.next(\"processing\");\r\n        this._inputtingPhase.next(undefined);\r\n        this._actionResults.value.length = 0;\r\n        this._actionResults.next(this._actionResults.value);\r\n        this.updateLoop();\r\n    }\r\n\r\n    updateLoop() {\r\n        this.update();\r\n        if(this._phase.value === \"processing\") {\r\n            setTimeout( ()=> this.updateLoop(), UPDATE_INTERVAL);\r\n        }\r\n    }\r\n\r\n    update() {\r\n        if(this._phase.value === \"inputting\") {\r\n            throw new Error(\"You shouldn't call update in inputting state.\");\r\n        }\r\n        while(true) {\r\n            if(this.currentProcessingAction !== undefined) {\r\n                if(this.currentProcessingAction.step()){\r\n                    this._actionResults.value.push(this.currentProcessingAction.getCurrentAttack()!);\r\n                    this._actionResults.next(this._actionResults.value);\r\n                    return;\r\n                }\r\n            }\r\n            this.currentProcessingAction = this._actions.value.shift();\r\n            this._actions.next(this._actions.value);\r\n            if(this.currentProcessingAction === undefined) {\r\n                this.startTurn();\r\n                break;\r\n            }\r\n        }\r\n        \r\n    }\r\n\r\n    cancelTargetSelection(): void {\r\n        this.checkInputting(\"decideTarget\");\r\n        this._inputtingAction = undefined;\r\n        this._inputtingPhase.next(\"decideAction\");\r\n    }\r\n\r\n    cancelActionSelection() : void {\r\n        this.checkInputting(\"decideAction\");\r\n        this._currentInputtingBattler = undefined;\r\n        this._inputtingPhase.next(\"decideBattler\");\r\n    }\r\n\r\n    private startTurn() {\r\n        this._sideA.onTurnStart();\r\n        this._sideB.onTurnStart();\r\n        this._phase.next(\"inputting\");\r\n        this._inputtingPhase.next(\"decideBattler\");\r\n    }\r\n\r\n    onActionDeleted(id: number): void {\r\n        this.checkInputting(\"decideBattler\");\r\n        const index = this._actions.value.findIndex((a) => a.id === id);\r\n        const [action] = this._actions.value.splice(index, 1);\r\n        action.user.side.sp += action.data.spCost;\r\n        this._actions.next(this._actions.value);\r\n    }\r\n    \r\n}","import { Attribute } from \"../models/Attribute\";\r\n\r\nexport const ATTRIBUTE_NAME = {\r\n    [Attribute.Earth] : \"地\",\r\n    [Attribute.Electric] : \"电\",\r\n    [Attribute.Fire] : \"火\",\r\n    [Attribute.Water] : \"水\",\r\n    [Attribute.Wind] : \"风\"\r\n}","import React from \"react\";\r\nimport { Battler, Position } from \"../models/Battler\";\r\nimport { ATTRIBUTE_NAME } from \"./AttributeName\";\r\n\r\ninterface Props{\r\n    battlers: Battler[];\r\n    isLeft: boolean;\r\n    onBattlerClick: (b: Battler) => void\r\n}\r\n\r\nfunction BattlerBriefView(props: {pos: Position, battler: Battler | undefined, enter: (pos: Position) => void, exit: (pos: Position) => void, onClick: (b: Battler) => void}){\r\n    if(props.battler === undefined) {\r\n        return <td onMouseEnter={() => props.enter(props.pos)} onMouseLeave={() => props.exit(props.pos)}></td>\r\n    }\r\n    return <td onMouseEnter={() => props.enter(props.pos)} onMouseLeave={() => props.exit(props.pos)} onClick={()=>props.onClick(props.battler!)}>\r\n        <p>{props.battler.name}</p>\r\n        <p>\r\n            {\r\n                props.battler.isDead() ? <span className=\"icon\"><i className=\"fas fa-skull\"></i></span> : null\r\n            }\r\n            {\r\n                props.battler.isWeakState() ? <span className=\"icon\"><i className=\"fas fa-heart-broken\"></i></span> : null\r\n            }\r\n        </p>\r\n    </td>\r\n}\r\n\r\nfunction BattlerDetailView(props: {battler: Battler|undefined}){\r\n    if(props.battler === undefined) {\r\n        return <div className=\"detail-view\"></div>\r\n    }\r\n    let attribute = props.battler.getCurrentAttribute();\r\n    console.log(\"BattlerDetailView\", props.battler);\r\n    return <div className=\"detail-view\">\r\n        <p>{props.battler.name}\r\n            {\r\n                props.battler.isDead() ? <span className=\"icon\"><i className=\"fas fa-skull\"></i></span> : null\r\n            }\r\n            {\r\n                props.battler.isWeakState() ? <span className=\"icon\"><i className=\"fas fa-heart-broken\"></i></span> : null\r\n            }\r\n        </p>\r\n        \r\n        <p><b>DP:</b> {props.battler.dp}</p>\r\n        <p><b>抗:</b>{props.battler.defence}</p>\r\n        {\r\n            attribute === null ? null : \r\n            <p><b>{ATTRIBUTE_NAME[attribute]}</b> {props.battler.getAttributePoint()}</p>\r\n        }\r\n    </div>\r\n}\r\n\r\nexport class BattleFieldView extends React.Component<Props, {pos: Position | undefined}>{\r\n    constructor(props: Props) {\r\n        super(props);\r\n        this.state = {\r\n            pos: undefined\r\n        }\r\n    }\r\n\r\n    onEnterBattler(pos: Position) {\r\n        this.setState({pos});\r\n    }\r\n\r\n    onExitBattler(pos: Position) {\r\n        this.setState((prevState) => prevState.pos === pos ? {pos: undefined} : {pos: prevState.pos});\r\n    }\r\n\r\n    render() {\r\n        const battlers: {[key in Position]? : Battler} = this.props.battlers.reduce((state: {[p in Position]? : Battler}, b) => {state[b.position] = b; return state;}, {});\r\n        const col = this.props.isLeft ? [0, 1] : [1, 0];\r\n        let currentBattler = this.state.pos === undefined ? undefined : battlers[this.state.pos];\r\n        return <React.Fragment>\r\n            <table className=\"battle-field-view\">\r\n                <tbody>\r\n                    {\r\n                        [0,1,2].map(x => <tr key={x}>\r\n                            {\r\n                                (x === 0 && !this.props.isLeft) ? <td rowSpan={3} className=\"frontline\"><span>前线</span></td> : null\r\n                            }\r\n                            {\r\n                                col.map(y => <BattlerBriefView pos={(x * 2 + y) as Position} key={y} battler={battlers[(x * 2 + y) as Position]} enter={(b) => this.onEnterBattler(b)} exit={(b) => this.onExitBattler(b)} onClick={this.props.onBattlerClick}/>)\r\n                            }\r\n                            {\r\n                                (x === 0 && this.props.isLeft) ? <td rowSpan={3} className=\"frontline\"><span>前线</span></td> : null\r\n                            }\r\n                        </tr>)\r\n                    }\r\n                </tbody>\r\n            </table>\r\n            <BattlerDetailView battler={currentBattler} />\r\n        </React.Fragment>\r\n    }\r\n}","import { Side } from \"../models/Side\";\r\nimport { BattlerView } from \"./BattlerView\";\r\nimport React from \"react\";\r\nimport { Battler } from \"../models/Battler\";\r\nimport { BattleFieldView } from \"./BattleFieldView\";\r\n\r\ninterface Props{\r\n    side: Side;\r\n    onBattlerClick: (b: Battler) => void;\r\n    isRed: boolean;\r\n}\r\n\r\n\r\nexport function SideView(props: Props) {\r\n    return <div className={\"side-view column is-6\" + (props.isRed ? \" red\" : \" blue\") }>\r\n        <div>\r\n            <p><b>HP:</b> {props.side.hp}</p>\r\n            <p><b>SP:</b> {props.side.sp}</p>\r\n            <BattleFieldView isLeft={props.isRed} battlers={props.side.battlers} onBattlerClick={props.onBattlerClick}/>\r\n        </div>\r\n    </div>\r\n}\r\n\r\n","import { Battler, Position, FlatPosToXY, XYPosToFlat } from \"../models/Battler\";\r\nimport React from \"react\";\r\n\r\ninterface Props{\r\n    battlersLeft: Battler[];\r\n    battlersRight: Battler[];\r\n    areas: [number, number][];\r\n    onTargetSelected: (pos: Position, isLeft: boolean) => void;\r\n    onClose: () => void;\r\n}\r\n\r\nfunction BattlerCell(props: {onClick: () => void, onEnter: () => void, onExit: () => void, pos: Position, highlighted: boolean, name: string}) {\r\n    return <td onMouseEnter={() => props.onEnter()} onMouseLeave={() => props.onExit()} className={props.highlighted ? \"highlighted\" : \"\"} onClick={() => props.onClick()}>{props.name}</td>\r\n}\r\n\r\nexport class TargetView extends React.Component<Props, {hoveredPosition: {isLeft: boolean, pos: Position} | undefined}> {\r\n    constructor(props: Props) {\r\n        super(props);\r\n        this.state = {hoveredPosition: undefined};\r\n        this.onTargetSelected = this.onTargetSelected.bind(this);\r\n    }\r\n\r\n    onTargetSelected(pos: Position, isLeft: boolean) {\r\n        this.props.onTargetSelected(pos, isLeft);\r\n    }\r\n\r\n    onEnter(isLeft: boolean, pos: Position) {\r\n        this.setState({hoveredPosition: {isLeft, pos}});\r\n    }\r\n\r\n    onExit(isLeft: boolean, pos: Position) {\r\n        this.setState((prevState) => {\r\n            if(prevState.hoveredPosition !== undefined && prevState.hoveredPosition.isLeft === isLeft && prevState.hoveredPosition.pos === pos) {\r\n                return {hoveredPosition: undefined};\r\n            }\r\n            else{\r\n                return {hoveredPosition: prevState.hoveredPosition};\r\n            }\r\n        });\r\n    }\r\n\r\n    render() {\r\n        let highlighted : Position[] = [];\r\n        if(this.state.hoveredPosition !== undefined) {\r\n            let [bx,by] = FlatPosToXY(this.state.hoveredPosition.pos);\r\n            this.props.areas.forEach((pos) => {\r\n                let x = bx + pos[0];\r\n                let y = by + pos[1];\r\n                if(x >= 0 && x <= 2 && y >= 0 && y <= 1) {\r\n                    highlighted.push(x * 2 + y as Position);\r\n                }\r\n            })\r\n        }\r\n        let map = Array(6).fill(false);\r\n        highlighted.forEach(v => map[v] = true);\r\n        let leftBattlersMap: (Battler|null)[] = Array(6).fill(null);\r\n        let rightBattlersMap: (Battler|null)[] = Array(6).fill(null);\r\n        this.props.battlersLeft.forEach(b => leftBattlersMap[b.position] = b);\r\n        this.props.battlersRight.forEach(b => rightBattlersMap[b.position] = b);\r\n        return <div className=\"modal target-view is-active\">\r\n                <div className=\"modal-card\">\r\n                    <header className=\"modal-card-head\">\r\n                        <p className=\"modal-card-title\">选择目标</p>\r\n                        <button className=\"delete\" aria-label=\"close\"></button>\r\n                    </header>\r\n                    <section className=\"modal-card-body\">\r\n                        <table className=\"target-view-table\">\r\n                            <tbody>\r\n                                {\r\n                                    [0,1,2].map(x => \r\n                                        <tr key={x}>\r\n                                            {\r\n                                                [0,1].map(y => {\r\n                                                    let pos = XYPosToFlat(x as 0|1|2, y as 0|1);\r\n                                                    let battler = leftBattlersMap[pos];\r\n                                                    let name = battler === null ? \"\" : battler.name;\r\n                                                    let isHighlightedLeft = this.state.hoveredPosition === undefined ? false : this.state.hoveredPosition.isLeft;\r\n                                                    let isHighlighted = isHighlightedLeft ? map[pos] : false;\r\n                                                    return <BattlerCell key={y} onClick={()=>this.onTargetSelected(pos, true)} onEnter={() => this.onEnter(true, pos)} onExit={() => this.onExit(true, pos)} pos={pos} name={name} highlighted={isHighlighted}/>\r\n                                                })\r\n                                            }\r\n                                            {\r\n                                                x === 0 ? <td rowSpan={3} className=\"target-view-frontline\">前线</td> : null\r\n                                            }\r\n                                            {\r\n                                                [1,0].map(y => {\r\n                                                    let pos = XYPosToFlat(x as 0|1|2, y as 0|1);\r\n                                                    let battler = rightBattlersMap[pos];\r\n                                                    let name = battler === null ? \"\" : battler.name;\r\n                                                    let isHighlightedRight = this.state.hoveredPosition === undefined ? false : !this.state.hoveredPosition.isLeft;\r\n                                                    let isHighlighted = isHighlightedRight ? map[pos] : false;\r\n                                                    return <BattlerCell key={y} onClick={()=>this.onTargetSelected(pos, false)} onEnter={() => this.onEnter(false, pos)} onExit={() => this.onExit(false, pos)} pos={pos} name={name} highlighted={isHighlighted}/>\r\n                                                })\r\n                                            }\r\n                                        </tr>\r\n                                    )\r\n                                }\r\n                            </tbody>\r\n                        </table>\r\n                    </section>\r\n                </div>\r\n            </div>\r\n    }\r\n}","import { Attack } from \"../models/Action\";\r\nimport { ATTRIBUTE_NAME } from \"./AttributeName\";\r\nimport React from \"react\";\r\n\r\ninterface Props{\r\n    result: Attack;\r\n}\r\nexport function ResultView(props: Props) {\r\n    let attribute = null;\r\n    if(props.result.attributeDamageResult.attribute !== null) {\r\n        attribute = <React.Fragment>\r\n                <p>附加了 {props.result.attributeDamageResult.attributePointAttached} 点 {ATTRIBUTE_NAME[props.result.attributeDamageResult.attribute]} </p>\r\n                <p>{props.result.attributeDamageResult.knockedIntoWeak ? \"打入了弱点状态\" : \"\"} \r\n                 {props.result.attributeDamageResult.dpDamage > 0 ? `造成了${props.result.attributeDamageResult.dpDamage}点DP伤害` : \"\" } </p>\r\n            </React.Fragment>;\r\n    }\r\n    let damageMultipiler = null;\r\n    if(props.result.damageMultiplierResult !== null) {\r\n        damageMultipiler = <p>\r\n            伤害提升率上涨了: {props.result.damageMultiplierResult.multiplierAdded}\r\n        </p>\r\n    }\r\n    let dpRcovery = null;\r\n    if(props.result.dpRecoveryResult !== 0) {\r\n        dpRcovery = <p>DP回复了：{props.result.dpRecoveryResult} </p>\r\n    }\r\n    let spRecovery = null;\r\n    if(props.result.spRecoveryResult !== 0) {\r\n        spRecovery = <p>SP回复了：{props.result.spRecoveryResult} </p>\r\n    }\r\n    let defenceIncreasement = null;\r\n    if(props.result.defenceIncreaseResult !== 0) {\r\n        defenceIncreasement = <p>防御上涨了：{props.result.defenceIncreaseResult}</p>\r\n    }\r\n    return <div className=\"result-view\">\r\n        <p>{props.result.action.user.name} 对 {props.result.target.name} 使用了 {props.result.action.data.name}</p>\r\n        <p>消耗了{props.result.hpDamageResult.defended}点防御</p>\r\n        <p>造成了 {props.result.hpDamageResult.hpDamage} 点伤害 {props.result.hpDamageResult.isDead ? \"对面已死亡\" : \"\"}</p>\r\n        {attribute}\r\n        {damageMultipiler}\r\n        {dpRcovery}\r\n        {spRecovery}\r\n        {defenceIncreasement}\r\n    </div>\r\n}","import { ActionData } from \"../models/ActionData\";\r\nimport React from \"react\";\r\n\r\n\r\ninterface Props{\r\n    action: ActionData;\r\n    onClicked: (action: ActionData) => void;\r\n}\r\n\r\nexport function ActionView(props: Props) {\r\n    return <p className=\"action\" onClick={() => props.onClicked(props.action)}>\r\n        <span className=\"name\">{props.action.name}</span> \r\n        &nbsp;\r\n        <span className=\"sp-cost\"><b>SP消耗:</b>{props.action.spCost}</span>\r\n    </p>\r\n\r\n}","import { ActionData } from \"../models/ActionData\";\r\nimport { ActionView } from \"./ActionView\";\r\nimport React from \"react\";\r\n\r\ninterface Props {\r\n    onActionSelectionClosed: () => void;\r\n    actionDatas: ActionData[];\r\n    onActionClicked: (action: ActionData) => void;\r\n}\r\nexport function ActionSelectionView(props: Props) {\r\n    return <div className=\"actions-selection modal is-active\">  \r\n        <div className=\"modal-background\"></div>\r\n        <div className=\"modal-card\">\r\n            <header className=\"modal-card-head\">\r\n                <p className=\"modal-card-title\">选择行动</p>\r\n                <button className=\"delete\" aria-label=\"close\" onClick={() => props.onActionSelectionClosed()}></button>\r\n            </header>\r\n            <section className=\"modal-card-body\">\r\n                {\r\n                    props.actionDatas.map((action, id) => \r\n                    <ActionView action={action} key={id} onClicked={() => props.onActionClicked(action)}/>)\r\n                }\r\n            </section>\r\n        </div>\r\n    </div>\r\n}","import { Action } from \"../models/Action\";\r\nimport React from \"react\";\r\n\r\ninterface Props{\r\n    actions: Action[];\r\n    onActionDeleted: (id: number) => void;\r\n}\r\nexport function ActionRecordsView(props: Props) {\r\n    return <div className=\"action-records\">\r\n        {\r\n            props.actions.map(action => <p key={action.id} className=\"action-record\">\r\n                <span>{action.user.name}</span>\r\n                <span className=\"action-record-action-use\">使用了</span>\r\n                <span className=\"action-record-action-name\">{action.data.name}</span> \r\n                <button className=\"delete action-record-delete\" onClick={e=>{e.preventDefault(); props.onActionDeleted(action.id)} }>X</button>\r\n            </p>)\r\n        }\r\n    </div>\r\n}","import React from \"react\";\r\nimport { SideData } from \"../models/Side\";\r\nimport { ActionData } from \"../models/ActionData\";\r\nimport { Phase, BattleVM, InputtingPhase } from \"../viewmodels/BattleVM\";\r\nimport { Action, Attack } from \"../models/Action\";\r\nimport { Subscription } from \"rxjs\";\r\nimport { SideView } from \"./SideView\";\r\nimport { TargetView } from \"./TargetView\";\r\nimport { Battler, FlatPosToXY, Position } from \"../models/Battler\";\r\nimport { ResultView } from \"./ResultView\";\r\nimport { ActionSelectionView } from \"./ActionSelectionView\";\r\nimport { ActionRecordsView } from \"./ActionRecordsView\";\r\nimport { Redirect } from \"react-router\";\r\n\r\ninterface Props{\r\n    sideA: SideData | undefined;\r\n    sideB: SideData | undefined;\r\n    actionDatas: ActionData[] | undefined;\r\n}\r\ninterface State {\r\n    phase: Phase;\r\n    inputtingPhase: InputtingPhase;\r\n    actionResults: Attack[];\r\n    actions: Action[];\r\n}\r\n\r\nexport class BattleView extends React.Component<Props, State>{\r\n\r\n    private subscription : Subscription | undefined;\r\n    private battleVM : BattleVM | undefined;\r\n    private previousProps : Props | undefined;\r\n\r\n    constructor(props: Props) {\r\n        super(props);\r\n        this.state = {\r\n            phase: undefined,\r\n            inputtingPhase: undefined,\r\n            actionResults: [],\r\n            actions: []\r\n        }\r\n        this.onActionClicked = this.onActionClicked.bind(this);\r\n        this.onTargetSelected = this.onTargetSelected.bind(this);\r\n        this.onBattlerSelected = this.onBattlerSelected.bind(this);\r\n        this.onTargetSelectionClosed = this.onTargetSelectionClosed.bind(this);\r\n        this.onActionSelectionClosed = this.onActionSelectionClosed.bind(this);\r\n        this.onActionDeleted = this.onActionDeleted.bind(this);\r\n    }\r\n\r\n    createVM() {\r\n        this.subscription!.unsubscribe();\r\n        this.subscription = new Subscription();\r\n        this.battleVM = undefined;\r\n        if(this.props.sideA !== undefined && this.props.sideB !== undefined) {\r\n            this.battleVM = new BattleVM(this.props.sideA, this.props.sideB);\r\n            this.battleVM!.phase.subscribe(p => this.setState({phase: p}));\r\n            this.battleVM!.inputtingPhase.subscribe(p => this.setState({inputtingPhase: p}));\r\n            this.battleVM!.actionResults.subscribe(r => this.setState({actionResults: r}));\r\n            this.battleVM!.actions.subscribe(a => this.setState({actions: a}));\r\n        }\r\n    }\r\n\r\n    recreateBattleVM() {\r\n        if(this.previousProps !== this.props){\r\n\r\n            this.previousProps = this.props;\r\n\r\n            if(this.subscription !== undefined) {\r\n                this.subscription!.unsubscribe();\r\n                this.subscription = undefined;\r\n            }\r\n            \r\n            this.battleVM = undefined;\r\n            if(this.props.sideA !== undefined && this.props.sideB !== undefined) {\r\n                this.battleVM = new BattleVM(this.props.sideA, this.props.sideB);\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    registerSubscriptions() {\r\n        if(this.subscription === undefined && this.battleVM !== undefined) {\r\n            let d = [];\r\n            d[0] = this.battleVM!.phase.subscribe(p => this.setState({phase: p}));\r\n            d[1] = this.battleVM!.inputtingPhase.subscribe(p => this.setState({inputtingPhase: p}));\r\n            d[2] = this.battleVM!.actionResults.subscribe(r => this.setState({actionResults: r}));\r\n            d[3] = this.battleVM!.actions.subscribe(a => this.setState({actions: a}));\r\n            this.subscription = new Subscription();\r\n            d.forEach(d => this.subscription!.add(d));\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.registerSubscriptions();\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        this.registerSubscriptions();\r\n    }\r\n\r\n    onActionClicked(action: ActionData) {\r\n        this.battleVM!.addAction(action);\r\n    }\r\n\r\n    onTargetSelected(target: Position, isLeft: boolean) {\r\n        this.battleVM!.setTarget(FlatPosToXY(target), isLeft);\r\n    }\r\n\r\n    onBattlerSelected(battler: Battler) {\r\n        this.battleVM!.selectBattler(battler);\r\n    }\r\n\r\n    onEndTurn() {\r\n        this.battleVM!.endInputting();\r\n    }\r\n\r\n    onTargetSelectionClosed() {\r\n        this.battleVM!.cancelTargetSelection();\r\n    }\r\n\r\n    onActionSelectionClosed() {\r\n        this.battleVM!.cancelActionSelection();\r\n    }\r\n\r\n    onActionDeleted(id: number) {\r\n        this.battleVM!.onActionDeleted(id);\r\n    }\r\n\r\n    render() {\r\n        this.recreateBattleVM();\r\n        if(this.battleVM === undefined) {\r\n            return <Redirect to=\"/\"/>\r\n        }\r\n        let actions = null;\r\n        console.log(this.state.inputtingPhase);\r\n        if(this.props.actionDatas !== undefined && this.state.inputtingPhase === \"decideAction\") {\r\n            actions = <ActionSelectionView onActionClicked={this.onActionClicked} actionDatas={this.props.actionDatas} onActionSelectionClosed={this.onActionSelectionClosed}\r\n            />\r\n        }\r\n        let target = null;\r\n        if(this.state.inputtingPhase === \"decideTarget\") {\r\n            target = <TargetView battlersLeft={this.battleVM.sideA.battlers} battlersRight={this.battleVM.sideB.battlers} onTargetSelected={this.onTargetSelected} areas={this.battleVM.inputtingAction!.targetArea} onClose={this.onTargetSelectionClosed}/>\r\n        }\r\n        return <div className=\"container battle-view\">\r\n            <div className=\"columns\">\r\n                <SideView isRed={true} side={this.battleVM!.sideA} onBattlerClick={this.onBattlerSelected}/>\r\n                <SideView isRed={false} side={this.battleVM!.sideB} onBattlerClick={this.onBattlerSelected}/>\r\n            </div>\r\n            <ActionRecordsView actions={this.state.actions} onActionDeleted={this.onActionDeleted} />\r\n            <div className=\"control\">\r\n                {\r\n                    this.state.phase === \"inputting\" ? <button className=\"button\" onClick={() => this.onEndTurn()}>结束回合</button> : null\r\n                }\r\n            </div>\r\n            \r\n            <div className={`modal-container ${actions !== null || target !== null ? \"show\" : \"\"}`}>\r\n                {\r\n                    actions !== null ? actions : <React.Fragment />\r\n                }\r\n                {\r\n                    target !== null ? target : <React.Fragment />\r\n                }\r\n\r\n            </div>\r\n            {\r\n                this.state.actionResults.map((result, key) => <ResultView key={key} result={result}/>)\r\n            }\r\n        </div>\r\n    }\r\n}","import React from \"react\";\r\nimport { EditView } from \"./EditView\";\r\nimport { SideData } from \"../models/Side\";\r\nimport { ActionData } from \"../models/ActionData\";\r\nimport { BattleView } from \"./BattleView\";\r\nimport { Route } from \"react-router-dom\";\r\n\r\nexport class AppView extends React.Component<{}, {sideA: SideData | undefined, sideB: SideData | undefined, actions: ActionData[]}>{\r\n\r\n    constructor(props: {}) {\r\n        super(props);\r\n        this.state = {sideA: undefined, sideB: undefined, actions: []};\r\n        this.onComplete = this.onComplete.bind(this);\r\n    }\r\n\r\n    onComplete(sideA:SideData, sideB: SideData, actions: ActionData[]) {\r\n        this.setState({sideA: sideA, sideB: sideB, actions: actions});\r\n    }\r\n\r\n    render() {\r\n        return<div>\r\n            <Route render={props => <EditView onComplete={this.onComplete} {...props} />} path=\"/\" exact />\r\n            <Route render={props => <BattleView {...props} sideA={this.state.sideA} sideB={this.state.sideB} actionDatas={this.state.actions} />} path=\"/battle\"  />\r\n        </div>\r\n    }\r\n}","import React from 'react';\nimport './App.css';\nimport { AppView } from './views/AppView';\n\nconst App: React.FC = () => {\n    \n    return <AppView  />\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {HashRouter as Router } from \"react-router-dom\";\nimport \"bulma\";\nimport \"@fortawesome/fontawesome-free/css/all.css\";\n\nReactDOM.render(<Router><App /></Router>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}