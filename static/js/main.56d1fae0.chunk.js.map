{"version":3,"sources":["models/Attribute.ts","views/Field.tsx","views/PositionSelectionView.tsx","views/BattlerInfoView.tsx","views/SideInfoView.tsx","views/ActionInfoView.tsx","views/LoadView.tsx","views/EditView.tsx","models/Battler.ts","models/Side.ts","models/Action.ts","viewmodels/BattleVM.ts","views/BattlerView.tsx","views/SideView.tsx","views/TargetView.tsx","views/AttributeName.ts","views/ResultView.tsx","views/ActionView.tsx","views/ActionSelectionView.tsx","views/ActionRecordsView.tsx","views/BattleView.tsx","views/AppView.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["Attribute","Field","props","label","inputProps","Object","objectWithoutProperties","react_default","a","createElement","className","assign","PositionSelectionView","col","isLeft","map","x","rowSpan","y","currentPosition","onClick","onPositionChange","ATTRIBUTE_NAME","_ATTRIBUTE_NAME","defineProperty","Earth","Electric","Fire","Water","Wind","ICON_NAME","_ICON_NAME","BattlerInfoView","_React$Component","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleDpChange","bind","assertThisInitialized","handlePositionChange","handleNameChange","inherits","createClass","key","value","e","battler","copyBattler","dp","Number","parseInt","target","onBattlerChanged","pos","objectSpread","position","name","attribute","attributeResistances","id","_this2","type","onChange","i","handleAttributeChange","placeholder","onBattlerDeleted","React","Component","SideInfoView","side","maxBattlerId","handleHpChange","handleSpChange","addBattler","hp","sp","battlers","copySide","onSideChanged","_res","b","push","filter","BattlerInfoView_BattlerInfoView","handleBattlerChanged","deleteBattler","ActionInfoView","action","spCost","hpDamage","attributeDamage","targetArea","onAttributeChanged","onAttributeDamageChanged","onHpDamageChanged","onSpCostChanged","onNameChanged","console","log","copyAction","existed","findIndex","v","splice","onActionChanged","undefined","find","isAreaChecked","getCellClassName","handleAreaClicked","LoadView","aria-label","onClosed","saves","onLoad","EditView","state","side2","actions","loadShowing","currentPage","handleSideChanged","handleSide2Changed","onAddAction","onComplete","setState","arr","savename","window","prompt","Date","toLocaleString","trim","names","stateString","JSON","stringify","namesString","localStorage","getItem","parse","confirm","setItem","alert","dataString","data","Fragment","preventDefault","SideInfoView_SideInfoView","ActionInfoView_ActionInfoView","react_router_dom","to","onSave","onLoadCanceled","onLoadSelected","Battler","currentAttribute","weakState","thisTurnDpDamaged","point","result","dpDamage","attributePointAttached","knockedIntoWeak","resist","Side","opponent","damageMultiplier","thisActionDamageMultiplier","damageMultiplierDelta","flatPosition","isDead","ret","multiplierAdded","forEach","onTurnStart","Action","ad","user","targets","attack","targetPoint","canUse","getBattler","length","onActionEnd","t","shift","Attack","hpDamageResult","damageMultiplierResult","attributeDamageResult","applyHpDamage","getCurrentAttribute","isWeakState","onDamageWeakState","applyAttributeDamage","BattleVM","sideA","sideB","_sideA","_sideB","_actions","_phase","_inputtingPhase","_actionResults","currentProcessingAction","_inputtingAction","_currentInputtingBattler","_nextActionId","setOpponent","BehaviorSubject","next","startTurn","checkInputting","inputtingPhase","Error","updateLoop","update","setTimeout","step","getCurrentAttack","index","_this$_actions$value$","slicedToArray","get","BattlerView","attributeName","getAttributePoint","SideView","onBattlerClick","BattlerRow","BattlerCell","onHover","highlighted","onMouseLeave","onMouseEnter","concat","TargetView","hoveredPosition","onTargetSelected","hovered","bx","by","areas","Array","fill","battlerMap","onClose","AttributeName_ATTRIBUTE_NAME","ResultView","damageMultipiler","ActionView","onClicked","ActionSelectionView","onActionSelectionClosed","actionDatas","onActionClicked","ActionRecordsView","onActionDeleted","BattleView","subscription","battleVM","previousProps","phase","actionResults","onBattlerSelected","onTargetSelectionClosed","unsubscribe","Subscription","subscribe","p","r","_this3","d","add","registerSubscriptions","addAction","setTarget","selectBattler","endInputting","cancelTargetSelection","cancelActionSelection","_this4","recreateBattleVM","TargetView_TargetView","inputtingAction","onEndTurn","AppView","react_router","render","EditView_EditView","path","exact","BattleView_BattleView","App","AppView_AppView","Boolean","location","hostname","match","ReactDOM","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.56d1fae0.chunk.js","sourcesContent":["export enum Attribute{\r\n    Fire, Water, Earth, Wind, Electric\r\n}","import React from \"react\";\r\ninterface Props{\r\n    label: string;\r\n    [x:string] :any;\r\n}\r\nexport function Field(props: Props) {\r\n    let {label, ...inputProps} = props;\r\n    return <div className=\"field is-horizontal\">\r\n        <div className=\"field-label\">\r\n            <label className=\"label\">{label}</label>\r\n        </div>\r\n        <div className=\"field-body\">\r\n            <div className=\"field\">\r\n                <div className=\"control\">\r\n                    <input className=\"input\" {...inputProps}/>\r\n                </div>\r\n                \r\n            </div>\r\n        </div>\r\n        \r\n    </div>\r\n}","import React from \"react\";\r\ntype Pos = 0|1|2|3|4|5;\r\n\r\ninterface Props {\r\n    onPositionChange: (int: Pos) => void;\r\n    currentPosition: Pos;\r\n    isLeft: boolean;\r\n}\r\nexport function PositionSelectionView(props: Props) {\r\n    const col = props.isLeft ? [0, 1] : [1, 0];\r\n\r\n    return <table className=\"position-selector\">\r\n        <tbody>\r\n            {\r\n                [0,1,2].map(x => <tr>\r\n                    {\r\n                        (x === 0 && !props.isLeft) ? <td className=\"frontline\" rowSpan={3}>前线</td> : null\r\n                    }\r\n                    {\r\n                        col.map(y => <td className={x * 2 + y === props.currentPosition ? \"selected\" : \"\"} onClick={() => props.onPositionChange((x * 2 + y) as Pos) }></td>)\r\n                    }\r\n                    {\r\n                        (x === 0 && props.isLeft) ? <td className=\"frontline\" rowSpan={3}>前线</td> : null\r\n                    }\r\n                </tr>)\r\n            }\r\n        </tbody>\r\n    </table>\r\n}","import React, { ChangeEvent } from \"react\";\r\nimport { Attribute } from \"../models/Attribute\";\r\nimport { BattlerData, Position } from \"../models/Battler\";\r\nimport { Field } from \"./Field\";\r\nimport { PositionSelectionView } from \"./PositionSelectionView\";\r\n\r\nconst ATTRIBUTE_NAME = {\r\n    [Attribute.Earth]: \"土\",\r\n    [Attribute.Electric]: \"电\",\r\n    [Attribute.Fire]: \"火\",\r\n    [Attribute.Water]: \"水\",\r\n    [Attribute.Wind]: \"风\"\r\n}\r\nconst ICON_NAME = {\r\n    [Attribute.Earth]: \"fa-mountain\",\r\n    [Attribute.Electric]: \"fa-bolt\",\r\n    [Attribute.Fire]: \"fa-fire\",\r\n    [Attribute.Water]: \"fa-tint\",\r\n    [Attribute.Wind]: \"fa-wind\"\r\n}\r\n\r\ninterface Props{\r\n    isLeft: boolean;\r\n    battler: BattlerData;\r\n    onBattlerChanged: (battler: BattlerData) => void;\r\n    onBattlerDeleted: () => void\r\n}\r\n\r\nexport class BattlerInfoView extends React.Component<Props, {}>{\r\n    constructor(props: Props) {\r\n        super(props);\r\n        this.handleDpChange = this.handleDpChange.bind(this);\r\n        this.handlePositionChange = this.handlePositionChange.bind(this);\r\n        this.handleNameChange = this.handleNameChange.bind(this);\r\n        \r\n    }\r\n\r\n    handleDpChange(e: ChangeEvent<HTMLInputElement>) {\r\n        let battler = this.copyBattler(this.props.battler);\r\n        battler.dp = Number.parseInt(e.target.value);\r\n        this.props.onBattlerChanged(battler);\r\n    }\r\n\r\n    handlePositionChange(pos: Position) {\r\n        let battler = {...this.props.battler, position: pos};\r\n        this.props.onBattlerChanged(battler);\r\n    }\r\n\r\n    handleNameChange(e: ChangeEvent<HTMLInputElement>) {\r\n        let battler = this.copyBattler(this.props.battler);\r\n        battler.name = e.target.value;\r\n        this.props.onBattlerChanged(battler);\r\n    }\r\n\r\n    handleAttributeChange(attribute: Attribute, e: ChangeEvent<HTMLInputElement>) {\r\n        let battler = this.copyBattler(this.props.battler);\r\n        battler.attributeResistances[attribute] = Number.parseInt(e.target.value);\r\n        this.props.onBattlerChanged(battler);\r\n    }\r\n\r\n    copyBattler(battler: BattlerData) : BattlerData{\r\n        return {dp: battler.dp, id: battler.id, name: battler.name, position: battler.position, attributeResistances: battler.attributeResistances};\r\n    }\r\n\r\n    render() {\r\n        return <div className=\"battler-info-view\">\r\n            <Field label=\"DP:\" type=\"number\" onChange={this.handleDpChange} value={this.props.battler.dp} />\r\n            <div className=\"field is-horizontal\">\r\n                <div className=\"field-label is-normal\">\r\n                    <label className=\"label\">位置</label>\r\n                </div>\r\n                <div className=\"field-body\">\r\n                    <PositionSelectionView isLeft={this.props.isLeft} currentPosition={this.props.battler.position} onPositionChange={pos => this.handlePositionChange(pos)}/>\r\n                </div>\r\n            </div>\r\n            <Field label=\"名称:\" type=\"text\" onChange={this.handleNameChange} value={this.props.battler.name} />\r\n        \r\n            <div className=\"field is-horizontal\">\r\n                <div className=\"field-label\">\r\n                    <label className=\"label\">抗性</label>\r\n                </div>\r\n                <div className=\"field-body\">\r\n                    {\r\n                        [Attribute.Earth, Attribute.Electric, Attribute.Fire, Attribute.Water, Attribute.Wind].map((attribute: Attribute, i: number) => {\r\n                            return <div className=\"field\">\r\n                                <p className=\"control has-icons-left\">\r\n                                    <input type=\"number\" className=\"input\" value={this.props.battler.attributeResistances[attribute]} onChange={this.handleAttributeChange.bind(this, attribute)} placeholder={ATTRIBUTE_NAME[attribute]}/>\r\n                                    <span className=\"icon is-small is-left\">\r\n                                        <i className={\"fas \" + ICON_NAME[attribute]}></i>\r\n                                    </span>\r\n                                </p>\r\n                            </div>\r\n                        })\r\n                    }\r\n                </div>\r\n            </div>\r\n        \r\n            <div className=\"is-grouped-right is-grouped field\">\r\n                <div className=\"control\">\r\n                    <button className=\"button is-danger\" onClick={this.props.onBattlerDeleted}>删除</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    }\r\n\r\n    \r\n}","import React, { ReactNode, ChangeEvent } from \"react\";\r\nimport { BattlerData } from \"../models/Battler\";\r\nimport { BattlerInfoView } from \"./BattlerInfoView\";\r\nimport { SideData } from \"../models/Side\";\r\nimport { Attribute } from \"../models/Attribute\";\r\nimport { Field } from \"./Field\";\r\n\r\ninterface Props{\r\n    isLeft: boolean;\r\n    side: SideData;\r\n    onSideChanged: (side: SideData) => void;\r\n}\r\n\r\nexport class SideInfoView extends React.Component<Props, {}>{\r\n\r\n    side: SideData;\r\n    maxBattlerId: number;\r\n\r\n    constructor(props : Props) {\r\n        super(props);\r\n        this.handleHpChange = this.handleHpChange.bind(this);\r\n        this.handleSpChange = this.handleSpChange.bind(this);\r\n        this.addBattler = this.addBattler.bind(this);\r\n        this.side = {hp: 0, sp: 0, battlers: []};\r\n        this.maxBattlerId = 0;\r\n    }\r\n\r\n    handleHpChange(e: ChangeEvent<HTMLInputElement>) {\r\n        let side = this.copySide(this.props.side);\r\n        side.hp = Number.parseInt(e.target.value);\r\n        this.props.onSideChanged(side);\r\n    }\r\n\r\n    handleSpChange(e: ChangeEvent<HTMLInputElement>) {\r\n        let side = this.copySide(this.props.side);\r\n        side.sp = Number.parseInt(e.target.value);\r\n        this.props.onSideChanged(side);\r\n    }\r\n\r\n    handleBattlerChanged(id: number, battler: BattlerData) {\r\n        let side = this.copySide(this.props.side);\r\n        let battlers = side.battlers;\r\n        battlers[id] = battler;\r\n        this.props.onSideChanged(side);\r\n    }\r\n\r\n    addBattler() {\r\n        let side = this.copySide(this.props.side);\r\n        let battlers = side.battlers;\r\n        let res = {[Attribute.Earth]: 0, [Attribute.Electric]: 0, [Attribute.Fire]: 0, [Attribute.Water]: 0, [Attribute.Wind]: 0};\r\n        let b: BattlerData = {dp: 0, name: \"\", attributeResistances: res, id: this.maxBattlerId++, position: 0};\r\n        battlers.push(b);\r\n        this.props.onSideChanged(side);\r\n    }\r\n\r\n    deleteBattler(id: number) {\r\n        let battlers = this.props.side.battlers.filter(b => b.id !== id);\r\n        this.props.onSideChanged({...this.props.side, battlers});\r\n        \r\n\r\n    }\r\n\r\n    copySide(side: SideData) : SideData {\r\n        this.side.hp = side.hp;\r\n        this.side.sp = side.sp;\r\n        this.side.battlers = side.battlers;\r\n        return this.side;\r\n    }\r\n\r\n    render(): ReactNode{\r\n        return <div className=\"column\">\r\n            <div className=\"side-info-view\">\r\n                <Field label=\"HP:\" className=\"input\" type=\"number\" onChange={this.handleHpChange} value={this.props.side.hp}/>\r\n                <Field label=\"AP:\" className=\"input\" type=\"number\" onChange={this.handleSpChange} value={this.props.side.sp}/>\r\n                <div className=\"battlers-view\">\r\n                    <label className=\"label\">角色：</label>\r\n                    {\r\n                        this.props.side.battlers.map((b, id) => {\r\n                            return <BattlerInfoView isLeft={this.props.isLeft} battler={b} onBattlerChanged={this.handleBattlerChanged.bind(this, id) } onBattlerDeleted={() => this.deleteBattler(b.id)} key={b.id}/>\r\n                        })\r\n                    }\r\n                    <button className=\"button\" onClick={this.addBattler}>添加角色</button>\r\n                </div>\r\n            </div>\r\n            \r\n\r\n        </div>\r\n    }\r\n}","import React, { ChangeEvent } from \"react\";\r\nimport { ActionData } from \"../models/ActionData\";\r\nimport { Attribute } from \"../models/Attribute\";\r\nimport { Field } from \"./Field\";\r\n\r\ninterface Props{\r\n    action: ActionData;\r\n    onActionChanged: (action: ActionData) => void;\r\n}\r\n\r\nexport class ActionInfoView extends React.Component<Props> {\r\n    private action: ActionData;\r\n    constructor(props: Props) {\r\n        super(props);\r\n        this.action = {spCost: 0, hpDamage: 0, attribute: Attribute.Fire, attributeDamage: 0, targetArea: [], name: \"\"};\r\n        this.onAttributeChanged = this.onAttributeChanged.bind(this);\r\n        this.onAttributeDamageChanged = this.onAttributeDamageChanged.bind(this);\r\n        this.onHpDamageChanged = this.onHpDamageChanged.bind(this);\r\n        this.onSpCostChanged = this.onSpCostChanged.bind(this);\r\n        this.onNameChanged = this.onNameChanged.bind(this);\r\n    }\r\n\r\n    copyAction(action: ActionData) {\r\n        this.action.spCost = action.spCost;\r\n        this.action.targetArea = action.targetArea;\r\n        this.action.hpDamage = action.hpDamage;\r\n        this.action.attribute = action.attribute;\r\n        this.action.attributeDamage = action.attributeDamage;\r\n        this.action.name = action.name;\r\n        return this.action;\r\n    }\r\n\r\n    handleAreaClicked(x: number, y: number) {\r\n        console.log(\"handleAreaClicked\", x, y);\r\n        let action = this.copyAction(this.props.action);\r\n        let existed = action.targetArea.findIndex(v => v[0] === x && v[1] === y);\r\n        if(existed >= 0) {\r\n            action.targetArea.splice(existed, 1);\r\n        }\r\n        else{\r\n            action.targetArea.push([x, y]);\r\n        }\r\n        this.props.onActionChanged(action);\r\n    }\r\n\r\n    isAreaChecked(x: number, y: number) {\r\n        return this.props.action.targetArea.find(v => v[0] === x && v[1] === y) !== undefined;\r\n    }\r\n\r\n    onAttributeChanged(e: ChangeEvent<HTMLSelectElement>) {\r\n        let action = this.copyAction(this.props.action);\r\n        action.attribute = Number.parseInt(e.target.value);\r\n        this.props.onActionChanged(action);\r\n    }\r\n\r\n    onHpDamageChanged(e: ChangeEvent<HTMLInputElement>) {\r\n        let action = this.copyAction(this.props.action);\r\n        action.hpDamage = Number.parseInt(e.target.value);\r\n        this.props.onActionChanged(action);\r\n    }\r\n\r\n    onSpCostChanged(e: ChangeEvent<HTMLInputElement>) {\r\n        let action = this.copyAction(this.props.action);\r\n        action.spCost = Number.parseInt(e.target.value);\r\n        this.props.onActionChanged(action);\r\n    }\r\n\r\n    onAttributeDamageChanged(e: ChangeEvent<HTMLInputElement>) {\r\n        let action = this.copyAction(this.props.action);\r\n        action.attributeDamage = Number.parseInt(e.target.value);\r\n        this.props.onActionChanged(action);\r\n    }\r\n\r\n    onNameChanged(e: ChangeEvent<HTMLInputElement>) {\r\n        let action = this.copyAction(this.props.action);\r\n        action.name = e.target.value;\r\n        this.props.onActionChanged(action);\r\n    }\r\n\r\n    getCellClassName(x: number, y: number) {\r\n        return \"action-info-target-cell\" + (this.isAreaChecked(x,y) ? \" checked\" : \"\") + (x === 0 && y === 0 ? \" center\" : \"\");\r\n    }\r\n\r\n    render() {\r\n        return <div className=\"action-view\">\r\n            <Field label=\"名称\"  type=\"text\" value={this.props.action.name} onChange={this.onNameChanged} />\r\n            <Field label=\"HP伤害\" type=\"number\" value={this.props.action.hpDamage} onChange={this.onHpDamageChanged} />\r\n            <Field label=\"SP消耗\" type=\"number\" value={this.props.action.spCost} onChange={this.onSpCostChanged} />\r\n            <Field label=\"属性伤害\" type=\"number\" value={this.props.action.attributeDamage} onChange={this.onAttributeDamageChanged} />\r\n            <div className=\"field is-horizontal\">\r\n                <div className=\"field-label is-normal\">\r\n                    <label className=\"label\">属性</label>\r\n                </div>\r\n                <div className=\"field-body\">\r\n                    <div className=\"field\">\r\n                        <div className=\"control\">\r\n                            <div className=\"select is-fullwidth\">\r\n                                <select onChange={this.onAttributeChanged} value={this.props.action.attribute}>\r\n                                    <option value={Attribute.Earth}>土</option>\r\n                                    <option value={Attribute.Electric}>电</option>\r\n                                    <option value={Attribute.Fire}>火</option>\r\n                                    <option value={Attribute.Water}>水</option>\r\n                                    <option value={Attribute.Wind}>风</option>\r\n                                </select>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"field is-horizontal\">\r\n                <div className=\"field-label is-normal\">\r\n                    <label className=\"label\">目标范围</label>\r\n                </div>\r\n                <div className=\"field-body\">\r\n                    <table className=\"action-info-target-table\">\r\n                        <tbody>\r\n                        {\r\n                            [-2,-1,0,1,2].map(x => {\r\n                                return <tr key={x}>\r\n                                    {[-2,-1,0,1,2].map(y => <td className={this.getCellClassName(x,y)} key={y} onClick={(v) => this.handleAreaClicked(x, y, )}></td>)}\r\n                                </tr>\r\n                            })\r\n                        }\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    }\r\n}","import React from \"react\";\r\ninterface Props{\r\n    saves: string[];\r\n    onClosed: () => void;\r\n    onLoad: (name: string) => void;\r\n}\r\n\r\nexport function LoadView(props: Props) {\r\n    return <div className=\"modal is-active\">\r\n        <div className=\"modal-background\"></div>\r\n        <div className=\"modal-card\">\r\n            <header className=\"modal-card-head\">\r\n                <p className=\"modal-card-title\">\r\n                    读取存档\r\n                </p>\r\n                <button className=\"delete\" aria-label=\"close\" onClick={props.onClosed}></button>\r\n            </header>\r\n            <section className=\"modal-card-body\">\r\n                <div className=\"content\">\r\n                    <ol>\r\n                        {\r\n                            props.saves.map((name, id) => \r\n                                <li className=\"load-names\" key={id} onClick={() => props.onLoad(name)}>{name}</li>\r\n                            )\r\n                        }\r\n                    </ol>\r\n                </div>\r\n            </section>\r\n        </div>\r\n    </div>\r\n}","import React from \"react\";\r\nimport { SideInfoView } from \"./SideInfoView\";\r\nimport { SideData } from \"../models/Side\";\r\nimport { ActionData } from \"../models/ActionData\";\r\nimport { ActionInfoView } from \"./ActionInfoView\";\r\nimport { Attribute } from \"../models/Attribute\";\r\nimport { LoadView } from \"./LoadView\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst META_ITEM = \"_saveMetaItem\";\r\n\r\ninterface SaveData{\r\n    side: SideData;\r\n    side2: SideData;\r\n    actions: ActionData[];\r\n}\r\n\r\ninterface Props{\r\n    onComplete: (sideA: SideData, sideB: SideData, actions: ActionData[]) => void;\r\n}\r\n\r\nexport class EditView extends React.Component<Props, {side: SideData, side2: SideData, actions: ActionData[], loadShowing: boolean, saves: string[], currentPage: \"sides\" | \"actions\"}>{\r\n    constructor(props: Props) {\r\n        super(props);\r\n        this.state = {\r\n            side: {hp: 0, sp: 0, battlers: []},\r\n            side2: {hp:0, sp:0, battlers: []},\r\n            actions: [],\r\n            loadShowing: false,\r\n            saves: [],\r\n            currentPage: \"sides\" \r\n        }\r\n        this.handleSideChanged = this.handleSideChanged.bind(this);\r\n        this.handleSide2Changed = this.handleSide2Changed.bind(this);\r\n        this.onAddAction = this.onAddAction.bind(this);\r\n        this.onComplete = this.onComplete.bind(this);\r\n    }\r\n\r\n    handleSideChanged(side: SideData) {\r\n        this.setState({side: side});\r\n    }\r\n\r\n    handleSide2Changed(side: SideData) {\r\n        this.setState({side2: side});\r\n    }\r\n\r\n    onActionChanged(id: number, action: ActionData) {\r\n        this.setState((state) => {\r\n            let arr = state.actions;\r\n            arr[id] = action;\r\n            return {actions: arr};\r\n        })\r\n    }\r\n\r\n    onAddAction() {\r\n        this.setState((state) => {\r\n            let arr = state.actions;\r\n            arr.push({hpDamage: 0, spCost: 0, attribute: Attribute.Earth, attributeDamage: 0, targetArea: [], name: \"\"})\r\n            return {actions: arr};\r\n        })\r\n    }\r\n\r\n    onComplete() {\r\n        this.props.onComplete(this.state.side, this.state.side2, this.state.actions);\r\n    }\r\n\r\n    onSave() {\r\n        let savename = window.prompt(\"存档名称（同名会自动覆盖）\", new Date().toLocaleString());\r\n        if(savename === null) {\r\n            return;\r\n        }\r\n        savename = savename.trim();\r\n        if(savename === \"\") {\r\n            return;\r\n        }\r\n        if(savename === META_ITEM) {\r\n            window.alert(\"非法名称\");\r\n            return;\r\n        }\r\n        const stateString = JSON.stringify({side: this.state.side, side2: this.state.side2, actions: this.state.actions});\r\n        const namesString = localStorage.getItem(META_ITEM);\r\n        let names: string[];\r\n        if(namesString === null) {\r\n            names = [];\r\n        }else{\r\n            names = JSON.parse(namesString) as string[];\r\n        }\r\n        if(names.findIndex(x => x === savename) !== -1) {\r\n            if(window.confirm(\"存在同名存档，是否覆盖？\") === false) {\r\n                return;\r\n            }\r\n        }else{\r\n            names.push(savename);\r\n        }\r\n        localStorage.setItem(META_ITEM, JSON.stringify(names));\r\n        localStorage.setItem(savename, stateString);\r\n    }\r\n\r\n    onLoad() {\r\n        const namesString = localStorage.getItem(META_ITEM);\r\n        if(namesString === null) {\r\n            alert(\"无存档\");\r\n            return;\r\n        }\r\n        let names = JSON.parse(namesString) as string[];\r\n        console.log(\"onLoad\", names);\r\n        this.setState({\r\n            loadShowing: true,\r\n            saves: names\r\n        });\r\n    }\r\n\r\n    onLoadCanceled() {\r\n        this.setState({loadShowing: false})\r\n    }\r\n\r\n    onLoadSelected(name: string) { \r\n        const dataString = localStorage.getItem(name);\r\n        if(dataString === null) {\r\n            alert(\"读取错误！\");\r\n            this.setState({loadShowing: false});\r\n            return;\r\n        }\r\n        const data = JSON.parse(dataString) as SaveData;\r\n        this.setState({\r\n            loadShowing: false,\r\n            side: data.side,\r\n            side2: data.side2,\r\n            actions: data.actions\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return <React.Fragment>\r\n            <div className=\"container\">\r\n                <div className=\"tabs\">\r\n                    <ul>\r\n                        <li className={this.state.currentPage === \"sides\" ? \"is-active\" : \"\"}>\r\n                            <a onClick={(e) => {e.preventDefault(); this.setState({currentPage: \"sides\"});}}>角色</a>\r\n                        </li>\r\n                        <li className={this.state.currentPage === \"actions\" ? \"is-active\" : \"\"}>\r\n                            <a onClick={(e) => {e.preventDefault(); this.setState({currentPage: \"actions\"});}}>行为</a>\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n                {\r\n                    this.state.currentPage === \"sides\" ? \r\n                        <div className=\"sides-view\">\r\n                            <div className=\"columns edit-view-troop-headers\">\r\n                                <div className=\"column edit-view-troop-header red\"><p>红方</p></div>\r\n                                <div className=\"column edit-view-troop-header blue\"><p>蓝方</p></div>\r\n                            </div>\r\n                            \r\n                            <div className=\"columns side-info-views\">\r\n                                <SideInfoView side={this.state.side} onSideChanged={this.handleSideChanged} isLeft={true}/>\r\n                                \r\n                                <SideInfoView side={this.state.side2} onSideChanged={this.handleSide2Changed} isLeft={false}/>\r\n                            </div>\r\n                        </div> \r\n                    :\r\n                         null\r\n                }\r\n                \r\n\r\n                {\r\n                    this.state.currentPage === \"actions\" ? \r\n                        <div className=\"actions-view\">\r\n                            {\r\n                                this.state.actions.map((action, id) => {\r\n                                    return <ActionInfoView action={action} onActionChanged={this.onActionChanged.bind(this, id)} key={id}/>\r\n                                })\r\n                            }\r\n                            <div className=\"field\">\r\n                                <button className=\"button\" onClick={this.onAddAction}>添加</button>\r\n                            </div>\r\n                            \r\n                        </div>\r\n                    :\r\n                        null\r\n                }\r\n                \r\n                <div className=\"footer-view field is-grouped\">\r\n                    <p className=\"control\">\r\n                        <Link className=\"button is-primary\" to=\"/battle\" onClick={this.onComplete}>完成</Link>\r\n                    </p>\r\n                    <p className=\"control\">\r\n                        <button className=\"button\" onClick={() => this.onSave()}>保存</button>\r\n                    </p>\r\n                    <p className=\"control\">\r\n                        <button className=\"button\" onClick={() => this.onLoad()}>读取</button>\r\n                    </p>\r\n                    \r\n                </div>\r\n            </div>\r\n            {\r\n                this.state.loadShowing ? \r\n                    <LoadView saves={this.state.saves} onClosed={() => this.onLoadCanceled()} onLoad={(name) => this.onLoadSelected(name)} /> : null\r\n            }\r\n        </React.Fragment>\r\n    }\r\n\r\n}","import {Attribute} from \"./Attribute\"\r\nimport { Side } from \"./Side\";\r\nexport class Battler{\r\n    dp: number;\r\n    attributeResistances: {[key in Attribute]: number}\r\n    side: Side;\r\n    private currentAttribute: {attribute: Attribute | null, point: number}\r\n    private weakState: boolean;\r\n    private thisTurnDpDamaged: boolean;\r\n    position: number;\r\n    name: string;\r\n    id: number;\r\n\r\n    constructor(side: Side, data: BattlerData) {\r\n        this.position = data.position;\r\n        this.side = side;\r\n        this.dp = data.dp;\r\n        this.attributeResistances = data.attributeResistances;\r\n        this.currentAttribute = {attribute: null, point: 0};\r\n        this.weakState = false;\r\n        this.thisTurnDpDamaged = false;\r\n        this.name = data.name;\r\n        this.id = data.id;\r\n    }\r\n\r\n    getCurrentAttribute() : Attribute | null { \r\n        return this.currentAttribute.attribute;\r\n    }\r\n\r\n    getAttributePoint(): number {\r\n        return this.currentAttribute.point;\r\n    }    \r\n\r\n    applyAttributeDamage(attribute: Attribute, attributeDamage: number): AttributeDamageResult{\r\n        let result: AttributeDamageResult = {dpDamage: 0, attributePointAttached: 0, knockedIntoWeak: false, attribute: null};\r\n        \r\n        if(this.weakState && !this.thisTurnDpDamaged) {\r\n            result.dpDamage = 1;\r\n            this.dp -= 1;\r\n            this.thisTurnDpDamaged = true;\r\n        }\r\n        if(this.weakState) {\r\n            //in weak state, attribute point won't increase anymore.\r\n            return result;\r\n        }\r\n        result.attribute = attribute;\r\n        result.attributePointAttached = attributeDamage;\r\n        if(this.currentAttribute.attribute === attribute) {\r\n            this.currentAttribute.point += attributeDamage;\r\n        }\r\n        else{\r\n            this.currentAttribute.attribute = attribute;\r\n            this.currentAttribute.point = attributeDamage;\r\n        }\r\n        let resist = this.attributeResistances[attribute];\r\n        if(resist !== 0 && resist <= this.currentAttribute.point) {\r\n            this.weakState = true;\r\n            this.currentAttribute.point = 0;\r\n            result.knockedIntoWeak = true;\r\n        }\r\n        return result;\r\n    }\r\n\r\n    onTurnStart() : void{\r\n        this.thisTurnDpDamaged = false;\r\n        this.weakState = false;\r\n    }\r\n\r\n    isDead() : boolean {\r\n        return this.dp <= 0;\r\n    }\r\n\r\n    isWeakState(): boolean {\r\n        return this.weakState;\r\n    }\r\n}\r\nexport interface AttributeDamageResult{\r\n    knockedIntoWeak: boolean;\r\n    dpDamage: number;\r\n    attribute: Attribute | null;\r\n    attributePointAttached: number;\r\n}\r\nexport interface BattlerData{\r\n    name: string;\r\n    dp: number;\r\n    id: number;\r\n    attributeResistances: {[key in Attribute]: number};\r\n    position: 0|1|2|3|4|5;\r\n}\r\nexport type Position = 0|1|2|3|4|5;","import { Battler, BattlerData } from \"./Battler\";\r\nimport { Action } from \"./Action\";\r\n\r\nexport class Side{\r\n    opponent: Side | null;\r\n    damageMultiplier: number;\r\n    thisActionDamageMultiplier: number;\r\n    damageMultiplierDelta: number;\r\n    battlers: Battler[];\r\n    hp: number;\r\n    sp: number;\r\n    \r\n    constructor(data: SideData) {\r\n        this.battlers = data.battlers.map(v => new Battler(this, v));\r\n        this.damageMultiplier = 1.0;\r\n        this.thisActionDamageMultiplier = 1.0;\r\n        this.damageMultiplierDelta = 0.2;\r\n        this.opponent = null;\r\n        this.hp = data.hp;\r\n        this.sp = data.sp;\r\n    }\r\n\r\n    getBattler(position: [number, number]) : Battler | undefined {\r\n        const flatPosition = position[0] * 2 + position[1];\r\n        return this.battlers.find(b => b.position === flatPosition);\r\n    }\r\n    \r\n\r\n    setOpponent(side: Side) {\r\n        this.opponent = side;\r\n    }\r\n\r\n    applyHpDamage(hpDamage: number): HpDamageResult {\r\n        this.hp -= hpDamage;\r\n        if(this.hp < 0) {\r\n            this.hp = 0;\r\n        }\r\n        return {hpDamage: hpDamage, isDead: this.hp === 0};\r\n    }\r\n\r\n    onDamageWeakState(action: Action): DamageMultiplierResult {\r\n        let ret = {multiplierAdded: this.damageMultiplierDelta};\r\n        this.thisActionDamageMultiplier += this.damageMultiplierDelta;\r\n        this.damageMultiplierDelta += 0.2;\r\n        return ret;\r\n    }\r\n\r\n    onActionEnd() {\r\n        this.damageMultiplier = this.thisActionDamageMultiplier;\r\n    }\r\n\r\n    onTurnStart() {\r\n        this.damageMultiplier = 1.0;\r\n        this.thisActionDamageMultiplier = 1.0;\r\n        this.damageMultiplierDelta = 0.2;\r\n        this.battlers.forEach(b => b.onTurnStart());\r\n    }\r\n\r\n    getDisplayDamageMultiplier(): number{\r\n        return this.thisActionDamageMultiplier;\r\n    }\r\n\r\n\r\n}\r\n\r\nexport interface HpDamageResult{\r\n    hpDamage: number;\r\n    isDead: boolean;\r\n}\r\n\r\nexport interface SideData{\r\n    battlers: BattlerData[];\r\n    hp: number;\r\n    sp: number;\r\n}\r\n\r\nexport interface DamageMultiplierResult{\r\n    multiplierAdded: number;\r\n}\r\n","import { Battler, AttributeDamageResult } from \"./Battler\";\r\nimport { HpDamageResult, DamageMultiplierResult  } from \"./Side\";\r\nimport { ActionData } from \"./ActionData\";\r\n\r\nexport class Action{\r\n    user: Battler;\r\n    targets: Battler[] | null;\r\n    data: ActionData;\r\n    id: number;\r\n    private attack: Attack | null;\r\n    private targetPoint: [number, number];\r\n\r\n    constructor(ad: ActionData, user: Battler, target: [number, number], id: number) {\r\n        this.data = ad;\r\n        this.targets = null;\r\n        this.attack = null;\r\n        this.user = user;\r\n        this.targetPoint = target;\r\n        this.id = id;\r\n    }\r\n\r\n    canUse(){\r\n        return !this.user.isDead();\r\n    }\r\n\r\n    step() : boolean{\r\n        if(!this.canUse()){\r\n            return false;\r\n        }\r\n        if(this.targets === null) {\r\n            let side = this.user.side.opponent;\r\n            this.targets = this.data.targetArea.map(point => {\r\n                let x = (this.targetPoint[0] + point[0]);\r\n                let y = (this.targetPoint[1] + point[1]);\r\n                //todo extract position calculator.\r\n                if(x > 2 || x < 0 || y > 1 || y < 0) {\r\n                    return undefined;\r\n                }\r\n                return side!.getBattler([x,y]);\r\n            }).filter(v => v !== undefined) as Battler[];\r\n        }\r\n        if(this.targets.length === 0) {\r\n            this.user.side.onActionEnd();\r\n            return false;\r\n        }\r\n        let t = this.targets.shift();\r\n        this.attack = new Attack(this.user, t!, this);\r\n        return true;\r\n    }\r\n\r\n    getCurrentAttack() : Attack | null{\r\n        return this.attack;\r\n    }\r\n}\r\n\r\nexport class Attack{\r\n    user: Battler;\r\n    target: Battler;\r\n    action: Action;\r\n    hpDamageResult: HpDamageResult;\r\n    damageMultiplierResult: DamageMultiplierResult | null;\r\n    attributeDamageResult: AttributeDamageResult;\r\n\r\n    constructor(user: Battler, target: Battler, action: Action){\r\n        this.user = user;\r\n        this.target = target;\r\n        this.action = action;\r\n        let hpDamage = this.user.side.damageMultiplier * this.action.data.hpDamage;\r\n        this.hpDamageResult = this.target.side.applyHpDamage(hpDamage);\r\n        this.damageMultiplierResult = null;\r\n        if(this.action.data.attribute === this.target.getCurrentAttribute() && this.target.isWeakState()) {\r\n            this.damageMultiplierResult = this.user.side.onDamageWeakState(this.action);\r\n        }\r\n        this.attributeDamageResult = this.target.applyAttributeDamage(this.action.data.attribute, this.action.data.attributeDamage);\r\n    }\r\n}","import { Side, SideData } from \"../models/Side\";\r\nimport { Action, Attack } from \"../models/Action\";\r\nimport { ActionData } from \"../models/ActionData\";\r\nimport { Battler } from \"../models/Battler\";\r\nimport { Observable, BehaviorSubject } from \"rxjs\" \r\n\r\nexport type InputtingPhase = \"decideBattler\" | \"decideAction\" | \"decideTarget\" | undefined;\r\nexport type Phase = \"inputting\"|\"processing\" | undefined;\r\n\r\nconst UPDATE_INTERVAL = 200;\r\n\r\nexport class BattleVM {\r\n    private _sideA: Side;\r\n    private _sideB: Side;\r\n    private _actions: BehaviorSubject<Action[]>;\r\n    private _phase: BehaviorSubject<Phase>;\r\n    private _inputtingPhase: BehaviorSubject<InputtingPhase>;\r\n    private _actionResults : BehaviorSubject<Attack[]>;\r\n    private currentProcessingAction: Action | undefined;\r\n    private _inputtingAction: ActionData | undefined;\r\n    private _currentInputtingBattler: Battler | undefined;\r\n    private _nextActionId: number;\r\n\r\n    constructor(sideA: SideData, sideB: SideData) {\r\n        this._sideA = new Side(sideA);\r\n        this._sideB = new Side(sideB);\r\n        this._sideA.setOpponent(this._sideB);\r\n        this._sideB.setOpponent(this._sideA);\r\n        this._actions = new BehaviorSubject([] as Action[]);\r\n        this._phase = new BehaviorSubject(undefined as Phase);\r\n        this._inputtingPhase = new BehaviorSubject(undefined as InputtingPhase);\r\n        this._actionResults = new BehaviorSubject([] as Attack[]);\r\n        this._actions.next([]);\r\n        this._actionResults.next([]);\r\n        this.currentProcessingAction = undefined;\r\n        this.startTurn();\r\n        this._nextActionId = 0;\r\n    }\r\n\r\n    get phase() : Observable<Phase>{\r\n        return this._phase;\r\n    }\r\n\r\n    get sideA() {\r\n        return this._sideA;\r\n    }\r\n\r\n    get sideB() {\r\n        return this._sideB;\r\n    }\r\n\r\n    get actions() : Observable<Action[]>{\r\n        return this._actions;\r\n    }\r\n\r\n    get inputtingPhase() : Observable<InputtingPhase> {\r\n        return this._inputtingPhase;\r\n    }\r\n\r\n    get actionResults() : Observable<Attack[]> {\r\n        return this._actionResults;\r\n    }\r\n\r\n    get inputtingAction() : ActionData | undefined{\r\n        return this._inputtingAction;\r\n    }\r\n\r\n    get targets() : Battler[] | undefined{\r\n        if(this._currentInputtingBattler === undefined) {\r\n            return undefined;\r\n        }\r\n        else{\r\n            return this._currentInputtingBattler!.side.opponent!.battlers; \r\n        }\r\n    }\r\n    \r\n\r\n    addAction(action: ActionData) : boolean{\r\n        this.checkInputting(\"decideAction\");\r\n        if(action.spCost > this._currentInputtingBattler!.side.sp) {\r\n            return false;\r\n        }\r\n        this._inputtingAction = action;\r\n        this._inputtingPhase.next(\"decideTarget\");\r\n        return true;\r\n    }\r\n\r\n    setTarget(target: [number, number]) {\r\n        if(this._inputtingAction!.spCost <= this._currentInputtingBattler!.side.sp) {\r\n            this._currentInputtingBattler!.side.sp -= this._inputtingAction!.spCost;\r\n            this._actions.value.push(new Action(this._inputtingAction!, this._currentInputtingBattler!, target, this._nextActionId));\r\n            ++this._nextActionId;\r\n        }\r\n        this._inputtingPhase.next(\"decideBattler\");\r\n    }\r\n\r\n    selectBattler(battler: Battler) {\r\n        this.checkInputting(\"decideBattler\");\r\n        this._currentInputtingBattler = battler;\r\n        this._inputtingPhase.next(\"decideAction\");\r\n    }\r\n\r\n    checkInputting(inputtingPhase: InputtingPhase) {\r\n        if(this._phase.value !== \"inputting\") {\r\n            throw new Error(\"phase must be inputting\");\r\n        }\r\n        if(this._inputtingPhase.value !== inputtingPhase) {\r\n            throw new Error(\"inputting phase must be \" + inputtingPhase);\r\n        }\r\n    }\r\n\r\n    endInputting() {\r\n        this._phase.next(\"processing\");\r\n        this._inputtingPhase.next(undefined);\r\n        this._actionResults.value.length = 0;\r\n        this._actionResults.next(this._actionResults.value);\r\n        this.updateLoop();\r\n    }\r\n\r\n    updateLoop() {\r\n        this.update();\r\n        if(this._phase.value === \"processing\") {\r\n            setTimeout( ()=> this.updateLoop(), UPDATE_INTERVAL);\r\n        }\r\n    }\r\n\r\n    update() {\r\n        if(this._phase.value === \"inputting\") {\r\n            throw new Error(\"You shouldn't call update in inputting state.\");\r\n        }\r\n        while(true) {\r\n            if(this.currentProcessingAction !== undefined) {\r\n                if(this.currentProcessingAction.step()){\r\n                    this._actionResults.value.push(this.currentProcessingAction.getCurrentAttack()!);\r\n                    this._actionResults.next(this._actionResults.value);\r\n                    return;\r\n                }\r\n            }\r\n            this.currentProcessingAction = this._actions.value.shift();\r\n            this._actions.next(this._actions.value);\r\n            if(this.currentProcessingAction === undefined) {\r\n                this.startTurn();\r\n                break;\r\n            }\r\n        }\r\n        \r\n    }\r\n\r\n    cancelTargetSelection(): void {\r\n        this.checkInputting(\"decideTarget\");\r\n        this._inputtingAction = undefined;\r\n        this._inputtingPhase.next(\"decideAction\");\r\n    }\r\n\r\n    cancelActionSelection() : void {\r\n        this.checkInputting(\"decideAction\");\r\n        this._currentInputtingBattler = undefined;\r\n        this._inputtingPhase.next(\"decideBattler\");\r\n    }\r\n\r\n    private startTurn() {\r\n        this._sideA.onTurnStart();\r\n        this._sideB.onTurnStart();\r\n        this._phase.next(\"inputting\");\r\n        this._inputtingPhase.next(\"decideBattler\");\r\n    }\r\n\r\n    onActionDeleted(id: number): void {\r\n        this.checkInputting(\"decideBattler\");\r\n        const index = this._actions.value.findIndex((a) => a.id === id);\r\n        const [action] = this._actions.value.splice(index, 1);\r\n        action.user.side.sp += action.data.spCost;\r\n        this._actions.next(this._actions.value);\r\n    }\r\n    \r\n}","import { Battler } from \"../models/Battler\";\r\nimport { Attribute } from \"../models/Attribute\";\r\nimport React from \"react\";\r\n\r\nexport function BattlerView(props: {battler: Battler, onClick: (battler: Battler) => void}){\r\n    const attribute: Attribute | null = props.battler.getCurrentAttribute();\r\n    let attributeName : string = \"无\";\r\n    if(attribute !== null){\r\n        switch(attribute) {\r\n            case Attribute.Fire:\r\n                attributeName = \"火\";\r\n                break;\r\n            case Attribute.Water:\r\n                attributeName = \"水\";\r\n                break;\r\n            case Attribute.Wind:\r\n                attributeName = \"风\";\r\n                break;\r\n            case Attribute.Electric:\r\n                attributeName = \"电\";\r\n                break;\r\n            case Attribute.Earth:\r\n                attributeName = \"土\";\r\n                break;\r\n        }\r\n    }\r\n    return <p className=\"battler\" onClick={(e) => props.onClick(props.battler)}>\r\n        <b>{props.battler.name}</b> &nbsp;\r\n        <b>DP: </b> {props.battler.dp} | &nbsp;\r\n        <b>属性：</b>{attributeName}[{props.battler.getAttributePoint()}]\r\n        <span className={props.battler.isWeakState() ? \"\" : \"hidden\"}>| 弱点</span>\r\n        <span className={props.battler.isDead() ? \"\" : \"hidden\"}>| 死亡</span>\r\n    </p>\r\n}","import { Side } from \"../models/Side\";\r\nimport { BattlerView } from \"./BattlerView\";\r\nimport React from \"react\";\r\nimport { Battler } from \"../models/Battler\";\r\n\r\nexport function SideView(props: {side: Side, onBattlerClick: (b: Battler) => void}) {\r\n    return <div className=\"side-view\">\r\n        <p><b>HP:</b> {props.side.hp}</p>\r\n        <p><b>SP:</b> {props.side.sp}</p>\r\n        {props.side.battlers.map(battler => {\r\n            return <BattlerView battler={battler} key={battler.id} onClick={props.onBattlerClick}/>\r\n        })}\r\n    </div>\r\n}","import { Battler } from \"../models/Battler\";\r\nimport React from \"react\";\r\n\r\ninterface Props{\r\n    battlers: Battler[];\r\n    areas: [number, number][];\r\n    onTargetSelected: (n: [number, number]) => void;\r\n    onClose: () => void;\r\n}\r\n\r\nfunction BattlerRow(props: {onHover: (b: boolean, p: [number, number]) => void, onClick: (p: [number, number]) => void, x: number, battlers: Battler[], highlighted: boolean[]}) {\r\n    return <tr>\r\n        <BattlerCell onHover={props.onHover} onClick={props.onClick} x={props.x} y={0} battlers={props.battlers} highlighted={props.highlighted} />\r\n        <BattlerCell onHover={props.onHover} onClick={props.onClick} x={props.x} y={1} battlers={props.battlers} highlighted={props.highlighted} />\r\n    </tr>\r\n    \r\n\r\n}\r\n\r\nfunction BattlerCell(props: {onHover: (b: boolean, p: [number, number]) => void, onClick: (p: [number, number]) => void, x: number, y: number, battlers: Battler[], highlighted: boolean[]}) {\r\n    let pos = props.x * 2 + props.y;\r\n    return <td onMouseLeave={() => props.onHover(false, [props.x,props.y])} onMouseEnter={() => props.onHover(true, [props.x,props.y])} className={`${props.highlighted[pos] ? \"highlighted\" : \"\"} target-cell`} onClick={(e) => props.onClick([props.x, props.y])}>{props.battlers[pos] == null ? \"\" : props.battlers[pos].name}</td>\r\n}\r\n\r\n\r\n\r\nexport class TargetView extends React.Component<Props, {hoveredPosition: [number, number] | undefined}> {\r\n    constructor(props: Props) {\r\n        super(props);\r\n        this.state = {hoveredPosition: undefined};\r\n        this.onTargetSelected = this.onTargetSelected.bind(this);\r\n        this.onHover = this.onHover.bind(this);\r\n    }\r\n\r\n    onTargetSelected(pos: [number, number]) {\r\n        this.props.onTargetSelected(pos);\r\n    }\r\n\r\n    onHover(hovered: boolean, pos: [number, number])  {\r\n        if(hovered) {\r\n            this.setState({hoveredPosition: pos});\r\n        }\r\n        else {\r\n            this.setState((state) => {\r\n                if(state.hoveredPosition !== undefined && state.hoveredPosition[0] === pos[0] && state.hoveredPosition[1] === pos[1]) {\r\n                    return {hoveredPosition: undefined};\r\n                }\r\n                else{\r\n                    return {hoveredPosition: state.hoveredPosition};\r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        let highlighted : number[] = [];\r\n        if(this.state.hoveredPosition !== undefined) {\r\n            let bx = this.state.hoveredPosition[0];\r\n            let by = this.state.hoveredPosition[1];\r\n            this.props.areas.forEach((pos) => {\r\n                let x = bx + pos[0];\r\n                let y = by + pos[1];\r\n                if(x >= 0 && x <= 2 && y >= 0 && y <= 1) {\r\n                    highlighted.push(x * 2 + y);\r\n                }\r\n            })\r\n        }\r\n        let map = Array(6).fill(false);\r\n        highlighted.forEach(v => map[v] = true);\r\n        let battlerMap = Array(6).fill(null);\r\n        this.props.battlers.forEach(b => battlerMap[b.position] = b);\r\n        return <div className=\"modal target\">\r\n                <p className=\"modal-header\">\r\n                    <span className=\"modal-title\">选择目标</span>\r\n                    <button className=\"modal-close anchor-like-button\" onClick={(e) => this.props.onClose()}>[X]</button>\r\n                </p>\r\n                <table className=\"target-table\">\r\n                    <tbody>\r\n                    {\r\n                        [0,1,2].map(v => <BattlerRow key={v} onHover={this.onHover} onClick={this.onTargetSelected} x={v} battlers={battlerMap} highlighted={map}/>)\r\n                    }\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n    }\r\n}","import { Attribute } from \"../models/Attribute\";\r\n\r\nexport const ATTRIBUTE_NAME = {\r\n    [Attribute.Earth] : \"地\",\r\n    [Attribute.Electric] : \"电\",\r\n    [Attribute.Fire] : \"火\",\r\n    [Attribute.Water] : \"水\",\r\n    [Attribute.Wind] : \"风\"\r\n}","import { Attack } from \"../models/Action\";\r\nimport { ATTRIBUTE_NAME } from \"./AttributeName\";\r\nimport React from \"react\";\r\n\r\ninterface Props{\r\n    result: Attack;\r\n}\r\nexport function ResultView(props: Props) {\r\n    let attribute = null;\r\n    if(props.result.attributeDamageResult.attribute !== null) {\r\n        attribute = <React.Fragment>\r\n                <p>附加了 {props.result.attributeDamageResult.attributePointAttached} 点 {ATTRIBUTE_NAME[props.result.attributeDamageResult.attribute]} </p>\r\n                <p>{props.result.attributeDamageResult.knockedIntoWeak ? \"打入了弱点状态\" : \"\"} \r\n                 {props.result.attributeDamageResult.dpDamage > 0 ? `造成了${props.result.attributeDamageResult.dpDamage}点DP伤害` : \"\" } </p>\r\n            </React.Fragment>;\r\n    }\r\n    let damageMultipiler = null;\r\n    if(props.result.damageMultiplierResult !== null) {\r\n        damageMultipiler = <p>\r\n            伤害提升率上涨了: {props.result.damageMultiplierResult.multiplierAdded}\r\n        </p>\r\n    }\r\n    return <div>\r\n        <p>{props.result.action.user.name} 对 {props.result.target.name} 使用了 {props.result.action.data.name}</p>\r\n        <p>造成了 {props.result.hpDamageResult.hpDamage} 点伤害 {props.result.hpDamageResult.isDead ? \"对面已死亡\" : \"\"}</p>\r\n        {attribute}\r\n        {damageMultipiler}\r\n    </div>\r\n}","import { ActionData } from \"../models/ActionData\";\r\nimport React from \"react\";\r\n\r\n\r\ninterface Props{\r\n    action: ActionData;\r\n    onClicked: (action: ActionData) => void;\r\n}\r\n\r\nexport function ActionView(props: Props) {\r\n    return <p onClick={() => props.onClicked(props.action)} className=\"action\">\r\n        <span>{props.action.name}</span> \r\n        &nbsp;\r\n        <span><b>SP消耗:</b>{props.action.spCost}</span>\r\n    </p>\r\n\r\n}","import { ActionData } from \"../models/ActionData\";\r\nimport { ActionView } from \"./ActionView\";\r\nimport React from \"react\";\r\n\r\ninterface Props {\r\n    onActionSelectionClosed: () => void;\r\n    actionDatas: ActionData[];\r\n    onActionClicked: (action: ActionData) => void;\r\n}\r\nexport function ActionSelectionView(props: Props) {\r\n    return <div className=\"actions modal\"> \r\n        <p className=\"modal-header\">\r\n            <span className=\"modal-title\">选择行动：</span>\r\n            <button className=\"modal-close anchor-like-button\" onClick={() => props.onActionSelectionClosed()}>[X]</button>\r\n        </p>\r\n        {\r\n            props.actionDatas.map((action, id) => \r\n                <ActionView action={action} key={id} onClicked={() => props.onActionClicked(action)}/>)\r\n        }\r\n    </div>\r\n}","import { Action } from \"../models/Action\";\r\nimport React from \"react\";\r\n\r\ninterface Props{\r\n    actions: Action[];\r\n    onActionDeleted: (id: number) => void;\r\n}\r\nexport function ActionRecordsView(props: Props) {\r\n    return <div className=\"action-records\">\r\n        {\r\n            props.actions.map(action => <p key={action.id} className=\"action-record\">\r\n                <span>{action.user.name}</span>\r\n                <span className=\"action-record-action-name\">{action.data.name}</span>\r\n                <button className=\"anchor-like-button action-record-delete\" onClick={e=>{e.preventDefault(); props.onActionDeleted(action.id)} }>X</button>\r\n            </p>)\r\n        }\r\n    </div>\r\n}","import React from \"react\";\r\nimport { SideData } from \"../models/Side\";\r\nimport { ActionData } from \"../models/ActionData\";\r\nimport { Phase, BattleVM, InputtingPhase } from \"../viewmodels/BattleVM\";\r\nimport { Action, Attack } from \"../models/Action\";\r\nimport { Subscription } from \"rxjs\";\r\nimport { SideView } from \"./SideView\";\r\nimport { TargetView } from \"./TargetView\";\r\nimport { Battler } from \"../models/Battler\";\r\nimport { ResultView } from \"./ResultView\";\r\nimport { ActionSelectionView } from \"./ActionSelectionView\";\r\nimport { ActionRecordsView } from \"./ActionRecordsView\";\r\n\r\ninterface Props{\r\n    sideA: SideData | undefined;\r\n    sideB: SideData | undefined;\r\n    actionDatas: ActionData[] | undefined;\r\n}\r\ninterface State {\r\n    phase: Phase;\r\n    inputtingPhase: InputtingPhase;\r\n    actionResults: Attack[];\r\n    actions: Action[];\r\n}\r\n\r\nexport class BattleView extends React.Component<Props, State>{\r\n\r\n    private subscription : Subscription | undefined;\r\n    private battleVM : BattleVM | undefined;\r\n    private previousProps : Props | undefined;\r\n\r\n    constructor(props: Props) {\r\n        super(props);\r\n        this.state = {\r\n            phase: undefined,\r\n            inputtingPhase: undefined,\r\n            actionResults: [],\r\n            actions: []\r\n        }\r\n        this.onActionClicked = this.onActionClicked.bind(this);\r\n        this.onTargetSelected = this.onTargetSelected.bind(this);\r\n        this.onBattlerSelected = this.onBattlerSelected.bind(this);\r\n        this.onTargetSelectionClosed = this.onTargetSelectionClosed.bind(this);\r\n        this.onActionSelectionClosed = this.onActionSelectionClosed.bind(this);\r\n        this.onActionDeleted = this.onActionDeleted.bind(this);\r\n    }\r\n\r\n    createVM() {\r\n        this.subscription!.unsubscribe();\r\n        this.subscription = new Subscription();\r\n        this.battleVM = undefined;\r\n        if(this.props.sideA !== undefined && this.props.sideB !== undefined) {\r\n            this.battleVM = new BattleVM(this.props.sideA, this.props.sideB);\r\n            this.battleVM!.phase.subscribe(p => this.setState({phase: p}));\r\n            this.battleVM!.inputtingPhase.subscribe(p => this.setState({inputtingPhase: p}));\r\n            this.battleVM!.actionResults.subscribe(r => this.setState({actionResults: r}));\r\n            this.battleVM!.actions.subscribe(a => this.setState({actions: a}));\r\n        }\r\n    }\r\n\r\n    recreateBattleVM() {\r\n        if(this.previousProps !== this.props){\r\n\r\n            this.previousProps = this.props;\r\n\r\n            if(this.subscription !== undefined) {\r\n                this.subscription!.unsubscribe();\r\n                this.subscription = undefined;\r\n            }\r\n            \r\n            this.battleVM = undefined;\r\n            if(this.props.sideA !== undefined && this.props.sideB !== undefined) {\r\n                this.battleVM = new BattleVM(this.props.sideA, this.props.sideB);\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    registerSubscriptions() {\r\n        if(this.subscription === undefined && this.battleVM !== undefined) {\r\n            let d = [];\r\n            d[0] = this.battleVM!.phase.subscribe(p => this.setState({phase: p}));\r\n            d[1] = this.battleVM!.inputtingPhase.subscribe(p => this.setState({inputtingPhase: p}));\r\n            d[2] = this.battleVM!.actionResults.subscribe(r => this.setState({actionResults: r}));\r\n            d[3] = this.battleVM!.actions.subscribe(a => this.setState({actions: a}));\r\n            this.subscription = new Subscription();\r\n            d.forEach(d => this.subscription!.add(d));\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.registerSubscriptions();\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        this.registerSubscriptions();\r\n    }\r\n\r\n    onActionClicked(action: ActionData) {\r\n        this.battleVM!.addAction(action);\r\n    }\r\n\r\n    onTargetSelected(target: [number, number]) {\r\n        this.battleVM!.setTarget(target);\r\n    }\r\n\r\n    onBattlerSelected(battler: Battler) {\r\n        this.battleVM!.selectBattler(battler);\r\n    }\r\n\r\n    onEndTurn() {\r\n        this.battleVM!.endInputting();\r\n    }\r\n\r\n    onTargetSelectionClosed() {\r\n        this.battleVM!.cancelTargetSelection();\r\n    }\r\n\r\n    onActionSelectionClosed() {\r\n        this.battleVM!.cancelActionSelection();\r\n    }\r\n\r\n    onActionDeleted(id: number) {\r\n        this.battleVM!.onActionDeleted(id);\r\n    }\r\n\r\n    render() {\r\n        this.recreateBattleVM();\r\n        if(this.battleVM === undefined) {\r\n            return <React.Fragment/>\r\n        }\r\n        let actions = null;\r\n        console.log(this.state.inputtingPhase);\r\n        if(this.props.actionDatas !== undefined && this.state.inputtingPhase === \"decideAction\") {\r\n            actions = <ActionSelectionView onActionClicked={this.onActionClicked} actionDatas={this.props.actionDatas} onActionSelectionClosed={this.onActionSelectionClosed}\r\n            />\r\n        }\r\n        let target = null;\r\n        if(this.state.inputtingPhase === \"decideTarget\") {\r\n            target = <TargetView battlers={this.battleVM.targets!} onTargetSelected={this.onTargetSelected} areas={this.battleVM.inputtingAction!.targetArea} onClose={this.onTargetSelectionClosed}/>\r\n        }\r\n        return <div>\r\n            <SideView side={this.battleVM!.sideA} onBattlerClick={this.onBattlerSelected}/>\r\n            <SideView side={this.battleVM!.sideB} onBattlerClick={this.onBattlerSelected}/>\r\n            <ActionRecordsView actions={this.state.actions} onActionDeleted={this.onActionDeleted} />\r\n            {\r\n                this.state.phase === \"inputting\" ? <button onClick={() => this.onEndTurn()}>结束回合</button> : null\r\n            }\r\n            <div className={`modal-container ${actions !== null || target !== null ? \"show\" : \"\"}`}>                 \r\n                {\r\n                    actions !== null ? actions : <React.Fragment />\r\n                }\r\n                {\r\n                    target !== null ? target : <React.Fragment />\r\n                }\r\n\r\n            </div>\r\n            {\r\n                this.state.actionResults.map((result, key) => <ResultView key={key} result={result}/>)\r\n            }\r\n        </div>\r\n    }\r\n}","import React from \"react\";\r\nimport { EditView } from \"./EditView\";\r\nimport { SideData } from \"../models/Side\";\r\nimport { ActionData } from \"../models/ActionData\";\r\nimport { BattleView } from \"./BattleView\";\r\nimport { Route } from \"react-router-dom\";\r\n\r\nexport class AppView extends React.Component<{}, {sideA: SideData | undefined, sideB: SideData | undefined, actions: ActionData[]}>{\r\n\r\n    constructor(props: {}) {\r\n        super(props);\r\n        this.state = {sideA: undefined, sideB: undefined, actions: []};\r\n        this.onComplete = this.onComplete.bind(this);\r\n    }\r\n\r\n    onComplete(sideA:SideData, sideB: SideData, actions: ActionData[]) {\r\n        this.setState({sideA: sideA, sideB: sideB, actions: actions});\r\n    }\r\n\r\n    render() {\r\n        return<div>\r\n            <Route render={props => <EditView onComplete={this.onComplete} {...props} />} path=\"/\" exact />\r\n            <Route render={props => <BattleView {...props} sideA={this.state.sideA} sideB={this.state.sideB} actionDatas={this.state.actions} />} path=\"/battle\"  />\r\n        </div>\r\n    }\r\n}","import React from 'react';\nimport './App.css';\nimport { AppView } from './views/AppView';\n\nconst App: React.FC = () => {\n    \n    return <AppView  />\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {HashRouter as Router } from \"react-router-dom\";\nimport \"bulma\";\nimport \"@fortawesome/fontawesome-free/css/all.css\";\n\nReactDOM.render(<Router><App /></Router>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}