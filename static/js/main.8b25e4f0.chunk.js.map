{"version":3,"sources":["models/Attribute.ts","views/Field.tsx","views/AttributeName.ts","views/BattlerInfoView.tsx","models/Battler.ts","views/BattlerPositionView.tsx","views/SideInfoView.tsx","views/ActionInfoView.tsx","views/LoadView.tsx","views/EditView.tsx","models/Side.ts","models/Action.ts","viewmodels/BattleVM.ts","views/BattleFieldView.tsx","views/SideView.tsx","views/TargetView.tsx","views/ResultView.tsx","views/ActionView.tsx","views/ActionSelectionView.tsx","views/ActionRecordsView.tsx","views/BattleView.tsx","views/AppView.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["Attribute","Field","props","label","inputProps","Object","objectWithoutProperties","react_default","a","createElement","className","assign","ATTRIBUTE_NAME","_ATTRIBUTE_NAME","defineProperty","Earth","Electric","Fire","Water","Wind","ICON_NAME","_ICON_NAME","BattlerInfoView","_React$Component","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleDpChange","bind","assertThisInitialized","handleNameChange","inherits","createClass","key","value","e","onBattlerChanged","objectSpread","battler","dp","Number","parseInt","target","name","attribute","attributeResistances","_this2","type","onChange","map","handleAttributeChange","placeholder","onClick","onBattlerDeleted","React","Component","Battler","side","data","position","id","maxDp","currentAttribute","weakState","thisTurnDpDamaged","defence","point","attributeDamage","result","dpDamage","attributePointAttached","knockedIntoWeak","resist","dpRecovery","oldDp","defenceIncrease","console","log","hpDamage","defended","applyHpDamage","XYPosToFlat","x","y","BattlerPositionView","ys","isLeft","rowSpan","pos","battlerPositions","selected","undefined","toString","align","onBattlerPositionChanged","changeHandler","battlers","b","SideInfoView","maxBattlerId","handleHpChange","handleSpChange","addBattler","onSideChanged","hp","sp","toConsumableArray","index","findIndex","_res","push","filter","positions","BattlerInfoView_BattlerInfoView","handleBattlerChanged","deleteBattler","p","i","ActionInfoView","onAttributeChanged","onAttributeDamageChanged","onHpDamageChanged","onSpCostChanged","onNameChanged","onDpRecoveryChanged","onSpRecoveryChanged","onDefenceIncreaseChanged","action","onActionChanged","spCost","spRecovery","onActionDeleted","LoadView","aria-label","onClosed","saves","onLoad","onDelete","stopPropagation","META_ITEM","EditView","maxActionId","state","side2","actions","loadShowing","currentPage","handleSideChanged","handleSide2Changed","onAddAction","onComplete","migrateSaveV2_TO_V3","migrateSaveV3_TO_V4","setState","arr","v","splice","savename","window","prompt","Date","toLocaleString","trim","names","stateString","JSON","stringify","namesString","localStorage","getItem","parse","confirm","setItem","alert","oldSaveItem","newSaveItem","convert","oldNameString","oldSaves","newSave","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","next","done","save","saveString","saveData","err","return","removeItem","newNameString","newNames","_i","_newSave","length","indexOf","convertSide","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","migrateSave","oldSave","forEach","nameString","_this3","dataString","_this4","Fragment","preventDefault","SideInfoView_SideInfoView","ActionInfoView_ActionInfoView","onRemoveAction","react_router_dom","to","onSave","onLoadCanceled","onLoadSelected","onDeleteSave","Side","opponent","damageMultiplier","thisActionDamageMultiplier","damageMultiplierDelta","entries","_ref","_ref2","slicedToArray","find","flatPosition","isDead","oldSp","ret","multiplierAdded","onTurnStart","Action","ad","user","targets","attack","targetPoints","getBattler","Math","floor","canUse","concat","fetchBattlers","self","onActionEnd","t","shift","Attack","hpDamageResult","spRecoveryResult","dpRecoveryResult","defenceIncreaseResult","damageMultiplierResult","attributeDamageResult","applySpRecovery","applyDpRecovery","applyDefenceIncrease","getCurrentAttribute","isWeakState","onDamageWeakState","applyAttributeDamage","BattleVM","sideA","sideB","_sideA","_sideB","_actions","_phase","_inputtingPhase","_actionResults","currentProcessingAction","_inputtingAction","_currentInputtingBattler","_nextActionId","setOpponent","BehaviorSubject","startTurn","checkInputting","actionTargets","left","right","inputtingPhase","Error","updateLoop","update","setTimeout","step","getCurrentAttack","_this$_actions$value$","get","BattlerBriefView","onMouseEnter","enter","onMouseLeave","exit","attrIcon","attr","BattlerDetailView","getAttributePoint","BattleFieldView","prevState","reduce","col","currentBattler","onEnterBattler","onExitBattler","onBattlerClick","SideView","isRed","BattleFieldView_BattleFieldView","BattlerCell","highlighted","TargetView","selectedPosition","0","1","2","3","4","5","onTargetSelected","oldPos","_ref3","_ref4","leftBattlersMap","Array","fill","rightBattlersMap","battlersLeft","battlersRight","onClose","isHighlighted","onConfirm","ResultView","damageMultipiler","dpRcovery","defenceIncreasement","ActionView","onClicked","ActionSelectionView","onActionSelectionClosed","actionDatas","onActionClicked","ActionRecordsView","BattleView","subscription","battleVM","previousProps","phase","actionResults","onBattlerSelected","onTargetSelectionClosed","unsubscribe","Subscription","subscribe","r","d","add","registerSubscriptions","addAction","setTargets","selectBattler","endInputting","cancelTargetSelection","cancelActionSelection","recreateBattleVM","react_router","TargetView_TargetView","onEndTurn","AppView","render","EditView_EditView","path","exact","BattleView_BattleView","App","AppView_AppView","Boolean","location","hostname","match","ReactDOM","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.8b25e4f0.chunk.js","sourcesContent":["export enum Attribute{\r\n    Fire, Water, Earth, Wind, Electric\r\n}","import React from \"react\";\r\ninterface Props{\r\n    label: string;\r\n    [x:string] :any;\r\n}\r\nexport function Field(props: Props) {\r\n    let {label, ...inputProps} = props;\r\n    return <div className=\"field is-horizontal\">\r\n        <div className=\"field-label\">\r\n            <label className=\"label\">{label}</label>\r\n        </div>\r\n        <div className=\"field-body\">\r\n            <div className=\"field\">\r\n                <div className=\"control\">\r\n                    <input className=\"input\" {...inputProps}/>\r\n                </div>\r\n                \r\n            </div>\r\n        </div>\r\n        \r\n    </div>\r\n}","import { Attribute } from \"../models/Attribute\";\r\n\r\nexport const ATTRIBUTE_NAME = {\r\n    [Attribute.Earth] : \"地\",\r\n    [Attribute.Electric] : \"电\",\r\n    [Attribute.Fire] : \"火\",\r\n    [Attribute.Water] : \"水\",\r\n    [Attribute.Wind] : \"风\"\r\n}\r\n\r\nexport const ICON_NAME = {\r\n    [Attribute.Earth]: \"fa-mountain\",\r\n    [Attribute.Electric]: \"fa-bolt\",\r\n    [Attribute.Fire]: \"fa-fire\",\r\n    [Attribute.Water]: \"fa-tint\",\r\n    [Attribute.Wind]: \"fa-wind\"\r\n}\r\n","import React, { ChangeEvent } from \"react\";\r\nimport { Attribute } from \"../models/Attribute\";\r\nimport { BattlerData, Position } from \"../models/Battler\";\r\nimport { Field } from \"./Field\";\r\nimport {ATTRIBUTE_NAME, ICON_NAME} from \"./AttributeName\";\r\n\r\ninterface Props{\r\n    isLeft: boolean;\r\n    battler: BattlerData;\r\n    onBattlerChanged: (battler: BattlerData) => void;\r\n    onBattlerDeleted: () => void\r\n}\r\n\r\nexport class BattlerInfoView extends React.Component<Props, {}>{\r\n    constructor(props: Props) {\r\n        super(props);\r\n        this.handleDpChange = this.handleDpChange.bind(this);\r\n        this.handleNameChange = this.handleNameChange.bind(this);\r\n    }\r\n\r\n    handleDpChange(e: ChangeEvent<HTMLInputElement>) {\r\n        this.props.onBattlerChanged({...this.props.battler, dp: Number.parseInt(e.target.value)});\r\n    }\r\n\r\n    handleNameChange(e: ChangeEvent<HTMLInputElement>) {\r\n        this.props.onBattlerChanged({...this.props.battler, name: e.target.value});\r\n    }\r\n\r\n    handleAttributeChange(attribute: Attribute, e: ChangeEvent<HTMLInputElement>) {\r\n        const attributeResistances = {...this.props.battler.attributeResistances, [attribute]: Number.parseInt(e.target.value)};\r\n        this.props.onBattlerChanged({...this.props.battler, attributeResistances});\r\n    }\r\n\r\n    render() {\r\n        return <div className=\"battler-info-view\">\r\n            <Field label=\"DP:\" type=\"number\" onChange={this.handleDpChange} value={this.props.battler.dp} />\r\n            <Field label=\"名称:\" type=\"text\" onChange={this.handleNameChange} value={this.props.battler.name} />\r\n        \r\n            <div className=\"field is-horizontal\">\r\n                <div className=\"field-label\">\r\n                    <label className=\"label\">抗性</label>\r\n                </div>\r\n                <div className=\"field-body\">\r\n                    {\r\n                        [Attribute.Earth, Attribute.Electric, Attribute.Fire, Attribute.Water, Attribute.Wind].map((attribute: Attribute) => {\r\n                            return <div className=\"field\" key={attribute}>\r\n                                <p className=\"control has-icons-left\">\r\n                                    <input type=\"number\" className=\"input\" value={this.props.battler.attributeResistances[attribute]} onChange={this.handleAttributeChange.bind(this, attribute)} placeholder={ATTRIBUTE_NAME[attribute]}/>\r\n                                    <span className=\"icon is-small is-left\">\r\n                                        <i className={\"fas \" + ICON_NAME[attribute]}></i>\r\n                                    </span>\r\n                                </p>\r\n                            </div>\r\n                        })\r\n                    }\r\n                </div>\r\n            </div>\r\n        \r\n            <div className=\"is-grouped-right is-grouped field\">\r\n                <div className=\"control\">\r\n                    <button className=\"button is-danger\" onClick={this.props.onBattlerDeleted}>删除</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    }\r\n\r\n    \r\n}","import {Attribute} from \"./Attribute\"\r\nimport { Side, HpDamageResult as SideHpDamageResult } from \"./Side\";\r\nexport class Battler{\r\n    maxDp: number;\r\n    dp: number;\r\n    attributeResistances: {[key in Attribute]: number}\r\n    side: Side;\r\n    private currentAttribute: {attribute: Attribute | null, point: number}\r\n    private weakState: boolean;\r\n    private thisTurnDpDamaged: boolean;\r\n    position: Position;\r\n    name: string;\r\n    id: number;\r\n    defence: number;\r\n\r\n    constructor(side: Side, data: BattlerData, position: Position, id: number) {\r\n        this.position = position;\r\n        this.side = side;\r\n        this.dp = data.dp;\r\n        this.maxDp = data.dp;\r\n        this.attributeResistances = data.attributeResistances;\r\n        this.currentAttribute = {attribute: null, point: 0};\r\n        this.weakState = false;\r\n        this.thisTurnDpDamaged = false;\r\n        this.name = data.name;\r\n        this.id = id;\r\n        this.defence = 0;\r\n    }\r\n\r\n    getCurrentAttribute() : Attribute | null { \r\n        return this.currentAttribute.attribute;\r\n    }\r\n\r\n    getAttributePoint(): number {\r\n        return this.currentAttribute.point;\r\n    }    \r\n\r\n    applyAttributeDamage(attribute: Attribute, attributeDamage: number): AttributeDamageResult{\r\n        let result: AttributeDamageResult = {dpDamage: 0, attributePointAttached: 0, knockedIntoWeak: false, attribute: null};\r\n        \r\n        if(this.weakState && !this.thisTurnDpDamaged && attribute === this.currentAttribute.attribute) {\r\n            result.dpDamage = 1;\r\n            this.dp -= 1;\r\n            this.thisTurnDpDamaged = true;\r\n        }\r\n        if(this.weakState) {\r\n            //in weak state, attribute point won't increase anymore.\r\n            return result;\r\n        }\r\n        result.attribute = attribute;\r\n        result.attributePointAttached = attributeDamage;\r\n        if(this.currentAttribute.attribute === attribute) {\r\n            this.currentAttribute.point += attributeDamage;\r\n        }\r\n        else{\r\n            this.currentAttribute.attribute = attribute;\r\n            this.currentAttribute.point = attributeDamage;\r\n        }\r\n        let resist = this.attributeResistances[attribute];\r\n        if(resist !== 0 && resist <= this.currentAttribute.point) {\r\n            this.weakState = true;\r\n            this.currentAttribute.point = 0;\r\n            result.knockedIntoWeak = true;\r\n        }\r\n        return result;\r\n    }\r\n\r\n    applyDpRecovery(dpRecovery: number): DpRecoveryResult {\r\n        const oldDp = this.dp;\r\n        this.dp += dpRecovery;\r\n        if(this.dp >= this.maxDp){\r\n            this.dp = this.maxDp;\r\n        }\r\n        if(this.dp < 0) {\r\n            this.dp = 0;\r\n        }\r\n        \r\n        return this.dp - oldDp;\r\n    }\r\n\r\n    applyDefenceIncrease(defenceIncrease: number): DefenceIncreaseResult {\r\n        this.defence += defenceIncrease;\r\n        console.log(this, defenceIncrease);\r\n        return defenceIncrease;\r\n    }\r\n\r\n    applyHpDamage(hpDamage: number): HpDamageResult {\r\n        let defended;\r\n        if(this.defence < hpDamage) {\r\n            defended = this.defence;\r\n            hpDamage -= this.defence;\r\n            this.defence = 0;\r\n            \r\n        }\r\n        else{\r\n            this.defence -= hpDamage;\r\n            defended = hpDamage;\r\n            hpDamage = 0;\r\n        }\r\n        return {...this.side.applyHpDamage(hpDamage), defended};\r\n        \r\n    }\r\n\r\n    onTurnStart() : void{\r\n        if(this.thisTurnDpDamaged) {\r\n            this.weakState = false;\r\n        }\r\n        this.thisTurnDpDamaged = false;\r\n        this.defence = 0;\r\n    }\r\n\r\n    isDead() : boolean {\r\n        return this.dp <= 0;\r\n    }\r\n\r\n    isWeakState(): boolean {\r\n        return this.weakState;\r\n    }\r\n}\r\nexport interface AttributeDamageResult{\r\n    knockedIntoWeak: boolean;\r\n    dpDamage: number;\r\n    attribute: Attribute | null;\r\n    attributePointAttached: number;\r\n}\r\nexport interface BattlerData{\r\n    name: string;\r\n    dp: number;\r\n    id: number;\r\n    attributeResistances: {[key in Attribute]: number};\r\n}\r\n\r\nexport type Position = 0|1|2|3|4|5;\r\nexport function FlatPosToXY(pos: Position) : [0|1|2, 0|1]{\r\n    return [Math.floor(pos / 2), pos % 2] as [0|1|2, 0|1];\r\n}\r\n\r\nexport function XYPosToFlat(x: 0|1|2, y: 0|1): Position {\r\n    return x * 2 + y as Position;\r\n}\r\n\r\nexport interface HpDamageResult extends SideHpDamageResult{\r\n    defended: number;\r\n}\r\n\r\nexport type DpRecoveryResult = number;\r\nexport type DefenceIncreaseResult = number;","import { Position, XYPosToFlat, BattlerData } from \"../models/Battler\";\r\nimport React, { ChangeEvent } from \"react\";\r\n\r\ninterface Props{\r\n    battlers: BattlerData[];\r\n    battlerPositions: {[p in Position]?: number | undefined};\r\n    onBattlerPositionChanged: (pos: Position, id: number | undefined) => void;\r\n    isLeft: boolean;\r\n}\r\nexport function BattlerPositionView(props: Props) {\r\n    const ys = props.isLeft ? [0, 1] : [1, 0];\r\n    const changeHandler = (pos: Position, e: ChangeEvent<HTMLSelectElement>) => {\r\n        const id = e.target.value === \"unselect\" ? undefined : parseInt(e.target.value);\r\n        props.onBattlerPositionChanged(pos, id);\r\n    }\r\n    return <div>\r\n        <table className=\"battler-position-view\">\r\n            <tbody>{\r\n                [0,1,2].map(x => <tr key={x}>\r\n                    {\r\n                        (x === 0 && !props.isLeft) ? <td rowSpan={3} className=\"frontline\">前线</td> : null\r\n                    }\r\n                    {\r\n                        ys.map(y => {\r\n                            const pos = XYPosToFlat(x as 0|1|2, y as 0|1);\r\n                            const id = props.battlerPositions[pos];\r\n                            const selected = id === undefined ? \"unselect\" : id.toString();\r\n                            return <td key={y} align=\"center\">\r\n                                <div className=\"select\">\r\n                                    <select value={selected} onChange={e => changeHandler(pos, e)}>\r\n                                        <option value=\"unselect\"></option> \r\n                                        {\r\n                                            props.battlers.map(b => <option key={b.id} value={b.id.toString()}>\r\n                                                {b.name}\r\n                                            </option>)\r\n                                        }\r\n                                    </select>\r\n                                </div>\r\n                            </td>\r\n                        })\r\n                    }\r\n                    {\r\n                        (x === 0 && props.isLeft) ? <td rowSpan={3} className=\"frontline\">前线</td> : null\r\n                    }\r\n                </tr>)\r\n            }</tbody>\r\n        </table>\r\n    </div>\r\n}","import React, { ReactNode, ChangeEvent } from \"react\";\r\nimport { BattlerData, Position } from \"../models/Battler\";\r\nimport { BattlerInfoView } from \"./BattlerInfoView\";\r\nimport { SideData } from \"../models/Side\";\r\nimport { Attribute } from \"../models/Attribute\";\r\nimport { Field } from \"./Field\";\r\nimport { BattlerPositionView } from \"./BattlerPositionView\";\r\n\r\ninterface Props{\r\n    isLeft: boolean;\r\n    side: SideData;\r\n    onSideChanged: (side: SideData) => void;\r\n}\r\n\r\nexport class SideInfoView extends React.Component<Props, {}>{\r\n\r\n    maxBattlerId: number;\r\n\r\n    constructor(props : Props) {\r\n        super(props);\r\n        this.handleHpChange = this.handleHpChange.bind(this);\r\n        this.handleSpChange = this.handleSpChange.bind(this);\r\n        this.addBattler = this.addBattler.bind(this);\r\n        this.maxBattlerId = 0;\r\n    }\r\n\r\n    handleHpChange(e: ChangeEvent<HTMLInputElement>) {\r\n        this.props.onSideChanged({...this.props.side, hp: Number.parseInt(e.target.value)});\r\n    }\r\n\r\n    handleSpChange(e: ChangeEvent<HTMLInputElement>) {\r\n        this.props.onSideChanged({...this.props.side, sp: Number.parseInt(e.target.value)});\r\n    }\r\n\r\n    handleBattlerChanged(id: number, battler: BattlerData) {\r\n        let battlers = [...this.props.side.battlers];\r\n        const index = battlers.findIndex(b => b.id === id);\r\n        battlers[index] = battler;\r\n        this.props.onSideChanged({...this.props.side, battlers});\r\n    }\r\n\r\n    addBattler() {\r\n        let battlers = [...this.props.side.battlers];\r\n        let res = {[Attribute.Earth]: 0, [Attribute.Electric]: 0, [Attribute.Fire]: 0, [Attribute.Water]: 0, [Attribute.Wind]: 0};\r\n        let b: BattlerData = {dp: 0, name: \"\", attributeResistances: res, id: this.maxBattlerId++};\r\n        battlers.push(b);\r\n        this.props.onSideChanged({...this.props.side, battlers});\r\n    }\r\n\r\n    deleteBattler(id: number) {\r\n        let battlers = this.props.side.battlers.filter(b => b.id !== id);\r\n        const positions: any = this.props.side.battlerPositions;\r\n        for(let key in positions) {\r\n            if(positions[key] === id) {\r\n                positions[key] = undefined;\r\n            }\r\n        }\r\n        this.props.onSideChanged({...this.props.side, battlers, battlerPositions: positions});\r\n    }\r\n\r\n    onBattlerPositionChanged(pos: Position, id: number | undefined): void {\r\n        const battlerPositions = {...this.props.side.battlerPositions, [pos]: id};\r\n        console.log(battlerPositions);\r\n        this.props.onSideChanged({...this.props.side, battlerPositions});\r\n    }\r\n\r\n    render(): ReactNode{\r\n        return <div className=\"column\">\r\n            <div className=\"side-info-view\">\r\n                <Field label=\"HP:\" className=\"input\" type=\"number\" onChange={this.handleHpChange} value={this.props.side.hp}/>\r\n                <Field label=\"AP:\" className=\"input\" type=\"number\" onChange={this.handleSpChange} value={this.props.side.sp}/>\r\n                <div className=\"battlers-view\">\r\n                    <label className=\"label\">角色：</label>\r\n                    {\r\n                        this.props.side.battlers.map((b) => {\r\n                            return <BattlerInfoView isLeft={this.props.isLeft} battler={b} onBattlerChanged={this.handleBattlerChanged.bind(this, b.id) } onBattlerDeleted={() => this.deleteBattler(b.id)} key={b.id}/>\r\n                        })\r\n                    }\r\n                    <button className=\"button\" onClick={this.addBattler}>添加角色</button>\r\n                </div>\r\n                <BattlerPositionView battlers={this.props.side.battlers} battlerPositions={this.props.side.battlerPositions} isLeft={this.props.isLeft} onBattlerPositionChanged={(p,i) => this.onBattlerPositionChanged(p,i)} />\r\n            </div>\r\n        </div>\r\n    }\r\n    \r\n}","import React, { ChangeEvent } from \"react\";\r\nimport { ActionData } from \"../models/ActionData\";\r\nimport { Attribute } from \"../models/Attribute\";\r\nimport { Field } from \"./Field\";\r\n\r\ninterface Props{\r\n    action: ActionData;\r\n    onActionChanged: (action: ActionData) => void;\r\n    onActionDeleted: () => void;\r\n}\r\n\r\nexport class ActionInfoView extends React.Component<Props> {\r\n\r\n    constructor(props: Props) {\r\n        super(props);\r\n        this.onAttributeChanged = this.onAttributeChanged.bind(this);\r\n        this.onAttributeDamageChanged = this.onAttributeDamageChanged.bind(this);\r\n        this.onHpDamageChanged = this.onHpDamageChanged.bind(this);\r\n        this.onSpCostChanged = this.onSpCostChanged.bind(this);\r\n        this.onNameChanged = this.onNameChanged.bind(this);\r\n        this.onDpRecoveryChanged = this.onDpRecoveryChanged.bind(this);\r\n        this.onSpRecoveryChanged = this.onSpRecoveryChanged.bind(this);\r\n        this.onDefenceIncreaseChanged = this.onDefenceIncreaseChanged.bind(this);\r\n    }\r\n\r\n    onAttributeChanged(e: ChangeEvent<HTMLSelectElement>) {\r\n        let action = {...this.props.action, attribute: Number.parseInt(e.target.value)};\r\n        this.props.onActionChanged(action);\r\n    }\r\n\r\n    onHpDamageChanged(e: ChangeEvent<HTMLInputElement>) {\r\n        let action = {...this.props.action, hpDamage: Number.parseInt(e.target.value)};\r\n        this.props.onActionChanged(action);\r\n    }\r\n\r\n    onSpCostChanged(e: ChangeEvent<HTMLInputElement>) {\r\n        let action = {...this.props.action, spCost: Number.parseInt(e.target.value)};\r\n        this.props.onActionChanged(action);\r\n    }\r\n\r\n    onAttributeDamageChanged(e: ChangeEvent<HTMLInputElement>) {\r\n        let action = {...this.props.action, attributeDamage: Number.parseInt(e.target.value)};\r\n        this.props.onActionChanged(action);\r\n    }\r\n\r\n    onNameChanged(e: ChangeEvent<HTMLInputElement>) {\r\n        let action = {...this.props.action, name: e.target.value};\r\n        this.props.onActionChanged(action);\r\n    }\r\n\r\n    onDpRecoveryChanged(e: ChangeEvent<HTMLInputElement>) {\r\n        let action = {...this.props.action, dpRecovery: Number.parseInt(e.target.value)};\r\n        this.props.onActionChanged(action);\r\n    }\r\n\r\n    onSpRecoveryChanged(e: ChangeEvent<HTMLInputElement>) {\r\n        let action = {...this.props.action, spRecovery: Number.parseInt(e.target.value)};\r\n        this.props.onActionChanged(action);\r\n    }\r\n\r\n    onDefenceIncreaseChanged(e: ChangeEvent<HTMLInputElement>) {\r\n        let action = {...this.props.action, defenceIncrease: Number.parseInt(e.target.value)};\r\n        this.props.onActionChanged(action);\r\n    }\r\n    \r\n    render() {\r\n        return <div className=\"action-view\">\r\n            <Field label=\"名称\"  type=\"text\" value={this.props.action.name} onChange={this.onNameChanged} />\r\n            <Field label=\"HP伤害\" type=\"number\" value={this.props.action.hpDamage} onChange={this.onHpDamageChanged} />\r\n            <Field label=\"AP消耗\" type=\"number\" value={this.props.action.spCost} onChange={this.onSpCostChanged} />\r\n            <Field label=\"属性伤害\" type=\"number\" value={this.props.action.attributeDamage} onChange={this.onAttributeDamageChanged} />\r\n            <Field label=\"DP回复\" type=\"number\" value={this.props.action.dpRecovery} onChange={this.onDpRecoveryChanged} />\r\n            <Field label=\"AP回复\" type=\"number\" value={this.props.action.spRecovery} onChange={this.onSpRecoveryChanged} />\r\n            <Field label=\"防御值增加\" type=\"number\" value={this.props.action.defenceIncrease} onChange={this.onDefenceIncreaseChanged} />\r\n            <div className=\"field is-horizontal\">\r\n                <div className=\"field-label is-normal\">\r\n                    <label className=\"label\">属性</label>\r\n                </div>\r\n                <div className=\"field-body\">\r\n                    <div className=\"field\">\r\n                        <div className=\"control\">\r\n                            <div className=\"select is-fullwidth\">\r\n                                <select onChange={this.onAttributeChanged} value={this.props.action.attribute}>\r\n                                    <option value={Attribute.Earth}>土</option>\r\n                                    <option value={Attribute.Electric}>电</option>\r\n                                    <option value={Attribute.Fire}>火</option>\r\n                                    <option value={Attribute.Water}>水</option>\r\n                                    <option value={Attribute.Wind}>风</option>\r\n                                </select> \r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"is-grouped-right is-grouped field\">\r\n                <div className=\"control\">\r\n                    <button className=\"button is-danger\" onClick={this.props.onActionDeleted}>删除</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    }\r\n}","import React from \"react\";\r\ninterface Props{\r\n    saves: string[];\r\n    onClosed: () => void;\r\n    onLoad: (name: string) => void;\r\n    onDelete: (name: string) => void;\r\n}\r\n\r\nexport function LoadView(props: Props) {\r\n    return <div className=\"modal is-active\">\r\n        <div className=\"modal-background\"></div>\r\n        <div className=\"modal-card\">\r\n            <header className=\"modal-card-head\">\r\n                <p className=\"modal-card-title\">\r\n                    读取存档\r\n                </p>\r\n                <button className=\"delete\" aria-label=\"close\" onClick={props.onClosed}></button>\r\n            </header>\r\n            <section className=\"modal-card-body\">\r\n                <div className=\"content\">\r\n                    <ol>\r\n                        {\r\n                            props.saves.map((name, id) => \r\n                                <li className=\"load-name\" key={id} onClick={() => props.onLoad(name)}><span>{name}</span> <button className=\"delete\" onClick={(e) => {props.onDelete(name); e.stopPropagation();}}></button></li>\r\n                            )\r\n                        }\r\n                    </ol>\r\n                </div>\r\n            </section>\r\n        </div>\r\n    </div>\r\n}","import React from \"react\";\r\nimport { SideInfoView } from \"./SideInfoView\";\r\nimport { SideData, Side } from \"../models/Side\";\r\nimport { ActionData } from \"../models/ActionData\";\r\nimport { ActionInfoView } from \"./ActionInfoView\";\r\nimport { Attribute } from \"../models/Attribute\";\r\nimport { LoadView } from \"./LoadView\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst META_ITEM = \"_saveMetaItem_V4\";\r\nconst META_ITEM_V3 = \"_saveMetaItem_V3\";\r\nconst META_ITEM_V2 = \"_saveMetaItem_V2\";\r\n\r\ninterface SaveData{\r\n    side: SideData;\r\n    side2: SideData;\r\n    actions: ActionData[];\r\n}\r\n\r\ninterface Props{\r\n    onComplete: (sideA: SideData, sideB: SideData, actions: ActionData[]) => void;\r\n}\r\n\r\ninterface Action {\r\n    data: ActionData;\r\n    id: number;\r\n}\r\n\r\ninterface State{\r\n    side: SideData;\r\n    side2: SideData;\r\n    actions: Action[];\r\n    loadShowing: boolean;\r\n    saves: string[];\r\n    currentPage: \"sides\" | \"actions\";\r\n}\r\n\r\nexport class EditView extends React.Component<Props, State>{\r\n\r\n    maxActionId: number;\r\n\r\n    constructor(props: Props) {\r\n        super(props);\r\n        this.state = {\r\n            side: {hp: 0, sp: 0, battlers: [], battlerPositions: {}},\r\n            side2: {hp:0, sp:0, battlers: [], battlerPositions: {}},\r\n            actions: [],\r\n            loadShowing: false,\r\n            saves: [],\r\n            currentPage: \"sides\" \r\n        }\r\n        this.maxActionId = 0;\r\n        this.handleSideChanged = this.handleSideChanged.bind(this);\r\n        this.handleSide2Changed = this.handleSide2Changed.bind(this);\r\n        this.onAddAction = this.onAddAction.bind(this);\r\n        this.onComplete = this.onComplete.bind(this);\r\n        this.migrateSaveV2_TO_V3();\r\n        this.migrateSaveV3_TO_V4();\r\n    }\r\n\r\n    handleSideChanged(side: SideData) {\r\n        this.setState({side: side});\r\n    }\r\n\r\n    handleSide2Changed(side: SideData) {\r\n        this.setState({side2: side});\r\n    }\r\n\r\n    onActionChanged(id: number, action: ActionData) {\r\n        this.setState((state) => {\r\n            let arr = [...state.actions];\r\n            const index = arr.findIndex(v=> v.id === id);\r\n            arr[index] = {...arr[index], data: action};\r\n            return {actions: arr};\r\n        })\r\n    }\r\n\r\n    onAddAction() {\r\n        this.setState((state) => {\r\n            let arr = [...state.actions];\r\n            arr.push({id: this.maxActionId++, data: {hpDamage: 0, spCost: 0, attribute: Attribute.Earth, attributeDamage: 0, name: \"\", spRecovery: 0, dpRecovery: 0, defenceIncrease: 0}});\r\n            return {actions: arr};\r\n        })\r\n    }\r\n\r\n    onRemoveAction(id: number) {\r\n        this.setState((state) => {\r\n            const actions = [...state.actions];\r\n            const index = actions.findIndex(v => v.id === id);\r\n            if(index !== -1) {\r\n                actions.splice(index, 1);\r\n            }\r\n            return {actions};\r\n        });\r\n    }\r\n\r\n    onComplete() {\r\n        this.props.onComplete(this.state.side, this.state.side2, this.state.actions.map(v=>v.data));\r\n    }\r\n\r\n    onSave() {\r\n        let savename = window.prompt(\"存档名称（同名会自动覆盖）\", new Date().toLocaleString());\r\n        if(savename === null) {\r\n            return;\r\n        }\r\n        savename = savename.trim();\r\n        if(savename === \"\") {\r\n            return;\r\n        }\r\n        if(savename === META_ITEM || savename === META_ITEM_V2) {\r\n            window.alert(\"非法名称\");\r\n            return;\r\n        }\r\n        //todo remove actions id.\r\n        const stateString = JSON.stringify({side: this.state.side, side2: this.state.side2, actions: this.state.actions.map(v => v.data)});\r\n        const namesString = localStorage.getItem(META_ITEM);\r\n        let names: string[];\r\n        if(namesString === null) {\r\n            names = [];\r\n        }else{\r\n            names = JSON.parse(namesString) as string[];\r\n        }\r\n        if(names.findIndex(x => x === savename) !== -1) {\r\n            if(window.confirm(\"存在同名存档，是否覆盖？\") === false) {\r\n                return;\r\n            }\r\n        }else{\r\n            names.push(savename);\r\n        }\r\n        localStorage.setItem(META_ITEM, JSON.stringify(names));\r\n        localStorage.setItem(savename, stateString);\r\n    }\r\n\r\n    private migrateSave(oldSaveItem: string, newSaveItem: string, convert: (data:any) => any) {\r\n        const oldNameString = localStorage.getItem(oldSaveItem);\r\n        if(oldNameString === null) {\r\n            return;\r\n        }\r\n        const oldSaves = JSON.parse(oldNameString) as string[];\r\n        const newSave = [];\r\n        for (let save of oldSaves) {\r\n            const saveString = localStorage.getItem(save);\r\n            if(saveString === null) {\r\n                continue;\r\n            }\r\n            let saveData = JSON.parse(saveString) as any;\r\n            saveData = convert(saveData);\r\n            newSave.push(save);\r\n            localStorage.setItem(save, JSON.stringify(saveData));\r\n        }\r\n        localStorage.removeItem(oldSaveItem);\r\n        const newNameString = localStorage.getItem(newSaveItem);\r\n        let newNames: string[] = [];\r\n        if(newNameString !== null) {\r\n            newNames = JSON.parse(newNameString) as string[];\r\n        }\r\n        for (let save of newSave) {\r\n            if(newNames.indexOf(save) === -1) {\r\n                newNames.push(save);\r\n            }\r\n        }\r\n        localStorage.setItem(META_ITEM, JSON.stringify(newNames));\r\n    }\r\n\r\n    private migrateSaveV3_TO_V4() {\r\n        const convertSide = (side: any) => {\r\n            let v: any = {};\r\n            for(let b of side.battlers){\r\n                v[b[\"position\"]] = b.id;\r\n                delete b[\"position\"];\r\n            }\r\n            side.battlerPositions = v;\r\n        }\r\n        this.migrateSave(META_ITEM_V3, META_ITEM, (oldSave)=> {\r\n            convertSide(oldSave[\"side\"]);\r\n            convertSide(oldSave[\"side2\"]);\r\n            return oldSave;\r\n        });\r\n    }\r\n\r\n    private migrateSaveV2_TO_V3() {\r\n        this.migrateSave(META_ITEM_V2, META_ITEM_V3, (oldSave) => {\r\n            oldSave.actions.forEach((action: any) => {\r\n                delete action[\"targetArea\"];\r\n            })\r\n            return oldSave;\r\n        })\r\n    }\r\n\r\n    onLoad() {\r\n        const namesString = localStorage.getItem(META_ITEM);\r\n        if(namesString === null) {\r\n            alert(\"无存档\");\r\n            return;\r\n        }\r\n        let names = JSON.parse(namesString) as string[];\r\n        if(names.length === 0) {\r\n            alert(\"无存档\");\r\n            return;\r\n        }\r\n        this.setState({\r\n            loadShowing: true,\r\n            saves: names\r\n        });\r\n    }\r\n\r\n    onLoadCanceled() {\r\n        this.setState({loadShowing: false})\r\n    }\r\n\r\n    onDeleteSave(name: string) {\r\n        const nameString = localStorage.getItem(META_ITEM);\r\n        if(nameString === null) {\r\n            alert(\"读取错误！\");\r\n            this.setState({loadShowing: false});\r\n            return;\r\n        }\r\n        let names = JSON.parse(nameString) as string[];\r\n        const index = names.indexOf(name);\r\n        if(index === -1) {\r\n            alert(\"读取错误！\");\r\n            this.setState({loadShowing: false});\r\n            return;\r\n        }\r\n        names.splice(index, 1);\r\n\r\n        localStorage.setItem(META_ITEM, JSON.stringify(names));\r\n        localStorage.removeItem(name);\r\n\r\n        if(names.length === 0) {\r\n            this.setState({\r\n                loadShowing: false,\r\n                saves: names\r\n            });\r\n        }\r\n        else {\r\n            this.setState({\r\n                loadShowing: true,\r\n                saves: names\r\n            });\r\n        }\r\n    }\r\n\r\n    onLoadSelected(name: string) { \r\n        const dataString = localStorage.getItem(name);\r\n        if(dataString === null) {\r\n            alert(\"读取错误！\");\r\n            this.setState({loadShowing: false});\r\n            return;\r\n        }\r\n        const data = JSON.parse(dataString) as SaveData;\r\n        this.setState({\r\n            loadShowing: false,\r\n            side: data.side,\r\n            side2: data.side2,\r\n            actions: data.actions.map(v => ({id: this.maxActionId++, data: v}))\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return <React.Fragment>\r\n            <div className=\"container\">\r\n                <div className=\"tabs\">\r\n                    <ul>\r\n                        <li className={this.state.currentPage === \"sides\" ? \"is-active\" : \"\"}>\r\n                            <a onClick={(e) => {e.preventDefault(); this.setState({currentPage: \"sides\"});}}>角色</a>\r\n                        </li>\r\n                        <li className={this.state.currentPage === \"actions\" ? \"is-active\" : \"\"}>\r\n                            <a onClick={(e) => {e.preventDefault(); this.setState({currentPage: \"actions\"});}}>行为</a>\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n                {\r\n                    this.state.currentPage === \"sides\" ? \r\n                        <div className=\"sides-view\">\r\n                            <div className=\"columns edit-view-troop-headers\">\r\n                                <div className=\"column edit-view-troop-header red\"><p>红方</p></div>\r\n                                <div className=\"column edit-view-troop-header blue\"><p>蓝方</p></div>\r\n                            </div>\r\n                            \r\n                            <div className=\"columns side-info-views\">\r\n                                <SideInfoView side={this.state.side} onSideChanged={this.handleSideChanged} isLeft={true}/>\r\n                                \r\n                                <SideInfoView side={this.state.side2} onSideChanged={this.handleSide2Changed} isLeft={false}/>\r\n                            </div>\r\n                        </div> \r\n                    :\r\n                         null\r\n                }\r\n                \r\n\r\n                {\r\n                    this.state.currentPage === \"actions\" ? \r\n                        <div className=\"actions-view\">\r\n                            {\r\n                                this.state.actions.map((action) => {\r\n                                    return <ActionInfoView action={action.data} onActionChanged={this.onActionChanged.bind(this, action.id)} key={action.id} onActionDeleted={() => this.onRemoveAction(action.id)}/>\r\n                                })\r\n                            }\r\n                            <div className=\"field\">\r\n                                <button className=\"button\" onClick={this.onAddAction}>添加</button>\r\n                            </div>\r\n                            \r\n                        </div>\r\n                    :\r\n                        null\r\n                }\r\n                \r\n                <div className=\"footer-view field is-grouped\">\r\n                    <p className=\"control\">\r\n                        <Link className=\"button is-primary\" to=\"/battle\" onClick={this.onComplete}>完成</Link>\r\n                    </p>\r\n                    <p className=\"control\">\r\n                        <button className=\"button\" onClick={() => this.onSave()}>保存</button>\r\n                    </p>\r\n                    <p className=\"control\">\r\n                        <button className=\"button\" onClick={() => this.onLoad()}>读取</button>\r\n                    </p>\r\n                    \r\n                </div>\r\n            </div>\r\n            {\r\n                this.state.loadShowing ? \r\n                    <LoadView saves={this.state.saves} onClosed={() => this.onLoadCanceled()} onLoad={(name) => this.onLoadSelected(name)} onDelete={(name) => this.onDeleteSave(name)}/> : null\r\n            }\r\n        </React.Fragment>\r\n    }\r\n\r\n}","import { Battler, BattlerData, Position } from \"./Battler\";\r\nimport { Action } from \"./Action\";\r\n\r\nexport class Side{\r\n    \r\n    opponent: Side | null;\r\n    damageMultiplier: number;\r\n    thisActionDamageMultiplier: number;\r\n    damageMultiplierDelta: number;\r\n    battlers: Battler[];\r\n    hp: number;\r\n    sp: number;\r\n    \r\n    constructor(data: SideData) {\r\n        //this.battlers = data.battlers.map(v => new Battler(this, v));\r\n        this.battlers = Object.entries(data.battlerPositions).map(([pos, id], index) => \r\n            new Battler(this, data.battlers.find(b => b.id === id)!, parseInt(pos) as Position, index)\r\n        );\r\n        console.log(data.battlerPositions, data.battlers);\r\n        console.log(this.battlers);\r\n        this.damageMultiplier = 1.0;\r\n        this.thisActionDamageMultiplier = 1.0;\r\n        this.damageMultiplierDelta = 0.2;\r\n        this.opponent = null;\r\n        this.hp = data.hp;\r\n        this.sp = data.sp;\r\n    }\r\n\r\n    getBattler(position: [number, number]) : Battler | undefined {\r\n        const flatPosition = position[0] * 2 + position[1];\r\n        return this.battlers.find(b => b.position === flatPosition);\r\n    }\r\n    \r\n\r\n    setOpponent(side: Side) {\r\n        this.opponent = side;\r\n    }\r\n\r\n    applyHpDamage(hpDamage: number): HpDamageResult {\r\n        this.hp -= hpDamage;\r\n        if(this.hp < 0) {\r\n            this.hp = 0;\r\n        }\r\n        return {hpDamage: hpDamage, isDead: this.hp === 0};\r\n    }\r\n\r\n    applySpRecovery(spRecovery: number): SpRecoveryResult {\r\n        const oldSp = this.sp;\r\n        this.sp += spRecovery;\r\n        if(this.sp >= 10) {\r\n            this.sp = 10;\r\n        }\r\n        if(this.sp < 0) {\r\n            this.sp = 0;\r\n        }\r\n        return this.sp - oldSp;\r\n    }\r\n\r\n    onDamageWeakState(action: Action): DamageMultiplierResult {\r\n        let ret = {multiplierAdded: this.damageMultiplierDelta};\r\n        this.thisActionDamageMultiplier += this.damageMultiplierDelta;\r\n        this.damageMultiplierDelta += 0.2;\r\n        return ret;\r\n    }\r\n\r\n    onActionEnd() {\r\n        this.damageMultiplier = this.thisActionDamageMultiplier;\r\n    }\r\n\r\n    onTurnStart() {\r\n        this.damageMultiplier = 1.0;\r\n        this.thisActionDamageMultiplier = 1.0;\r\n        this.damageMultiplierDelta = 0.2;\r\n        this.battlers.forEach(b => b.onTurnStart());\r\n        if(this.sp <= 3) {\r\n            this.sp = 3;\r\n        }\r\n    }\r\n\r\n    getDisplayDamageMultiplier(): number{\r\n        return this.thisActionDamageMultiplier;\r\n    }\r\n\r\n\r\n}\r\n\r\nexport interface HpDamageResult{\r\n    hpDamage: number;\r\n    isDead: boolean;\r\n}\r\n\r\nexport type SpRecoveryResult = number;\r\n\r\nexport interface SideData{\r\n    battlerPositions: {[p in Position]? : number|undefined};\r\n    battlers: BattlerData[];\r\n    hp: number;\r\n    sp: number;\r\n}\r\n\r\nexport interface DamageMultiplierResult{\r\n    multiplierAdded: number;\r\n}\r\n","import { HpDamageResult, Battler, Position, AttributeDamageResult, DpRecoveryResult, DefenceIncreaseResult, FlatPosToXY } from \"./Battler\";\r\nimport { DamageMultiplierResult, Side, SpRecoveryResult  } from \"./Side\";\r\nimport { ActionData } from \"./ActionData\";\r\n\r\nexport class Action{\r\n    user: Battler;\r\n    targets: Battler[] | null;\r\n    data: ActionData;\r\n    id: number;\r\n    private attack: Attack | null;\r\n    private targetPoints: {self: Position[], opponent: Position[]};\r\n\r\n    constructor(ad: ActionData, user: Battler, targets: {self: Position[], opponent: Position[]}, id: number) {\r\n        this.data = ad;\r\n        this.targets = null;\r\n        this.attack = null;\r\n        this.user = user;\r\n        this.targetPoints = targets;\r\n        this.id = id;\r\n    }\r\n\r\n    canUse(){\r\n        return !this.user.isDead();\r\n    }\r\n\r\n    private fetchBattlers(side: Side, positions: Position[]) : Battler[]{\r\n        return positions.map(p => side.getBattler(FlatPosToXY(p))).filter(b => b !== undefined) as Battler[];\r\n    }\r\n\r\n    step() : boolean{\r\n        if(!this.canUse()){\r\n            return false;\r\n        }\r\n        if(this.targets === null) {\r\n            this.targets = [...this.fetchBattlers(this.user.side, this.targetPoints.self), ...this.fetchBattlers(this.user.side.opponent!, this.targetPoints.opponent)];\r\n        }\r\n        if(this.targets.length === 0) {\r\n            this.user.side.onActionEnd();\r\n            return false;\r\n        }\r\n        let t = this.targets.shift();\r\n        this.attack = new Attack(this.user, t!, this);\r\n        return true;\r\n    }\r\n\r\n    getCurrentAttack() : Attack | null{\r\n        return this.attack;\r\n    }\r\n}\r\n\r\nexport class Attack{\r\n    user: Battler;\r\n    target: Battler;\r\n    action: Action;\r\n    hpDamageResult: HpDamageResult;\r\n    spRecoveryResult: SpRecoveryResult;\r\n    dpRecoveryResult: DpRecoveryResult;\r\n    defenceIncreaseResult: DefenceIncreaseResult;\r\n    damageMultiplierResult: DamageMultiplierResult | null;\r\n    attributeDamageResult: AttributeDamageResult;\r\n\r\n    constructor(user: Battler, target: Battler, action: Action){\r\n        this.user = user;\r\n        this.target = target;\r\n        this.action = action;\r\n        let hpDamage = this.user.side.damageMultiplier * this.action.data.hpDamage;\r\n        this.hpDamageResult = this.target.applyHpDamage(hpDamage);\r\n        this.damageMultiplierResult = null;\r\n        this.spRecoveryResult = this.target.side.applySpRecovery(this.action.data.spRecovery);\r\n        this.dpRecoveryResult = this.target.applyDpRecovery(this.action.data.dpRecovery);\r\n        this.defenceIncreaseResult = this.target.applyDefenceIncrease(this.action.data.defenceIncrease);\r\n        //TODO: we can combine damageMultiplierResult and attributeDamageResult.\r\n        if(this.action.data.attribute === this.target.getCurrentAttribute() && this.target.isWeakState()) {\r\n            this.damageMultiplierResult = this.user.side.onDamageWeakState(this.action);\r\n        }\r\n        this.attributeDamageResult = this.target.applyAttributeDamage(this.action.data.attribute, this.action.data.attributeDamage);\r\n    }\r\n}","import { Side, SideData } from \"../models/Side\";\r\nimport { Action, Attack } from \"../models/Action\";\r\nimport { ActionData } from \"../models/ActionData\";\r\nimport { Battler, Position } from \"../models/Battler\";\r\nimport { Observable, BehaviorSubject } from \"rxjs\" \r\n\r\nexport type InputtingPhase = \"decideBattler\" | \"decideAction\" | \"decideTarget\" | undefined;\r\nexport type Phase = \"inputting\"|\"processing\" | undefined;\r\n\r\nconst UPDATE_INTERVAL = 200;\r\n\r\nexport class BattleVM {\r\n    private _sideA: Side;\r\n    private _sideB: Side;\r\n    private _actions: BehaviorSubject<Action[]>;\r\n    private _phase: BehaviorSubject<Phase>;\r\n    private _inputtingPhase: BehaviorSubject<InputtingPhase>;\r\n    private _actionResults : BehaviorSubject<Attack[]>;\r\n    private currentProcessingAction: Action | undefined;\r\n    private _inputtingAction: ActionData | undefined;\r\n    private _currentInputtingBattler: Battler | undefined;\r\n    private _nextActionId: number;\r\n\r\n    constructor(sideA: SideData, sideB: SideData) {\r\n        this._sideA = new Side(sideA);\r\n        this._sideB = new Side(sideB);\r\n        this._sideA.setOpponent(this._sideB);\r\n        this._sideB.setOpponent(this._sideA);\r\n        this._actions = new BehaviorSubject([] as Action[]);\r\n        this._phase = new BehaviorSubject(undefined as Phase);\r\n        this._inputtingPhase = new BehaviorSubject(undefined as InputtingPhase);\r\n        this._actionResults = new BehaviorSubject([] as Attack[]);\r\n        this._actions.next([]);\r\n        this._actionResults.next([]);\r\n        this.currentProcessingAction = undefined;\r\n        this.startTurn();\r\n        this._nextActionId = 0;\r\n    }\r\n\r\n    get phase() : Observable<Phase>{\r\n        return this._phase;\r\n    }\r\n\r\n    get sideA() {\r\n        return this._sideA;\r\n    }\r\n\r\n    get sideB() {\r\n        return this._sideB;\r\n    }\r\n\r\n    get actions() : Observable<Action[]>{\r\n        return this._actions;\r\n    }\r\n\r\n    get inputtingPhase() : Observable<InputtingPhase> {\r\n        return this._inputtingPhase;\r\n    }\r\n\r\n    get actionResults() : Observable<Attack[]> {\r\n        return this._actionResults;\r\n    }\r\n\r\n    get inputtingAction() : ActionData | undefined{\r\n        return this._inputtingAction;\r\n    }\r\n\r\n    get targets() : Battler[] | undefined{\r\n        if(this._currentInputtingBattler === undefined) {\r\n            return undefined;\r\n        }\r\n        else{\r\n            return this._currentInputtingBattler!.side.opponent!.battlers; \r\n        }\r\n    }\r\n    \r\n\r\n    addAction(action: ActionData) : boolean{\r\n        this.checkInputting(\"decideAction\");\r\n        if(action.spCost > this._currentInputtingBattler!.side.sp) {\r\n            return false;\r\n        }\r\n        this._inputtingAction = action;\r\n        this._inputtingPhase.next(\"decideTarget\");\r\n        return true;\r\n    }\r\n\r\n    setTargets(targets: {left: Position[], right: Position[]}) {\r\n        if(this._inputtingAction!.spCost <= this._currentInputtingBattler!.side.sp) {\r\n            this._currentInputtingBattler!.side.sp -= this._inputtingAction!.spCost;\r\n            \r\n            \r\n            let actionTargets;\r\n            if(this._currentInputtingBattler!.side === this.sideA) {\r\n                actionTargets = {self: targets.left, opponent: targets.right};\r\n            }\r\n            else {\r\n                actionTargets = {self: targets.right, opponent: targets.left};\r\n            }\r\n            this._actions.value.push(new Action(this._inputtingAction!, this._currentInputtingBattler!, actionTargets, this._nextActionId));\r\n            ++this._nextActionId;\r\n        }\r\n        this._inputtingPhase.next(\"decideBattler\");\r\n    }\r\n\r\n    selectBattler(battler: Battler) {\r\n        this.checkInputting(\"decideBattler\");\r\n        this._currentInputtingBattler = battler;\r\n        this._inputtingPhase.next(\"decideAction\");\r\n    }\r\n\r\n    checkInputting(inputtingPhase: InputtingPhase) {\r\n        if(this._phase.value !== \"inputting\") {\r\n            throw new Error(\"phase must be inputting\");\r\n        }\r\n        if(this._inputtingPhase.value !== inputtingPhase) {\r\n            throw new Error(\"inputting phase must be \" + inputtingPhase);\r\n        }\r\n    }\r\n\r\n    endInputting() {\r\n        this._phase.next(\"processing\");\r\n        this._inputtingPhase.next(undefined);\r\n        this._actionResults.value.length = 0;\r\n        this._actionResults.next(this._actionResults.value);\r\n        this.updateLoop();\r\n    }\r\n\r\n    updateLoop() {\r\n        this.update();\r\n        if(this._phase.value === \"processing\") {\r\n            setTimeout( ()=> this.updateLoop(), UPDATE_INTERVAL);\r\n        }\r\n    }\r\n\r\n    update() {\r\n        if(this._phase.value === \"inputting\") {\r\n            throw new Error(\"You shouldn't call update in inputting state.\");\r\n        }\r\n        while(true) {\r\n            if(this.currentProcessingAction !== undefined) {\r\n                if(this.currentProcessingAction.step()){\r\n                    this._actionResults.value.push(this.currentProcessingAction.getCurrentAttack()!);\r\n                    this._actionResults.next(this._actionResults.value);\r\n                    return;\r\n                }\r\n            }\r\n            this.currentProcessingAction = this._actions.value.shift();\r\n            this._actions.next(this._actions.value);\r\n            if(this.currentProcessingAction === undefined) {\r\n                this.startTurn();\r\n                break;\r\n            }\r\n        }\r\n        \r\n    }\r\n\r\n    cancelTargetSelection(): void {\r\n        this.checkInputting(\"decideTarget\");\r\n        this._inputtingAction = undefined;\r\n        this._inputtingPhase.next(\"decideAction\");\r\n    }\r\n\r\n    cancelActionSelection() : void {\r\n        this.checkInputting(\"decideAction\");\r\n        this._currentInputtingBattler = undefined;\r\n        this._inputtingPhase.next(\"decideBattler\");\r\n    }\r\n\r\n    private startTurn() {\r\n        this._sideA.onTurnStart();\r\n        this._sideB.onTurnStart();\r\n        this._phase.next(\"inputting\");\r\n        this._inputtingPhase.next(\"decideBattler\");\r\n    }\r\n\r\n    onActionDeleted(id: number): void {\r\n        this.checkInputting(\"decideBattler\");\r\n        const index = this._actions.value.findIndex((a) => a.id === id);\r\n        const [action] = this._actions.value.splice(index, 1);\r\n        action.user.side.sp += action.data.spCost;\r\n        this._actions.next(this._actions.value);\r\n    }\r\n    \r\n}","import React from \"react\";\r\nimport { Battler, Position } from \"../models/Battler\";\r\nimport {ATTRIBUTE_NAME, ICON_NAME} from \"./AttributeName\";\r\n\r\ninterface Props{\r\n    battlers: Battler[];\r\n    isLeft: boolean;\r\n    onBattlerClick: (b: Battler) => void\r\n}\r\n\r\nfunction BattlerBriefView(props: {pos: Position, battler: Battler | undefined, enter: (pos: Position) => void, exit: (pos: Position) => void, onClick: (b: Battler) => void}){\r\n    if(props.battler === undefined) {\r\n        return <td onMouseEnter={() => props.enter(props.pos)} onMouseLeave={() => props.exit(props.pos)}></td>\r\n    }\r\n    let attrIcon = null;\r\n    \r\n    const attr = props.battler.getCurrentAttribute();\r\n    if(attr !== null) {\r\n        attrIcon = <span className=\"icon\"><i className={\"fas \" + ICON_NAME[attr]}></i></span>\r\n    }\r\n\r\n    return <td onMouseEnter={() => props.enter(props.pos)} onMouseLeave={() => props.exit(props.pos)} onClick={()=>props.onClick(props.battler!)}>\r\n        <p className=\"battle-brief-view-name\">{props.battler.name}</p>\r\n        <p className=\"battle-brief-view-dp\">{props.battler.dp}</p>\r\n        <p className=\"battle-brief-view-icons\">\r\n            {\r\n                props.battler.isDead() ? <span className=\"icon\"><i className=\"fas fa-skull\"></i></span> : null\r\n            }\r\n            {\r\n                props.battler.isWeakState() ? <span className=\"icon\"><i className=\"fas fa-heart-broken\"></i></span> : null\r\n            }\r\n            {\r\n                attrIcon\r\n            }\r\n            \r\n        </p>\r\n        \r\n    </td>\r\n}\r\n\r\nfunction BattlerDetailView(props: {battler: Battler|undefined}){\r\n    if(props.battler === undefined) {\r\n        return <div className=\"detail-view\"></div>\r\n    }\r\n    let attribute = props.battler.getCurrentAttribute();\r\n    console.log(\"BattlerDetailView\", props.battler);\r\n    return <div className=\"detail-view\">\r\n        <p>{props.battler.name}\r\n            {\r\n                props.battler.isDead() ? <span className=\"icon\"><i className=\"fas fa-skull\"></i></span> : null\r\n            }\r\n            {\r\n                props.battler.isWeakState() ? <span className=\"icon\"><i className=\"fas fa-heart-broken\"></i></span> : null\r\n            }\r\n        </p>\r\n        \r\n        <p><b>DP:</b> {props.battler.dp}</p>\r\n        <p><b>抗:</b>{props.battler.defence}</p>\r\n        {\r\n            attribute === null ? null : \r\n            <p><b>{ATTRIBUTE_NAME[attribute]}</b> {props.battler.getAttributePoint()}</p>\r\n        }\r\n    </div>\r\n}\r\n\r\nexport class BattleFieldView extends React.Component<Props, {pos: Position | undefined}>{\r\n    constructor(props: Props) {\r\n        super(props);\r\n        this.state = {\r\n            pos: undefined\r\n        }\r\n    }\r\n\r\n    onEnterBattler(pos: Position) {\r\n        this.setState({pos});\r\n    }\r\n\r\n    onExitBattler(pos: Position) {\r\n        this.setState((prevState) => prevState.pos === pos ? {pos: undefined} : {pos: prevState.pos});\r\n    }\r\n\r\n    render() {\r\n        const battlers: {[key in Position]? : Battler} = this.props.battlers.reduce((state: {[p in Position]? : Battler}, b) => {state[b.position] = b; return state;}, {});\r\n        const col = this.props.isLeft ? [0, 1] : [1, 0];\r\n        let currentBattler = this.state.pos === undefined ? undefined : battlers[this.state.pos];\r\n        return <React.Fragment>\r\n            <table className=\"battle-field-view\">\r\n                <tbody>\r\n                    {\r\n                        [0,1,2].map(x => <tr key={x}>\r\n                            {\r\n                                (x === 0 && !this.props.isLeft) ? <td rowSpan={3} className=\"frontline\"><span>前线</span></td> : null\r\n                            }\r\n                            {\r\n                                col.map(y => <BattlerBriefView pos={(x * 2 + y) as Position} key={y} battler={battlers[(x * 2 + y) as Position]} enter={(b) => this.onEnterBattler(b)} exit={(b) => this.onExitBattler(b)} onClick={this.props.onBattlerClick}/>)\r\n                            }\r\n                            {\r\n                                (x === 0 && this.props.isLeft) ? <td rowSpan={3} className=\"frontline\"><span>前线</span></td> : null\r\n                            }\r\n                        </tr>)\r\n                    }\r\n                </tbody>\r\n            </table>\r\n            <BattlerDetailView battler={currentBattler} />\r\n        </React.Fragment>\r\n    }\r\n}","import { Side } from \"../models/Side\";\r\nimport React from \"react\";\r\nimport { Battler } from \"../models/Battler\";\r\nimport { BattleFieldView } from \"./BattleFieldView\";\r\n\r\ninterface Props{\r\n    side: Side;\r\n    onBattlerClick: (b: Battler) => void;\r\n    isRed: boolean;\r\n}\r\n\r\n\r\nexport function SideView(props: Props) {\r\n    return <div className={\"side-view column is-6\" + (props.isRed ? \" red\" : \" blue\") }>\r\n        <div>\r\n            <p><b>HP:</b> {props.side.hp}</p>\r\n            <p><b>AP:</b> {props.side.sp}</p>\r\n            <BattleFieldView isLeft={props.isRed} battlers={props.side.battlers} onBattlerClick={props.onBattlerClick}/>\r\n        </div>\r\n    </div>\r\n}\r\n\r\n","import { Battler, Position, XYPosToFlat } from \"../models/Battler\";\r\nimport React from \"react\";\r\n\r\ninterface Props{\r\n    battlersLeft: Battler[];\r\n    battlersRight: Battler[];\r\n    onTargetSelected: (selected: {left: Position[], right: Position[]}) => void;\r\n    onClose: () => void;\r\n}\r\n\r\nfunction BattlerCell(props: {onClick: () => void, pos: Position, highlighted: boolean, name: string}) {\r\n    return <td className={props.highlighted ? \"highlighted\" : \"\"} onClick={() => props.onClick()}>{props.name}</td>\r\n}\r\n\r\nexport class TargetView extends React.Component<Props, {selectedPosition: {left: {[p in Position] : boolean}, right: {[p in Position]: boolean}}}> {\r\n    constructor(props: Props) {\r\n        super(props);\r\n        this.state = {selectedPosition: {left: {0: false, 1: false, 2: false, 3: false, 4: false, 5: false}, right: {0: false, 1: false, 2: false, 3: false, 4: false, 5: false}}};\r\n        this.onTargetSelected = this.onTargetSelected.bind(this);\r\n    }\r\n\r\n    onTargetSelected(pos: Position, isLeft: boolean) {\r\n        this.setState(prevState => {\r\n            {\r\n                const oldPos = {left: {...prevState.selectedPosition.left}, right: {...prevState.selectedPosition.right}};\r\n                if(isLeft) {\r\n                    oldPos.left[pos] = !oldPos.left[pos];\r\n                }\r\n                else{\r\n                    oldPos.right[pos] = !oldPos.right[pos];\r\n                }\r\n                return {selectedPosition: oldPos}\r\n            }\r\n        });\r\n    }\r\n\r\n    onConfirm() {\r\n        const convert = (v: {[p in Position]: boolean}) => Object.entries(v).filter(([x,y]) => y).map(([key, _]) => Number.parseInt(key));\r\n        const left = convert(this.state.selectedPosition.left) as Position[];\r\n        const right = convert(this.state.selectedPosition.right) as Position[];\r\n        this.props.onTargetSelected({left, right});\r\n    }\r\n\r\n    render() {\r\n        let leftBattlersMap: (Battler|null)[] = Array(6).fill(null);\r\n        let rightBattlersMap: (Battler|null)[] = Array(6).fill(null);\r\n        this.props.battlersLeft.forEach(b => leftBattlersMap[b.position] = b);\r\n        this.props.battlersRight.forEach(b => rightBattlersMap[b.position] = b);\r\n        return <div className=\"modal target-view is-active\">\r\n                <div className=\"modal-background\"></div>\r\n                <div className=\"modal-card\">\r\n                    <header className=\"modal-card-head\">\r\n                        <p className=\"modal-card-title\">选择目标</p>\r\n                        <button className=\"delete\" aria-label=\"close\" onClick={()=>this.props.onClose()}></button>\r\n                    </header>\r\n                    <section className=\"modal-card-body\">\r\n                        <table className=\"target-view-table\">\r\n                            <tbody>\r\n                                {\r\n                                    [0,1,2].map(x => \r\n                                        <tr key={x}>\r\n                                            {\r\n                                                [0,1].map(y => {\r\n                                                    let pos = XYPosToFlat(x as 0|1|2, y as 0|1);\r\n                                                    let battler = leftBattlersMap[pos];\r\n                                                    let name = battler === null ? \"\" : battler.name;\r\n                                                    let isHighlighted = this.state.selectedPosition.left[pos];\r\n                                                    return <BattlerCell key={y} onClick={()=>this.onTargetSelected(pos, true)} pos={pos} name={name} highlighted={isHighlighted}/>\r\n                                                })\r\n                                            }\r\n                                            {\r\n                                                x === 0 ? <td rowSpan={3} className=\"target-view-frontline\">前线</td> : null\r\n                                            }\r\n                                            {\r\n                                                [1,0].map(y => {\r\n                                                    let pos = XYPosToFlat(x as 0|1|2, y as 0|1);\r\n                                                    let battler = rightBattlersMap[pos];\r\n                                                    let name = battler === null ? \"\" : battler.name;\r\n                                                    let isHighlighted = this.state.selectedPosition.right[pos];\r\n                                                    return <BattlerCell key={y} onClick={()=>this.onTargetSelected(pos, false)} pos={pos} name={name} highlighted={isHighlighted}/>\r\n                                                })\r\n                                            }\r\n                                        </tr>\r\n                                    )\r\n                                }\r\n                            </tbody>\r\n                        </table>\r\n                    </section>\r\n                    <footer className=\"modal-card-foot\">\r\n                        <button className=\"button is-success\" onClick={() => this.onConfirm()}>确认</button>\r\n                        <button className=\"button\" onClick={() => this.props.onClose()}>取消</button>\r\n                    </footer>\r\n                </div>\r\n            </div>\r\n    }\r\n}","import { Attack } from \"../models/Action\";\r\nimport { ATTRIBUTE_NAME } from \"./AttributeName\";\r\nimport React from \"react\";\r\n\r\ninterface Props{\r\n    result: Attack;\r\n}\r\nexport function ResultView(props: Props) {\r\n    let attribute = null;\r\n    if(props.result.attributeDamageResult.attribute !== null) {\r\n        attribute = <React.Fragment>\r\n                <p>附加了 {props.result.attributeDamageResult.attributePointAttached} 点 {ATTRIBUTE_NAME[props.result.attributeDamageResult.attribute]} </p>\r\n                <p>{props.result.attributeDamageResult.knockedIntoWeak ? \"打入了弱点状态\" : \"\"} \r\n                 {props.result.attributeDamageResult.dpDamage > 0 ? `造成了${props.result.attributeDamageResult.dpDamage}点DP伤害` : \"\" } </p>\r\n            </React.Fragment>;\r\n    }\r\n    let damageMultipiler = null;\r\n    if(props.result.damageMultiplierResult !== null) {\r\n        damageMultipiler = <p>\r\n            伤害提升率上涨了: {props.result.damageMultiplierResult.multiplierAdded}\r\n        </p>\r\n    }\r\n    let dpRcovery = null;\r\n    if(props.result.dpRecoveryResult !== 0) {\r\n        dpRcovery = <p>DP回复了：{props.result.dpRecoveryResult} </p>\r\n    }\r\n    let spRecovery = null;\r\n    if(props.result.spRecoveryResult !== 0) {\r\n        spRecovery = <p>SP回复了：{props.result.spRecoveryResult} </p>\r\n    }\r\n    let defenceIncreasement = null;\r\n    if(props.result.defenceIncreaseResult !== 0) {\r\n        defenceIncreasement = <p>防御上涨了：{props.result.defenceIncreaseResult}</p>\r\n    }\r\n    return <div className=\"result-view\">\r\n        <p>{props.result.action.user.name} 对 {props.result.target.name} 使用了 {props.result.action.data.name}</p>\r\n        <p>消耗了{props.result.hpDamageResult.defended}点防御</p>\r\n        <p>造成了 {props.result.hpDamageResult.hpDamage} 点伤害 {props.result.hpDamageResult.isDead ? \"对面已死亡\" : \"\"}</p>\r\n        {attribute}\r\n        {damageMultipiler}\r\n        {dpRcovery}\r\n        {spRecovery}\r\n        {defenceIncreasement}\r\n    </div>\r\n}","import { ActionData } from \"../models/ActionData\";\r\nimport React from \"react\";\r\n\r\n\r\ninterface Props{\r\n    action: ActionData;\r\n    onClicked: (action: ActionData) => void;\r\n}\r\n\r\nexport function ActionView(props: Props) {\r\n    return <p className=\"action\" onClick={() => props.onClicked(props.action)}>\r\n        <span className=\"name\">{props.action.name}</span> \r\n        &nbsp;\r\n        <span className=\"sp-cost\"><b>SP消耗:</b>{props.action.spCost}</span>\r\n    </p>\r\n\r\n}","import { ActionData } from \"../models/ActionData\";\r\nimport { ActionView } from \"./ActionView\";\r\nimport React from \"react\";\r\n\r\ninterface Props {\r\n    onActionSelectionClosed: () => void;\r\n    actionDatas: ActionData[];\r\n    onActionClicked: (action: ActionData) => void;\r\n}\r\nexport function ActionSelectionView(props: Props) {\r\n    return <div className=\"actions-selection modal is-active\">  \r\n        <div className=\"modal-background\"></div>\r\n        <div className=\"modal-card\">\r\n            <header className=\"modal-card-head\">\r\n                <p className=\"modal-card-title\">选择行动</p>\r\n                <button className=\"delete\" aria-label=\"close\" onClick={() => props.onActionSelectionClosed()}></button>\r\n            </header>\r\n            <section className=\"modal-card-body\">\r\n                {\r\n                    props.actionDatas.map((action, id) => \r\n                    <ActionView action={action} key={id} onClicked={() => props.onActionClicked(action)}/>)\r\n                }\r\n            </section>\r\n        </div>\r\n    </div>\r\n}","import { Action } from \"../models/Action\";\r\nimport React from \"react\";\r\n\r\ninterface Props{\r\n    actions: Action[];\r\n    onActionDeleted: (id: number) => void;\r\n}\r\nexport function ActionRecordsView(props: Props) {\r\n    return <div className=\"action-records\">\r\n        {\r\n            props.actions.map(action => <p key={action.id} className=\"action-record\">\r\n                <span>{action.user.name}</span>\r\n                <span className=\"action-record-action-use\">使用了</span>\r\n                <span className=\"action-record-action-name\">{action.data.name}</span> \r\n                <button className=\"delete action-record-delete\" onClick={e=>{e.preventDefault(); props.onActionDeleted(action.id)} }>X</button>\r\n            </p>)\r\n        }\r\n    </div>\r\n}","import React from \"react\";\r\nimport { SideData } from \"../models/Side\";\r\nimport { ActionData } from \"../models/ActionData\";\r\nimport { Phase, BattleVM, InputtingPhase } from \"../viewmodels/BattleVM\";\r\nimport { Action, Attack } from \"../models/Action\";\r\nimport { Subscription } from \"rxjs\";\r\nimport { SideView } from \"./SideView\";\r\nimport { TargetView } from \"./TargetView\";\r\nimport { Battler, Position } from \"../models/Battler\";\r\nimport { ResultView } from \"./ResultView\";\r\nimport { ActionSelectionView } from \"./ActionSelectionView\";\r\nimport { ActionRecordsView } from \"./ActionRecordsView\";\r\nimport { Redirect } from \"react-router\";\r\n\r\ninterface Props{\r\n    sideA: SideData | undefined;\r\n    sideB: SideData | undefined;\r\n    actionDatas: ActionData[] | undefined;\r\n}\r\ninterface State {\r\n    phase: Phase;\r\n    inputtingPhase: InputtingPhase;\r\n    actionResults: Attack[];\r\n    actions: Action[];\r\n}\r\n\r\nexport class BattleView extends React.Component<Props, State>{\r\n\r\n    private subscription : Subscription | undefined;\r\n    private battleVM : BattleVM | undefined;\r\n    private previousProps : Props | undefined;\r\n\r\n    constructor(props: Props) {\r\n        super(props);\r\n        this.state = {\r\n            phase: undefined,\r\n            inputtingPhase: undefined,\r\n            actionResults: [],\r\n            actions: []\r\n        }\r\n        this.onActionClicked = this.onActionClicked.bind(this);\r\n        this.onTargetSelected = this.onTargetSelected.bind(this);\r\n        this.onBattlerSelected = this.onBattlerSelected.bind(this);\r\n        this.onTargetSelectionClosed = this.onTargetSelectionClosed.bind(this);\r\n        this.onActionSelectionClosed = this.onActionSelectionClosed.bind(this);\r\n        this.onActionDeleted = this.onActionDeleted.bind(this);\r\n    }\r\n\r\n    createVM() {\r\n        this.subscription!.unsubscribe();\r\n        this.subscription = new Subscription();\r\n        this.battleVM = undefined;\r\n        if(this.props.sideA !== undefined && this.props.sideB !== undefined) {\r\n            this.battleVM = new BattleVM(this.props.sideA, this.props.sideB);\r\n            this.battleVM!.phase.subscribe(p => this.setState({phase: p}));\r\n            this.battleVM!.inputtingPhase.subscribe(p => this.setState({inputtingPhase: p}));\r\n            this.battleVM!.actionResults.subscribe(r => this.setState({actionResults: r}));\r\n            this.battleVM!.actions.subscribe(a => this.setState({actions: a}));\r\n        }\r\n    }\r\n\r\n    recreateBattleVM() {\r\n        if(this.previousProps !== this.props){\r\n\r\n            this.previousProps = this.props;\r\n\r\n            if(this.subscription !== undefined) {\r\n                this.subscription!.unsubscribe();\r\n                this.subscription = undefined;\r\n            }\r\n            \r\n            this.battleVM = undefined;\r\n            if(this.props.sideA !== undefined && this.props.sideB !== undefined) {\r\n                this.battleVM = new BattleVM(this.props.sideA, this.props.sideB);\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    registerSubscriptions() {\r\n        if(this.subscription === undefined && this.battleVM !== undefined) {\r\n            let d = [];\r\n            d[0] = this.battleVM!.phase.subscribe(p => this.setState({phase: p}));\r\n            d[1] = this.battleVM!.inputtingPhase.subscribe(p => this.setState({inputtingPhase: p}));\r\n            d[2] = this.battleVM!.actionResults.subscribe(r => this.setState({actionResults: r}));\r\n            d[3] = this.battleVM!.actions.subscribe(a => this.setState({actions: a}));\r\n            this.subscription = new Subscription();\r\n            d.forEach(d => this.subscription!.add(d));\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.registerSubscriptions();\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        this.registerSubscriptions();\r\n    }\r\n\r\n    onActionClicked(action: ActionData) {\r\n        this.battleVM!.addAction(action);\r\n    }\r\n\r\n    onTargetSelected(targets: {left: Position[], right: Position[]}) {\r\n        this.battleVM!.setTargets(targets);\r\n    }\r\n\r\n    onBattlerSelected(battler: Battler) {\r\n        this.battleVM!.selectBattler(battler);\r\n    }\r\n\r\n    onEndTurn() {\r\n        this.battleVM!.endInputting();\r\n    }\r\n\r\n    onTargetSelectionClosed() {\r\n        this.battleVM!.cancelTargetSelection();\r\n    }\r\n\r\n    onActionSelectionClosed() {\r\n        this.battleVM!.cancelActionSelection();\r\n    }\r\n\r\n    onActionDeleted(id: number) {\r\n        this.battleVM!.onActionDeleted(id);\r\n    }\r\n\r\n    render() {\r\n        this.recreateBattleVM();\r\n        if(this.battleVM === undefined) {\r\n            return <Redirect to=\"/\"/>\r\n        }\r\n        let actions = null;\r\n        console.log(this.state.inputtingPhase);\r\n        if(this.props.actionDatas !== undefined && this.state.inputtingPhase === \"decideAction\") {\r\n            actions = <ActionSelectionView onActionClicked={this.onActionClicked} actionDatas={this.props.actionDatas} onActionSelectionClosed={this.onActionSelectionClosed}\r\n            />\r\n        }\r\n        let target = null;\r\n        if(this.state.inputtingPhase === \"decideTarget\") {\r\n            target = <TargetView battlersLeft={this.battleVM.sideA.battlers} battlersRight={this.battleVM.sideB.battlers} onTargetSelected={this.onTargetSelected} onClose={this.onTargetSelectionClosed}/>\r\n        }\r\n        return <div className=\"container battle-view\">\r\n            <div className=\"columns\">\r\n                <SideView isRed={true} side={this.battleVM!.sideA} onBattlerClick={this.onBattlerSelected}/>\r\n                <SideView isRed={false} side={this.battleVM!.sideB} onBattlerClick={this.onBattlerSelected}/>\r\n            </div>\r\n            <ActionRecordsView actions={this.state.actions} onActionDeleted={this.onActionDeleted} />\r\n            <div className=\"control\">\r\n                {\r\n                    this.state.phase === \"inputting\" ? <button className=\"button\" onClick={() => this.onEndTurn()}>结束回合</button> : null\r\n                }\r\n            </div>\r\n            \r\n            <div className={`modal-container ${actions !== null || target !== null ? \"show\" : \"\"}`}>\r\n                {\r\n                    actions !== null ? actions : <React.Fragment />\r\n                }\r\n                {\r\n                    target !== null ? target : <React.Fragment />\r\n                }\r\n\r\n            </div>\r\n            {\r\n                this.state.actionResults.map((result, key) => <ResultView key={key} result={result}/>)\r\n            }\r\n        </div>\r\n    }\r\n}","import React from \"react\";\r\nimport { EditView } from \"./EditView\";\r\nimport { SideData } from \"../models/Side\";\r\nimport { ActionData } from \"../models/ActionData\";\r\nimport { BattleView } from \"./BattleView\";\r\nimport { Route } from \"react-router-dom\";\r\n\r\nexport class AppView extends React.Component<{}, {sideA: SideData | undefined, sideB: SideData | undefined, actions: ActionData[]}>{\r\n\r\n    constructor(props: {}) {\r\n        super(props);\r\n        this.state = {sideA: undefined, sideB: undefined, actions: []};\r\n        this.onComplete = this.onComplete.bind(this);\r\n    }\r\n\r\n    onComplete(sideA:SideData, sideB: SideData, actions: ActionData[]) {\r\n        this.setState({sideA: sideA, sideB: sideB, actions: actions});\r\n    }\r\n\r\n    render() {\r\n        return<div>\r\n            <Route render={props => <EditView onComplete={this.onComplete} {...props} />} path=\"/\" exact />\r\n            <Route render={props => <BattleView {...props} sideA={this.state.sideA} sideB={this.state.sideB} actionDatas={this.state.actions} />} path=\"/battle\"  />\r\n        </div>\r\n    }\r\n}","import React from 'react';\nimport './App.css';\nimport { AppView } from './views/AppView';\n\nconst App: React.FC = () => {\n    \n    return <AppView  />\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {HashRouter as Router } from \"react-router-dom\";\nimport \"bulma\";\nimport \"@fortawesome/fontawesome-free/css/all.css\";\n\nReactDOM.render(<Router><App /></Router>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}