{"version":3,"sources":["models/Attribute.ts","views/Field.tsx","views/PositionSelectionView.tsx","views/AttributeName.ts","views/BattlerInfoView.tsx","views/SideInfoView.tsx","views/ActionInfoView.tsx","views/LoadView.tsx","views/EditView.tsx","models/Battler.ts","models/Side.ts","models/Action.ts","viewmodels/BattleVM.ts","views/BattleFieldView.tsx","views/SideView.tsx","views/TargetView.tsx","views/ResultView.tsx","views/ActionView.tsx","views/ActionSelectionView.tsx","views/ActionRecordsView.tsx","views/BattleView.tsx","views/AppView.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["Attribute","Field","props","label","inputProps","Object","objectWithoutProperties","react_default","a","createElement","className","assign","PositionSelectionView","col","isLeft","map","x","key","rowSpan","y","currentPosition","onClick","onPositionChange","ATTRIBUTE_NAME","_ATTRIBUTE_NAME","defineProperty","Earth","Electric","Fire","Water","Wind","ICON_NAME","_ICON_NAME","BattlerInfoView","_React$Component","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleDpChange","bind","assertThisInitialized","handlePositionChange","handleNameChange","inherits","createClass","value","e","battler","copyBattler","dp","Number","parseInt","target","onBattlerChanged","pos","objectSpread","position","name","attribute","attributeResistances","id","_this2","type","onChange","handleAttributeChange","placeholder","onBattlerDeleted","React","Component","SideInfoView","side","maxBattlerId","handleHpChange","handleSpChange","addBattler","hp","sp","battlers","copySide","onSideChanged","_res","b","push","filter","BattlerInfoView_BattlerInfoView","handleBattlerChanged","deleteBattler","ActionInfoView","onAttributeChanged","onAttributeDamageChanged","onHpDamageChanged","onSpCostChanged","onNameChanged","onDpRecoveryChanged","onSpRecoveryChanged","onDefenceIncreaseChanged","action","onActionChanged","hpDamage","spCost","attributeDamage","dpRecovery","spRecovery","defenceIncrease","onActionDeleted","LoadView","aria-label","onClosed","saves","onLoad","onDelete","stopPropagation","META_ITEM","EditView","maxActionId","state","side2","actions","loadShowing","currentPage","handleSideChanged","handleSide2Changed","onAddAction","onComplete","migrateSaveV2_TO_V3","setState","arr","toConsumableArray","index","findIndex","v","data","splice","savename","window","prompt","Date","toLocaleString","trim","names","stateString","JSON","stringify","namesString","localStorage","getItem","parse","confirm","setItem","alert","V2nameString","V2saves","newSave","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","save","saveString","saveData","err","return","removeItem","V3NameString","v3names","_i","_newSave","length","indexOf","nameString","_this3","dataString","_this4","Fragment","preventDefault","SideInfoView_SideInfoView","ActionInfoView_ActionInfoView","onRemoveAction","react_router_dom","to","onSave","onLoadCanceled","onLoadSelected","onDeleteSave","Battler","maxDp","currentAttribute","weakState","thisTurnDpDamaged","defence","point","result","dpDamage","attributePointAttached","knockedIntoWeak","resist","oldDp","console","log","defended","applyHpDamage","XYPosToFlat","Side","opponent","damageMultiplier","thisActionDamageMultiplier","damageMultiplierDelta","flatPosition","find","isDead","oldSp","ret","multiplierAdded","forEach","onTurnStart","Action","ad","user","targets","attack","targetPoints","positions","p","getBattler","Math","floor","canUse","concat","fetchBattlers","self","onActionEnd","t","shift","Attack","hpDamageResult","spRecoveryResult","dpRecoveryResult","defenceIncreaseResult","damageMultiplierResult","attributeDamageResult","applySpRecovery","applyDpRecovery","applyDefenceIncrease","getCurrentAttribute","isWeakState","onDamageWeakState","applyAttributeDamage","BattleVM","sideA","sideB","_sideA","_sideB","_actions","_phase","_inputtingPhase","_actionResults","currentProcessingAction","_inputtingAction","_currentInputtingBattler","_nextActionId","setOpponent","BehaviorSubject","startTurn","checkInputting","actionTargets","left","right","inputtingPhase","Error","updateLoop","update","setTimeout","step","getCurrentAttack","_this$_actions$value$","slicedToArray","get","BattlerBriefView","onMouseEnter","enter","onMouseLeave","exit","attrIcon","attr","BattlerDetailView","getAttributePoint","BattleFieldView","prevState","reduce","currentBattler","onEnterBattler","onExitBattler","onBattlerClick","SideView","isRed","BattleFieldView_BattleFieldView","BattlerCell","highlighted","TargetView","selectedPosition","0","1","2","3","4","5","onTargetSelected","oldPos","convert","entries","_ref","_ref2","_ref3","_ref4","leftBattlersMap","Array","fill","rightBattlersMap","battlersLeft","battlersRight","onClose","isHighlighted","onConfirm","ResultView","damageMultipiler","dpRcovery","defenceIncreasement","ActionView","onClicked","ActionSelectionView","onActionSelectionClosed","actionDatas","onActionClicked","ActionRecordsView","BattleView","subscription","battleVM","previousProps","phase","actionResults","onBattlerSelected","onTargetSelectionClosed","unsubscribe","Subscription","subscribe","r","d","add","registerSubscriptions","addAction","setTargets","selectBattler","endInputting","cancelTargetSelection","cancelActionSelection","recreateBattleVM","react_router","TargetView_TargetView","onEndTurn","AppView","render","EditView_EditView","path","exact","BattleView_BattleView","App","AppView_AppView","Boolean","location","hostname","match","ReactDOM","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.9a948e96.chunk.js","sourcesContent":["export enum Attribute{\r\n    Fire, Water, Earth, Wind, Electric\r\n}","import React from \"react\";\r\ninterface Props{\r\n    label: string;\r\n    [x:string] :any;\r\n}\r\nexport function Field(props: Props) {\r\n    let {label, ...inputProps} = props;\r\n    return <div className=\"field is-horizontal\">\r\n        <div className=\"field-label\">\r\n            <label className=\"label\">{label}</label>\r\n        </div>\r\n        <div className=\"field-body\">\r\n            <div className=\"field\">\r\n                <div className=\"control\">\r\n                    <input className=\"input\" {...inputProps}/>\r\n                </div>\r\n                \r\n            </div>\r\n        </div>\r\n        \r\n    </div>\r\n}","import React from \"react\";\r\ntype Pos = 0|1|2|3|4|5;\r\n\r\ninterface Props {\r\n    onPositionChange: (int: Pos) => void;\r\n    currentPosition: Pos;\r\n    isLeft: boolean;\r\n}\r\nexport function PositionSelectionView(props: Props) {\r\n    const col = props.isLeft ? [0, 1] : [1, 0];\r\n\r\n    return <table className=\"position-selector\">\r\n        <tbody>\r\n            {\r\n                [0,1,2].map(x => <tr key={x}>\r\n                    {\r\n                        (x === 0 && !props.isLeft) ? <td className=\"frontline\" rowSpan={3}>前线</td> : null\r\n                    }\r\n                    {\r\n                        col.map(y => <td key={y} className={x * 2 + y === props.currentPosition ? \"selected\" : \"\"} onClick={() => props.onPositionChange((x * 2 + y) as Pos) }></td>)\r\n                    }\r\n                    {\r\n                        (x === 0 && props.isLeft) ? <td className=\"frontline\" rowSpan={3}>前线</td> : null\r\n                    }\r\n                </tr>)\r\n            }\r\n        </tbody>\r\n    </table>\r\n}","import { Attribute } from \"../models/Attribute\";\r\n\r\nexport const ATTRIBUTE_NAME = {\r\n    [Attribute.Earth] : \"地\",\r\n    [Attribute.Electric] : \"电\",\r\n    [Attribute.Fire] : \"火\",\r\n    [Attribute.Water] : \"水\",\r\n    [Attribute.Wind] : \"风\"\r\n}\r\n\r\nexport const ICON_NAME = {\r\n    [Attribute.Earth]: \"fa-mountain\",\r\n    [Attribute.Electric]: \"fa-bolt\",\r\n    [Attribute.Fire]: \"fa-fire\",\r\n    [Attribute.Water]: \"fa-tint\",\r\n    [Attribute.Wind]: \"fa-wind\"\r\n}\r\n","import React, { ChangeEvent } from \"react\";\r\nimport { Attribute } from \"../models/Attribute\";\r\nimport { BattlerData, Position } from \"../models/Battler\";\r\nimport { Field } from \"./Field\";\r\nimport { PositionSelectionView } from \"./PositionSelectionView\";\r\nimport {ATTRIBUTE_NAME, ICON_NAME} from \"./AttributeName\";\r\n\r\ninterface Props{\r\n    isLeft: boolean;\r\n    battler: BattlerData;\r\n    onBattlerChanged: (battler: BattlerData) => void;\r\n    onBattlerDeleted: () => void\r\n}\r\n\r\nexport class BattlerInfoView extends React.Component<Props, {}>{\r\n    constructor(props: Props) {\r\n        super(props);\r\n        this.handleDpChange = this.handleDpChange.bind(this);\r\n        this.handlePositionChange = this.handlePositionChange.bind(this);\r\n        this.handleNameChange = this.handleNameChange.bind(this);\r\n        \r\n    }\r\n\r\n    handleDpChange(e: ChangeEvent<HTMLInputElement>) {\r\n        let battler = this.copyBattler(this.props.battler);\r\n        battler.dp = Number.parseInt(e.target.value);\r\n        this.props.onBattlerChanged(battler);\r\n    }\r\n\r\n    handlePositionChange(pos: Position) {\r\n        let battler = {...this.props.battler, position: pos};\r\n        this.props.onBattlerChanged(battler);\r\n    }\r\n\r\n    handleNameChange(e: ChangeEvent<HTMLInputElement>) {\r\n        let battler = this.copyBattler(this.props.battler);\r\n        battler.name = e.target.value;\r\n        this.props.onBattlerChanged(battler);\r\n    }\r\n\r\n    handleAttributeChange(attribute: Attribute, e: ChangeEvent<HTMLInputElement>) {\r\n        let battler = this.copyBattler(this.props.battler);\r\n        battler.attributeResistances[attribute] = Number.parseInt(e.target.value);\r\n        this.props.onBattlerChanged(battler);\r\n    }\r\n\r\n    copyBattler(battler: BattlerData) : BattlerData{\r\n        return {dp: battler.dp, id: battler.id, name: battler.name, position: battler.position, attributeResistances: battler.attributeResistances};\r\n    }\r\n\r\n    render() {\r\n        return <div className=\"battler-info-view\">\r\n            <Field label=\"DP:\" type=\"number\" onChange={this.handleDpChange} value={this.props.battler.dp} />\r\n            <div className=\"field is-horizontal\">\r\n                <div className=\"field-label is-normal\">\r\n                    <label className=\"label\">位置</label>\r\n                </div>\r\n                <div className=\"field-body\">\r\n                    <PositionSelectionView isLeft={this.props.isLeft} currentPosition={this.props.battler.position} onPositionChange={pos => this.handlePositionChange(pos)}/>\r\n                </div>\r\n            </div>\r\n            <Field label=\"名称:\" type=\"text\" onChange={this.handleNameChange} value={this.props.battler.name} />\r\n        \r\n            <div className=\"field is-horizontal\">\r\n                <div className=\"field-label\">\r\n                    <label className=\"label\">抗性</label>\r\n                </div>\r\n                <div className=\"field-body\">\r\n                    {\r\n                        [Attribute.Earth, Attribute.Electric, Attribute.Fire, Attribute.Water, Attribute.Wind].map((attribute: Attribute) => {\r\n                            return <div className=\"field\" key={attribute}>\r\n                                <p className=\"control has-icons-left\">\r\n                                    <input type=\"number\" className=\"input\" value={this.props.battler.attributeResistances[attribute]} onChange={this.handleAttributeChange.bind(this, attribute)} placeholder={ATTRIBUTE_NAME[attribute]}/>\r\n                                    <span className=\"icon is-small is-left\">\r\n                                        <i className={\"fas \" + ICON_NAME[attribute]}></i>\r\n                                    </span>\r\n                                </p>\r\n                            </div>\r\n                        })\r\n                    }\r\n                </div>\r\n            </div>\r\n        \r\n            <div className=\"is-grouped-right is-grouped field\">\r\n                <div className=\"control\">\r\n                    <button className=\"button is-danger\" onClick={this.props.onBattlerDeleted}>删除</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    }\r\n\r\n    \r\n}","import React, { ReactNode, ChangeEvent } from \"react\";\r\nimport { BattlerData } from \"../models/Battler\";\r\nimport { BattlerInfoView } from \"./BattlerInfoView\";\r\nimport { SideData } from \"../models/Side\";\r\nimport { Attribute } from \"../models/Attribute\";\r\nimport { Field } from \"./Field\";\r\n\r\ninterface Props{\r\n    isLeft: boolean;\r\n    side: SideData;\r\n    onSideChanged: (side: SideData) => void;\r\n}\r\n\r\nexport class SideInfoView extends React.Component<Props, {}>{\r\n\r\n    side: SideData;\r\n    maxBattlerId: number;\r\n\r\n    constructor(props : Props) {\r\n        super(props);\r\n        this.handleHpChange = this.handleHpChange.bind(this);\r\n        this.handleSpChange = this.handleSpChange.bind(this);\r\n        this.addBattler = this.addBattler.bind(this);\r\n        this.side = {hp: 0, sp: 0, battlers: []};\r\n        this.maxBattlerId = 0;\r\n    }\r\n\r\n    handleHpChange(e: ChangeEvent<HTMLInputElement>) {\r\n        let side = this.copySide(this.props.side);\r\n        side.hp = Number.parseInt(e.target.value);\r\n        this.props.onSideChanged(side);\r\n    }\r\n\r\n    handleSpChange(e: ChangeEvent<HTMLInputElement>) {\r\n        let side = this.copySide(this.props.side);\r\n        side.sp = Number.parseInt(e.target.value);\r\n        this.props.onSideChanged(side);\r\n    }\r\n\r\n    handleBattlerChanged(id: number, battler: BattlerData) {\r\n        let side = this.copySide(this.props.side);\r\n        let battlers = side.battlers;\r\n        battlers[id] = battler;\r\n        this.props.onSideChanged(side);\r\n    }\r\n\r\n    addBattler() {\r\n        let side = this.copySide(this.props.side);\r\n        let battlers = side.battlers;\r\n        let res = {[Attribute.Earth]: 0, [Attribute.Electric]: 0, [Attribute.Fire]: 0, [Attribute.Water]: 0, [Attribute.Wind]: 0};\r\n        let b: BattlerData = {dp: 0, name: \"\", attributeResistances: res, id: this.maxBattlerId++, position: 0};\r\n        battlers.push(b);\r\n        this.props.onSideChanged(side);\r\n    }\r\n\r\n    deleteBattler(id: number) {\r\n        let battlers = this.props.side.battlers.filter(b => b.id !== id);\r\n        this.props.onSideChanged({...this.props.side, battlers});\r\n        \r\n\r\n    }\r\n\r\n    copySide(side: SideData) : SideData {\r\n        this.side.hp = side.hp;\r\n        this.side.sp = side.sp;\r\n        this.side.battlers = side.battlers;\r\n        return this.side;\r\n    }\r\n\r\n    render(): ReactNode{\r\n        return <div className=\"column\">\r\n            <div className=\"side-info-view\">\r\n                <Field label=\"HP:\" className=\"input\" type=\"number\" onChange={this.handleHpChange} value={this.props.side.hp}/>\r\n                <Field label=\"AP:\" className=\"input\" type=\"number\" onChange={this.handleSpChange} value={this.props.side.sp}/>\r\n                <div className=\"battlers-view\">\r\n                    <label className=\"label\">角色：</label>\r\n                    {\r\n                        this.props.side.battlers.map((b, id) => {\r\n                            return <BattlerInfoView isLeft={this.props.isLeft} battler={b} onBattlerChanged={this.handleBattlerChanged.bind(this, id) } onBattlerDeleted={() => this.deleteBattler(b.id)} key={b.id}/>\r\n                        })\r\n                    }\r\n                    <button className=\"button\" onClick={this.addBattler}>添加角色</button>\r\n                </div>\r\n            </div>\r\n            \r\n\r\n        </div>\r\n    }\r\n}","import React, { ChangeEvent } from \"react\";\r\nimport { ActionData } from \"../models/ActionData\";\r\nimport { Attribute } from \"../models/Attribute\";\r\nimport { Field } from \"./Field\";\r\n\r\ninterface Props{\r\n    action: ActionData;\r\n    onActionChanged: (action: ActionData) => void;\r\n    onActionDeleted: () => void;\r\n}\r\n\r\nexport class ActionInfoView extends React.Component<Props> {\r\n\r\n    constructor(props: Props) {\r\n        super(props);\r\n        this.onAttributeChanged = this.onAttributeChanged.bind(this);\r\n        this.onAttributeDamageChanged = this.onAttributeDamageChanged.bind(this);\r\n        this.onHpDamageChanged = this.onHpDamageChanged.bind(this);\r\n        this.onSpCostChanged = this.onSpCostChanged.bind(this);\r\n        this.onNameChanged = this.onNameChanged.bind(this);\r\n        this.onDpRecoveryChanged = this.onDpRecoveryChanged.bind(this);\r\n        this.onSpRecoveryChanged = this.onSpRecoveryChanged.bind(this);\r\n        this.onDefenceIncreaseChanged = this.onDefenceIncreaseChanged.bind(this);\r\n    }\r\n\r\n    onAttributeChanged(e: ChangeEvent<HTMLSelectElement>) {\r\n        let action = {...this.props.action, attribute: Number.parseInt(e.target.value)};\r\n        this.props.onActionChanged(action);\r\n    }\r\n\r\n    onHpDamageChanged(e: ChangeEvent<HTMLInputElement>) {\r\n        let action = {...this.props.action, hpDamage: Number.parseInt(e.target.value)};\r\n        this.props.onActionChanged(action);\r\n    }\r\n\r\n    onSpCostChanged(e: ChangeEvent<HTMLInputElement>) {\r\n        let action = {...this.props.action, spCost: Number.parseInt(e.target.value)};\r\n        this.props.onActionChanged(action);\r\n    }\r\n\r\n    onAttributeDamageChanged(e: ChangeEvent<HTMLInputElement>) {\r\n        let action = {...this.props.action, attributeDamage: Number.parseInt(e.target.value)};\r\n        this.props.onActionChanged(action);\r\n    }\r\n\r\n    onNameChanged(e: ChangeEvent<HTMLInputElement>) {\r\n        let action = {...this.props.action, name: e.target.value};\r\n        this.props.onActionChanged(action);\r\n    }\r\n\r\n    onDpRecoveryChanged(e: ChangeEvent<HTMLInputElement>) {\r\n        let action = {...this.props.action, dpRecovery: Number.parseInt(e.target.value)};\r\n        this.props.onActionChanged(action);\r\n    }\r\n\r\n    onSpRecoveryChanged(e: ChangeEvent<HTMLInputElement>) {\r\n        let action = {...this.props.action, spRecovery: Number.parseInt(e.target.value)};\r\n        this.props.onActionChanged(action);\r\n    }\r\n\r\n    onDefenceIncreaseChanged(e: ChangeEvent<HTMLInputElement>) {\r\n        let action = {...this.props.action, defenceIncrease: Number.parseInt(e.target.value)};\r\n        this.props.onActionChanged(action);\r\n    }\r\n    \r\n    render() {\r\n        return <div className=\"action-view\">\r\n            <Field label=\"名称\"  type=\"text\" value={this.props.action.name} onChange={this.onNameChanged} />\r\n            <Field label=\"HP伤害\" type=\"number\" value={this.props.action.hpDamage} onChange={this.onHpDamageChanged} />\r\n            <Field label=\"AP消耗\" type=\"number\" value={this.props.action.spCost} onChange={this.onSpCostChanged} />\r\n            <Field label=\"属性伤害\" type=\"number\" value={this.props.action.attributeDamage} onChange={this.onAttributeDamageChanged} />\r\n            <Field label=\"DP回复\" type=\"number\" value={this.props.action.dpRecovery} onChange={this.onDpRecoveryChanged} />\r\n            <Field label=\"AP回复\" type=\"number\" value={this.props.action.spRecovery} onChange={this.onSpRecoveryChanged} />\r\n            <Field label=\"防御值增加\" type=\"number\" value={this.props.action.defenceIncrease} onChange={this.onDefenceIncreaseChanged} />\r\n            <div className=\"field is-horizontal\">\r\n                <div className=\"field-label is-normal\">\r\n                    <label className=\"label\">属性</label>\r\n                </div>\r\n                <div className=\"field-body\">\r\n                    <div className=\"field\">\r\n                        <div className=\"control\">\r\n                            <div className=\"select is-fullwidth\">\r\n                                <select onChange={this.onAttributeChanged} value={this.props.action.attribute}>\r\n                                    <option value={Attribute.Earth}>土</option>\r\n                                    <option value={Attribute.Electric}>电</option>\r\n                                    <option value={Attribute.Fire}>火</option>\r\n                                    <option value={Attribute.Water}>水</option>\r\n                                    <option value={Attribute.Wind}>风</option>\r\n                                </select> \r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"is-grouped-right is-grouped field\">\r\n                <div className=\"control\">\r\n                    <button className=\"button is-danger\" onClick={this.props.onActionDeleted}>删除</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    }\r\n}","import React from \"react\";\r\ninterface Props{\r\n    saves: string[];\r\n    onClosed: () => void;\r\n    onLoad: (name: string) => void;\r\n    onDelete: (name: string) => void;\r\n}\r\n\r\nexport function LoadView(props: Props) {\r\n    return <div className=\"modal is-active\">\r\n        <div className=\"modal-background\"></div>\r\n        <div className=\"modal-card\">\r\n            <header className=\"modal-card-head\">\r\n                <p className=\"modal-card-title\">\r\n                    读取存档\r\n                </p>\r\n                <button className=\"delete\" aria-label=\"close\" onClick={props.onClosed}></button>\r\n            </header>\r\n            <section className=\"modal-card-body\">\r\n                <div className=\"content\">\r\n                    <ol>\r\n                        {\r\n                            props.saves.map((name, id) => \r\n                                <li className=\"load-name\" key={id} onClick={() => props.onLoad(name)}><span>{name}</span> <button className=\"delete\" onClick={(e) => {props.onDelete(name); e.stopPropagation();}}></button></li>\r\n                            )\r\n                        }\r\n                    </ol>\r\n                </div>\r\n            </section>\r\n        </div>\r\n    </div>\r\n}","import React from \"react\";\r\nimport { SideInfoView } from \"./SideInfoView\";\r\nimport { SideData } from \"../models/Side\";\r\nimport { ActionData } from \"../models/ActionData\";\r\nimport { ActionInfoView } from \"./ActionInfoView\";\r\nimport { Attribute } from \"../models/Attribute\";\r\nimport { LoadView } from \"./LoadView\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst META_ITEM = \"_saveMetaItem_V3\";\r\nconst META_ITEM_V2 = \"_saveMetaItem_V2\";\r\n\r\ninterface SaveData{\r\n    side: SideData;\r\n    side2: SideData;\r\n    actions: ActionData[];\r\n}\r\n\r\ninterface Props{\r\n    onComplete: (sideA: SideData, sideB: SideData, actions: ActionData[]) => void;\r\n}\r\n\r\ninterface Action {\r\n    data: ActionData;\r\n    id: number;\r\n}\r\n\r\ninterface State{\r\n    side: SideData;\r\n    side2: SideData;\r\n    actions: Action[];\r\n    loadShowing: boolean;\r\n    saves: string[];\r\n    currentPage: \"sides\" | \"actions\";\r\n}\r\n\r\nexport class EditView extends React.Component<Props, State>{\r\n\r\n    maxActionId: number;\r\n\r\n    constructor(props: Props) {\r\n        super(props);\r\n        this.state = {\r\n            side: {hp: 0, sp: 0, battlers: []},\r\n            side2: {hp:0, sp:0, battlers: []},\r\n            actions: [],\r\n            loadShowing: false,\r\n            saves: [],\r\n            currentPage: \"sides\" \r\n        }\r\n        this.maxActionId = 0;\r\n        this.handleSideChanged = this.handleSideChanged.bind(this);\r\n        this.handleSide2Changed = this.handleSide2Changed.bind(this);\r\n        this.onAddAction = this.onAddAction.bind(this);\r\n        this.onComplete = this.onComplete.bind(this);\r\n        this.migrateSaveV2_TO_V3();\r\n    }\r\n\r\n    handleSideChanged(side: SideData) {\r\n        this.setState({side: side});\r\n    }\r\n\r\n    handleSide2Changed(side: SideData) {\r\n        this.setState({side2: side});\r\n    }\r\n\r\n    onActionChanged(id: number, action: ActionData) {\r\n        this.setState((state) => {\r\n            let arr = [...state.actions];\r\n            const index = arr.findIndex(v=> v.id === id);\r\n            arr[index] = {...arr[index], data: action};\r\n            return {actions: arr};\r\n        })\r\n    }\r\n\r\n    onAddAction() {\r\n        this.setState((state) => {\r\n            let arr = [...state.actions];\r\n            arr.push({id: this.maxActionId++, data: {hpDamage: 0, spCost: 0, attribute: Attribute.Earth, attributeDamage: 0, name: \"\", spRecovery: 0, dpRecovery: 0, defenceIncrease: 0}});\r\n            return {actions: arr};\r\n        })\r\n    }\r\n\r\n    onRemoveAction(id: number) {\r\n        this.setState((state) => {\r\n            const actions = [...state.actions];\r\n            const index = actions.findIndex(v => v.id === id);\r\n            if(index !== -1) {\r\n                actions.splice(index, 1);\r\n            }\r\n            return {actions};\r\n        });\r\n    }\r\n\r\n    onComplete() {\r\n        this.props.onComplete(this.state.side, this.state.side2, this.state.actions.map(v=>v.data));\r\n    }\r\n\r\n    onSave() {\r\n        let savename = window.prompt(\"存档名称（同名会自动覆盖）\", new Date().toLocaleString());\r\n        if(savename === null) {\r\n            return;\r\n        }\r\n        savename = savename.trim();\r\n        if(savename === \"\") {\r\n            return;\r\n        }\r\n        if(savename === META_ITEM || savename === META_ITEM_V2) {\r\n            window.alert(\"非法名称\");\r\n            return;\r\n        }\r\n        //todo remove actions id.\r\n        const stateString = JSON.stringify({side: this.state.side, side2: this.state.side2, actions: this.state.actions.map(v => v.data)});\r\n        const namesString = localStorage.getItem(META_ITEM);\r\n        let names: string[];\r\n        if(namesString === null) {\r\n            names = [];\r\n        }else{\r\n            names = JSON.parse(namesString) as string[];\r\n        }\r\n        if(names.findIndex(x => x === savename) !== -1) {\r\n            if(window.confirm(\"存在同名存档，是否覆盖？\") === false) {\r\n                return;\r\n            }\r\n        }else{\r\n            names.push(savename);\r\n        }\r\n        localStorage.setItem(META_ITEM, JSON.stringify(names));\r\n        localStorage.setItem(savename, stateString);\r\n    }\r\n\r\n    private migrateSaveV2_TO_V3() {\r\n        const V2nameString = localStorage.getItem(META_ITEM_V2);\r\n        if(V2nameString === null) {\r\n            return;\r\n        }\r\n        const V2saves = JSON.parse(V2nameString) as string[];\r\n        const newSave = [];\r\n        for (let save of V2saves) {\r\n            const saveString = localStorage.getItem(save);\r\n            if(saveString === null) {\r\n                continue;\r\n            }\r\n            let saveData = JSON.parse(saveString) as any;\r\n            delete saveData[\"targetArea\"];\r\n            newSave.push(save);\r\n            localStorage.setItem(save, JSON.stringify(saveData));\r\n        }\r\n        localStorage.removeItem(META_ITEM_V2);\r\n        const V3NameString = localStorage.getItem(META_ITEM);\r\n        let v3names: string[] = [];\r\n        if(V3NameString !== null) {\r\n            v3names = JSON.parse(V3NameString) as string[];\r\n        }\r\n        for (let save of newSave) {\r\n            if(v3names.indexOf(save) === -1) {\r\n                v3names.push(save);\r\n            }\r\n        }\r\n        localStorage.setItem(META_ITEM, JSON.stringify(v3names));\r\n    }\r\n\r\n    onLoad() {\r\n        const namesString = localStorage.getItem(META_ITEM);\r\n        if(namesString === null) {\r\n            alert(\"无存档\");\r\n            return;\r\n        }\r\n        let names = JSON.parse(namesString) as string[];\r\n        if(names.length === 0) {\r\n            alert(\"无存档\");\r\n            return;\r\n        }\r\n        this.setState({\r\n            loadShowing: true,\r\n            saves: names\r\n        });\r\n    }\r\n\r\n    onLoadCanceled() {\r\n        this.setState({loadShowing: false})\r\n    }\r\n\r\n    onDeleteSave(name: string) {\r\n        const nameString = localStorage.getItem(META_ITEM);\r\n        if(nameString === null) {\r\n            alert(\"读取错误！\");\r\n            this.setState({loadShowing: false});\r\n            return;\r\n        }\r\n        let names = JSON.parse(nameString) as string[];\r\n        const index = names.indexOf(name);\r\n        if(index === -1) {\r\n            alert(\"读取错误！\");\r\n            this.setState({loadShowing: false});\r\n            return;\r\n        }\r\n        names.splice(index, 1);\r\n\r\n        localStorage.setItem(META_ITEM, JSON.stringify(names));\r\n        localStorage.removeItem(name);\r\n\r\n        if(names.length === 0) {\r\n            this.setState({\r\n                loadShowing: false,\r\n                saves: names\r\n            });\r\n        }\r\n        else {\r\n            this.setState({\r\n                loadShowing: true,\r\n                saves: names\r\n            });\r\n        }\r\n    }\r\n\r\n    onLoadSelected(name: string) { \r\n        const dataString = localStorage.getItem(name);\r\n        if(dataString === null) {\r\n            alert(\"读取错误！\");\r\n            this.setState({loadShowing: false});\r\n            return;\r\n        }\r\n        const data = JSON.parse(dataString) as SaveData;\r\n        this.setState({\r\n            loadShowing: false,\r\n            side: data.side,\r\n            side2: data.side2,\r\n            actions: data.actions.map(v => ({id: this.maxActionId++, data: v}))\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return <React.Fragment>\r\n            <div className=\"container\">\r\n                <div className=\"tabs\">\r\n                    <ul>\r\n                        <li className={this.state.currentPage === \"sides\" ? \"is-active\" : \"\"}>\r\n                            <a onClick={(e) => {e.preventDefault(); this.setState({currentPage: \"sides\"});}}>角色</a>\r\n                        </li>\r\n                        <li className={this.state.currentPage === \"actions\" ? \"is-active\" : \"\"}>\r\n                            <a onClick={(e) => {e.preventDefault(); this.setState({currentPage: \"actions\"});}}>行为</a>\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n                {\r\n                    this.state.currentPage === \"sides\" ? \r\n                        <div className=\"sides-view\">\r\n                            <div className=\"columns edit-view-troop-headers\">\r\n                                <div className=\"column edit-view-troop-header red\"><p>红方</p></div>\r\n                                <div className=\"column edit-view-troop-header blue\"><p>蓝方</p></div>\r\n                            </div>\r\n                            \r\n                            <div className=\"columns side-info-views\">\r\n                                <SideInfoView side={this.state.side} onSideChanged={this.handleSideChanged} isLeft={true}/>\r\n                                \r\n                                <SideInfoView side={this.state.side2} onSideChanged={this.handleSide2Changed} isLeft={false}/>\r\n                            </div>\r\n                        </div> \r\n                    :\r\n                         null\r\n                }\r\n                \r\n\r\n                {\r\n                    this.state.currentPage === \"actions\" ? \r\n                        <div className=\"actions-view\">\r\n                            {\r\n                                this.state.actions.map((action) => {\r\n                                    return <ActionInfoView action={action.data} onActionChanged={this.onActionChanged.bind(this, action.id)} key={action.id} onActionDeleted={() => this.onRemoveAction(action.id)}/>\r\n                                })\r\n                            }\r\n                            <div className=\"field\">\r\n                                <button className=\"button\" onClick={this.onAddAction}>添加</button>\r\n                            </div>\r\n                            \r\n                        </div>\r\n                    :\r\n                        null\r\n                }\r\n                \r\n                <div className=\"footer-view field is-grouped\">\r\n                    <p className=\"control\">\r\n                        <Link className=\"button is-primary\" to=\"/battle\" onClick={this.onComplete}>完成</Link>\r\n                    </p>\r\n                    <p className=\"control\">\r\n                        <button className=\"button\" onClick={() => this.onSave()}>保存</button>\r\n                    </p>\r\n                    <p className=\"control\">\r\n                        <button className=\"button\" onClick={() => this.onLoad()}>读取</button>\r\n                    </p>\r\n                    \r\n                </div>\r\n            </div>\r\n            {\r\n                this.state.loadShowing ? \r\n                    <LoadView saves={this.state.saves} onClosed={() => this.onLoadCanceled()} onLoad={(name) => this.onLoadSelected(name)} onDelete={(name) => this.onDeleteSave(name)}/> : null\r\n            }\r\n        </React.Fragment>\r\n    }\r\n\r\n}","import {Attribute} from \"./Attribute\"\r\nimport { Side, HpDamageResult as SideHpDamageResult } from \"./Side\";\r\nexport class Battler{\r\n    maxDp: number;\r\n    dp: number;\r\n    attributeResistances: {[key in Attribute]: number}\r\n    side: Side;\r\n    private currentAttribute: {attribute: Attribute | null, point: number}\r\n    private weakState: boolean;\r\n    private thisTurnDpDamaged: boolean;\r\n    position: Position;\r\n    name: string;\r\n    id: number;\r\n    defence: number;\r\n\r\n    constructor(side: Side, data: BattlerData) {\r\n        this.position = data.position;\r\n        this.side = side;\r\n        this.dp = data.dp;\r\n        this.maxDp = data.dp;\r\n        this.attributeResistances = data.attributeResistances;\r\n        this.currentAttribute = {attribute: null, point: 0};\r\n        this.weakState = false;\r\n        this.thisTurnDpDamaged = false;\r\n        this.name = data.name;\r\n        this.id = data.id;\r\n        this.defence = 0;\r\n    }\r\n\r\n    getCurrentAttribute() : Attribute | null { \r\n        return this.currentAttribute.attribute;\r\n    }\r\n\r\n    getAttributePoint(): number {\r\n        return this.currentAttribute.point;\r\n    }    \r\n\r\n    applyAttributeDamage(attribute: Attribute, attributeDamage: number): AttributeDamageResult{\r\n        let result: AttributeDamageResult = {dpDamage: 0, attributePointAttached: 0, knockedIntoWeak: false, attribute: null};\r\n        \r\n        if(this.weakState && !this.thisTurnDpDamaged && attribute === this.currentAttribute.attribute) {\r\n            result.dpDamage = 1;\r\n            this.dp -= 1;\r\n            this.thisTurnDpDamaged = true;\r\n        }\r\n        if(this.weakState) {\r\n            //in weak state, attribute point won't increase anymore.\r\n            return result;\r\n        }\r\n        result.attribute = attribute;\r\n        result.attributePointAttached = attributeDamage;\r\n        if(this.currentAttribute.attribute === attribute) {\r\n            this.currentAttribute.point += attributeDamage;\r\n        }\r\n        else{\r\n            this.currentAttribute.attribute = attribute;\r\n            this.currentAttribute.point = attributeDamage;\r\n        }\r\n        let resist = this.attributeResistances[attribute];\r\n        if(resist !== 0 && resist <= this.currentAttribute.point) {\r\n            this.weakState = true;\r\n            this.currentAttribute.point = 0;\r\n            result.knockedIntoWeak = true;\r\n        }\r\n        return result;\r\n    }\r\n\r\n    applyDpRecovery(dpRecovery: number): DpRecoveryResult {\r\n        const oldDp = this.dp;\r\n        this.dp += dpRecovery;\r\n        if(this.dp >= this.maxDp){\r\n            this.dp = this.maxDp;\r\n        }\r\n        if(this.dp < 0) {\r\n            this.dp = 0;\r\n        }\r\n        \r\n        return this.dp - oldDp;\r\n    }\r\n\r\n    applyDefenceIncrease(defenceIncrease: number): DefenceIncreaseResult {\r\n        this.defence += defenceIncrease;\r\n        console.log(this, defenceIncrease);\r\n        return defenceIncrease;\r\n    }\r\n\r\n    applyHpDamage(hpDamage: number): HpDamageResult {\r\n        let defended;\r\n        if(this.defence < hpDamage) {\r\n            defended = this.defence;\r\n            hpDamage -= this.defence;\r\n            this.defence = 0;\r\n            \r\n        }\r\n        else{\r\n            this.defence -= hpDamage;\r\n            defended = hpDamage;\r\n            hpDamage = 0;\r\n        }\r\n        return {...this.side.applyHpDamage(hpDamage), defended};\r\n        \r\n    }\r\n\r\n    onTurnStart() : void{\r\n        if(this.thisTurnDpDamaged) {\r\n            this.weakState = false;\r\n        }\r\n        this.thisTurnDpDamaged = false;\r\n        this.defence = 0;\r\n    }\r\n\r\n    isDead() : boolean {\r\n        return this.dp <= 0;\r\n    }\r\n\r\n    isWeakState(): boolean {\r\n        return this.weakState;\r\n    }\r\n}\r\nexport interface AttributeDamageResult{\r\n    knockedIntoWeak: boolean;\r\n    dpDamage: number;\r\n    attribute: Attribute | null;\r\n    attributePointAttached: number;\r\n}\r\nexport interface BattlerData{\r\n    name: string;\r\n    dp: number;\r\n    id: number;\r\n    attributeResistances: {[key in Attribute]: number};\r\n    position: 0|1|2|3|4|5;\r\n}\r\nexport type Position = 0|1|2|3|4|5;\r\nexport function FlatPosToXY(pos: Position) : [0|1|2, 0|1]{\r\n    return [Math.floor(pos / 2), pos % 2] as [0|1|2, 0|1];\r\n}\r\n\r\nexport function XYPosToFlat(x: 0|1|2, y: 0|1): Position {\r\n    return x * 2 + y as Position;\r\n}\r\n\r\nexport interface HpDamageResult extends SideHpDamageResult{\r\n    defended: number;\r\n}\r\n\r\nexport type DpRecoveryResult = number;\r\nexport type DefenceIncreaseResult = number;","import { Battler, BattlerData } from \"./Battler\";\r\nimport { Action } from \"./Action\";\r\n\r\nexport class Side{\r\n    \r\n    opponent: Side | null;\r\n    damageMultiplier: number;\r\n    thisActionDamageMultiplier: number;\r\n    damageMultiplierDelta: number;\r\n    battlers: Battler[];\r\n    hp: number;\r\n    sp: number;\r\n    \r\n    constructor(data: SideData) {\r\n        this.battlers = data.battlers.map(v => new Battler(this, v));\r\n        this.damageMultiplier = 1.0;\r\n        this.thisActionDamageMultiplier = 1.0;\r\n        this.damageMultiplierDelta = 0.2;\r\n        this.opponent = null;\r\n        this.hp = data.hp;\r\n        this.sp = data.sp;\r\n    }\r\n\r\n    getBattler(position: [number, number]) : Battler | undefined {\r\n        const flatPosition = position[0] * 2 + position[1];\r\n        return this.battlers.find(b => b.position === flatPosition);\r\n    }\r\n    \r\n\r\n    setOpponent(side: Side) {\r\n        this.opponent = side;\r\n    }\r\n\r\n    applyHpDamage(hpDamage: number): HpDamageResult {\r\n        this.hp -= hpDamage;\r\n        if(this.hp < 0) {\r\n            this.hp = 0;\r\n        }\r\n        return {hpDamage: hpDamage, isDead: this.hp === 0};\r\n    }\r\n\r\n    applySpRecovery(spRecovery: number): SpRecoveryResult {\r\n        const oldSp = this.sp;\r\n        this.sp += spRecovery;\r\n        if(this.sp >= 10) {\r\n            this.sp = 10;\r\n        }\r\n        if(this.sp < 0) {\r\n            this.sp = 0;\r\n        }\r\n        return this.sp - oldSp;\r\n    }\r\n\r\n    onDamageWeakState(action: Action): DamageMultiplierResult {\r\n        let ret = {multiplierAdded: this.damageMultiplierDelta};\r\n        this.thisActionDamageMultiplier += this.damageMultiplierDelta;\r\n        this.damageMultiplierDelta += 0.2;\r\n        return ret;\r\n    }\r\n\r\n    onActionEnd() {\r\n        this.damageMultiplier = this.thisActionDamageMultiplier;\r\n    }\r\n\r\n    onTurnStart() {\r\n        this.damageMultiplier = 1.0;\r\n        this.thisActionDamageMultiplier = 1.0;\r\n        this.damageMultiplierDelta = 0.2;\r\n        this.battlers.forEach(b => b.onTurnStart());\r\n        if(this.sp <= 3) {\r\n            this.sp = 3;\r\n        }\r\n    }\r\n\r\n    getDisplayDamageMultiplier(): number{\r\n        return this.thisActionDamageMultiplier;\r\n    }\r\n\r\n\r\n}\r\n\r\nexport interface HpDamageResult{\r\n    hpDamage: number;\r\n    isDead: boolean;\r\n}\r\n\r\nexport type SpRecoveryResult = number;\r\n\r\nexport interface SideData{\r\n    battlers: BattlerData[];\r\n    hp: number;\r\n    sp: number;\r\n}\r\n\r\nexport interface DamageMultiplierResult{\r\n    multiplierAdded: number;\r\n}\r\n","import { HpDamageResult, Battler, Position, AttributeDamageResult, DpRecoveryResult, DefenceIncreaseResult, FlatPosToXY } from \"./Battler\";\r\nimport { DamageMultiplierResult, Side, SpRecoveryResult  } from \"./Side\";\r\nimport { ActionData } from \"./ActionData\";\r\n\r\nexport class Action{\r\n    user: Battler;\r\n    targets: Battler[] | null;\r\n    data: ActionData;\r\n    id: number;\r\n    private attack: Attack | null;\r\n    private targetPoints: {self: Position[], opponent: Position[]};\r\n\r\n    constructor(ad: ActionData, user: Battler, targets: {self: Position[], opponent: Position[]}, id: number) {\r\n        this.data = ad;\r\n        this.targets = null;\r\n        this.attack = null;\r\n        this.user = user;\r\n        this.targetPoints = targets;\r\n        this.id = id;\r\n    }\r\n\r\n    canUse(){\r\n        return !this.user.isDead();\r\n    }\r\n\r\n    private fetchBattlers(side: Side, positions: Position[]) : Battler[]{\r\n        return positions.map(p => side.getBattler(FlatPosToXY(p))).filter(b => b !== undefined) as Battler[];\r\n    }\r\n\r\n    step() : boolean{\r\n        if(!this.canUse()){\r\n            return false;\r\n        }\r\n        if(this.targets === null) {\r\n            this.targets = [...this.fetchBattlers(this.user.side, this.targetPoints.self), ...this.fetchBattlers(this.user.side.opponent!, this.targetPoints.opponent)];\r\n        }\r\n        if(this.targets.length === 0) {\r\n            this.user.side.onActionEnd();\r\n            return false;\r\n        }\r\n        let t = this.targets.shift();\r\n        this.attack = new Attack(this.user, t!, this);\r\n        return true;\r\n    }\r\n\r\n    getCurrentAttack() : Attack | null{\r\n        return this.attack;\r\n    }\r\n}\r\n\r\nexport class Attack{\r\n    user: Battler;\r\n    target: Battler;\r\n    action: Action;\r\n    hpDamageResult: HpDamageResult;\r\n    spRecoveryResult: SpRecoveryResult;\r\n    dpRecoveryResult: DpRecoveryResult;\r\n    defenceIncreaseResult: DefenceIncreaseResult;\r\n    damageMultiplierResult: DamageMultiplierResult | null;\r\n    attributeDamageResult: AttributeDamageResult;\r\n\r\n    constructor(user: Battler, target: Battler, action: Action){\r\n        this.user = user;\r\n        this.target = target;\r\n        this.action = action;\r\n        let hpDamage = this.user.side.damageMultiplier * this.action.data.hpDamage;\r\n        this.hpDamageResult = this.target.applyHpDamage(hpDamage);\r\n        this.damageMultiplierResult = null;\r\n        this.spRecoveryResult = this.target.side.applySpRecovery(this.action.data.spRecovery);\r\n        this.dpRecoveryResult = this.target.applyDpRecovery(this.action.data.dpRecovery);\r\n        this.defenceIncreaseResult = this.target.applyDefenceIncrease(this.action.data.defenceIncrease);\r\n        //TODO: we can combine damageMultiplierResult and attributeDamageResult.\r\n        if(this.action.data.attribute === this.target.getCurrentAttribute() && this.target.isWeakState()) {\r\n            this.damageMultiplierResult = this.user.side.onDamageWeakState(this.action);\r\n        }\r\n        this.attributeDamageResult = this.target.applyAttributeDamage(this.action.data.attribute, this.action.data.attributeDamage);\r\n    }\r\n}","import { Side, SideData } from \"../models/Side\";\r\nimport { Action, Attack } from \"../models/Action\";\r\nimport { ActionData } from \"../models/ActionData\";\r\nimport { Battler, Position } from \"../models/Battler\";\r\nimport { Observable, BehaviorSubject } from \"rxjs\" \r\n\r\nexport type InputtingPhase = \"decideBattler\" | \"decideAction\" | \"decideTarget\" | undefined;\r\nexport type Phase = \"inputting\"|\"processing\" | undefined;\r\n\r\nconst UPDATE_INTERVAL = 200;\r\n\r\nexport class BattleVM {\r\n    private _sideA: Side;\r\n    private _sideB: Side;\r\n    private _actions: BehaviorSubject<Action[]>;\r\n    private _phase: BehaviorSubject<Phase>;\r\n    private _inputtingPhase: BehaviorSubject<InputtingPhase>;\r\n    private _actionResults : BehaviorSubject<Attack[]>;\r\n    private currentProcessingAction: Action | undefined;\r\n    private _inputtingAction: ActionData | undefined;\r\n    private _currentInputtingBattler: Battler | undefined;\r\n    private _nextActionId: number;\r\n\r\n    constructor(sideA: SideData, sideB: SideData) {\r\n        this._sideA = new Side(sideA);\r\n        this._sideB = new Side(sideB);\r\n        this._sideA.setOpponent(this._sideB);\r\n        this._sideB.setOpponent(this._sideA);\r\n        this._actions = new BehaviorSubject([] as Action[]);\r\n        this._phase = new BehaviorSubject(undefined as Phase);\r\n        this._inputtingPhase = new BehaviorSubject(undefined as InputtingPhase);\r\n        this._actionResults = new BehaviorSubject([] as Attack[]);\r\n        this._actions.next([]);\r\n        this._actionResults.next([]);\r\n        this.currentProcessingAction = undefined;\r\n        this.startTurn();\r\n        this._nextActionId = 0;\r\n    }\r\n\r\n    get phase() : Observable<Phase>{\r\n        return this._phase;\r\n    }\r\n\r\n    get sideA() {\r\n        return this._sideA;\r\n    }\r\n\r\n    get sideB() {\r\n        return this._sideB;\r\n    }\r\n\r\n    get actions() : Observable<Action[]>{\r\n        return this._actions;\r\n    }\r\n\r\n    get inputtingPhase() : Observable<InputtingPhase> {\r\n        return this._inputtingPhase;\r\n    }\r\n\r\n    get actionResults() : Observable<Attack[]> {\r\n        return this._actionResults;\r\n    }\r\n\r\n    get inputtingAction() : ActionData | undefined{\r\n        return this._inputtingAction;\r\n    }\r\n\r\n    get targets() : Battler[] | undefined{\r\n        if(this._currentInputtingBattler === undefined) {\r\n            return undefined;\r\n        }\r\n        else{\r\n            return this._currentInputtingBattler!.side.opponent!.battlers; \r\n        }\r\n    }\r\n    \r\n\r\n    addAction(action: ActionData) : boolean{\r\n        this.checkInputting(\"decideAction\");\r\n        if(action.spCost > this._currentInputtingBattler!.side.sp) {\r\n            return false;\r\n        }\r\n        this._inputtingAction = action;\r\n        this._inputtingPhase.next(\"decideTarget\");\r\n        return true;\r\n    }\r\n\r\n    setTargets(targets: {left: Position[], right: Position[]}) {\r\n        if(this._inputtingAction!.spCost <= this._currentInputtingBattler!.side.sp) {\r\n            this._currentInputtingBattler!.side.sp -= this._inputtingAction!.spCost;\r\n            \r\n            \r\n            let actionTargets;\r\n            if(this._currentInputtingBattler!.side === this.sideA) {\r\n                actionTargets = {self: targets.left, opponent: targets.right};\r\n            }\r\n            else {\r\n                actionTargets = {self: targets.right, opponent: targets.left};\r\n            }\r\n            this._actions.value.push(new Action(this._inputtingAction!, this._currentInputtingBattler!, actionTargets, this._nextActionId));\r\n            ++this._nextActionId;\r\n        }\r\n        this._inputtingPhase.next(\"decideBattler\");\r\n    }\r\n\r\n    selectBattler(battler: Battler) {\r\n        this.checkInputting(\"decideBattler\");\r\n        this._currentInputtingBattler = battler;\r\n        this._inputtingPhase.next(\"decideAction\");\r\n    }\r\n\r\n    checkInputting(inputtingPhase: InputtingPhase) {\r\n        if(this._phase.value !== \"inputting\") {\r\n            throw new Error(\"phase must be inputting\");\r\n        }\r\n        if(this._inputtingPhase.value !== inputtingPhase) {\r\n            throw new Error(\"inputting phase must be \" + inputtingPhase);\r\n        }\r\n    }\r\n\r\n    endInputting() {\r\n        this._phase.next(\"processing\");\r\n        this._inputtingPhase.next(undefined);\r\n        this._actionResults.value.length = 0;\r\n        this._actionResults.next(this._actionResults.value);\r\n        this.updateLoop();\r\n    }\r\n\r\n    updateLoop() {\r\n        this.update();\r\n        if(this._phase.value === \"processing\") {\r\n            setTimeout( ()=> this.updateLoop(), UPDATE_INTERVAL);\r\n        }\r\n    }\r\n\r\n    update() {\r\n        if(this._phase.value === \"inputting\") {\r\n            throw new Error(\"You shouldn't call update in inputting state.\");\r\n        }\r\n        while(true) {\r\n            if(this.currentProcessingAction !== undefined) {\r\n                if(this.currentProcessingAction.step()){\r\n                    this._actionResults.value.push(this.currentProcessingAction.getCurrentAttack()!);\r\n                    this._actionResults.next(this._actionResults.value);\r\n                    return;\r\n                }\r\n            }\r\n            this.currentProcessingAction = this._actions.value.shift();\r\n            this._actions.next(this._actions.value);\r\n            if(this.currentProcessingAction === undefined) {\r\n                this.startTurn();\r\n                break;\r\n            }\r\n        }\r\n        \r\n    }\r\n\r\n    cancelTargetSelection(): void {\r\n        this.checkInputting(\"decideTarget\");\r\n        this._inputtingAction = undefined;\r\n        this._inputtingPhase.next(\"decideAction\");\r\n    }\r\n\r\n    cancelActionSelection() : void {\r\n        this.checkInputting(\"decideAction\");\r\n        this._currentInputtingBattler = undefined;\r\n        this._inputtingPhase.next(\"decideBattler\");\r\n    }\r\n\r\n    private startTurn() {\r\n        this._sideA.onTurnStart();\r\n        this._sideB.onTurnStart();\r\n        this._phase.next(\"inputting\");\r\n        this._inputtingPhase.next(\"decideBattler\");\r\n    }\r\n\r\n    onActionDeleted(id: number): void {\r\n        this.checkInputting(\"decideBattler\");\r\n        const index = this._actions.value.findIndex((a) => a.id === id);\r\n        const [action] = this._actions.value.splice(index, 1);\r\n        action.user.side.sp += action.data.spCost;\r\n        this._actions.next(this._actions.value);\r\n    }\r\n    \r\n}","import React from \"react\";\r\nimport { Battler, Position } from \"../models/Battler\";\r\nimport {ATTRIBUTE_NAME, ICON_NAME} from \"./AttributeName\";\r\n\r\ninterface Props{\r\n    battlers: Battler[];\r\n    isLeft: boolean;\r\n    onBattlerClick: (b: Battler) => void\r\n}\r\n\r\nfunction BattlerBriefView(props: {pos: Position, battler: Battler | undefined, enter: (pos: Position) => void, exit: (pos: Position) => void, onClick: (b: Battler) => void}){\r\n    if(props.battler === undefined) {\r\n        return <td onMouseEnter={() => props.enter(props.pos)} onMouseLeave={() => props.exit(props.pos)}></td>\r\n    }\r\n    let attrIcon = null;\r\n    \r\n    const attr = props.battler.getCurrentAttribute();\r\n    if(attr !== null) {\r\n        attrIcon = <span className=\"icon\"><i className={\"fas \" + ICON_NAME[attr]}></i></span>\r\n    }\r\n\r\n    return <td onMouseEnter={() => props.enter(props.pos)} onMouseLeave={() => props.exit(props.pos)} onClick={()=>props.onClick(props.battler!)}>\r\n        <p className=\"battle-brief-view-name\">{props.battler.name}</p>\r\n        <p className=\"battle-brief-view-dp\">{props.battler.dp}</p>\r\n        <p className=\"battle-brief-view-icons\">\r\n            {\r\n                props.battler.isDead() ? <span className=\"icon\"><i className=\"fas fa-skull\"></i></span> : null\r\n            }\r\n            {\r\n                props.battler.isWeakState() ? <span className=\"icon\"><i className=\"fas fa-heart-broken\"></i></span> : null\r\n            }\r\n            {\r\n                attrIcon\r\n            }\r\n            \r\n        </p>\r\n        \r\n    </td>\r\n}\r\n\r\nfunction BattlerDetailView(props: {battler: Battler|undefined}){\r\n    if(props.battler === undefined) {\r\n        return <div className=\"detail-view\"></div>\r\n    }\r\n    let attribute = props.battler.getCurrentAttribute();\r\n    console.log(\"BattlerDetailView\", props.battler);\r\n    return <div className=\"detail-view\">\r\n        <p>{props.battler.name}\r\n            {\r\n                props.battler.isDead() ? <span className=\"icon\"><i className=\"fas fa-skull\"></i></span> : null\r\n            }\r\n            {\r\n                props.battler.isWeakState() ? <span className=\"icon\"><i className=\"fas fa-heart-broken\"></i></span> : null\r\n            }\r\n        </p>\r\n        \r\n        <p><b>DP:</b> {props.battler.dp}</p>\r\n        <p><b>抗:</b>{props.battler.defence}</p>\r\n        {\r\n            attribute === null ? null : \r\n            <p><b>{ATTRIBUTE_NAME[attribute]}</b> {props.battler.getAttributePoint()}</p>\r\n        }\r\n    </div>\r\n}\r\n\r\nexport class BattleFieldView extends React.Component<Props, {pos: Position | undefined}>{\r\n    constructor(props: Props) {\r\n        super(props);\r\n        this.state = {\r\n            pos: undefined\r\n        }\r\n    }\r\n\r\n    onEnterBattler(pos: Position) {\r\n        this.setState({pos});\r\n    }\r\n\r\n    onExitBattler(pos: Position) {\r\n        this.setState((prevState) => prevState.pos === pos ? {pos: undefined} : {pos: prevState.pos});\r\n    }\r\n\r\n    render() {\r\n        const battlers: {[key in Position]? : Battler} = this.props.battlers.reduce((state: {[p in Position]? : Battler}, b) => {state[b.position] = b; return state;}, {});\r\n        const col = this.props.isLeft ? [0, 1] : [1, 0];\r\n        let currentBattler = this.state.pos === undefined ? undefined : battlers[this.state.pos];\r\n        return <React.Fragment>\r\n            <table className=\"battle-field-view\">\r\n                <tbody>\r\n                    {\r\n                        [0,1,2].map(x => <tr key={x}>\r\n                            {\r\n                                (x === 0 && !this.props.isLeft) ? <td rowSpan={3} className=\"frontline\"><span>前线</span></td> : null\r\n                            }\r\n                            {\r\n                                col.map(y => <BattlerBriefView pos={(x * 2 + y) as Position} key={y} battler={battlers[(x * 2 + y) as Position]} enter={(b) => this.onEnterBattler(b)} exit={(b) => this.onExitBattler(b)} onClick={this.props.onBattlerClick}/>)\r\n                            }\r\n                            {\r\n                                (x === 0 && this.props.isLeft) ? <td rowSpan={3} className=\"frontline\"><span>前线</span></td> : null\r\n                            }\r\n                        </tr>)\r\n                    }\r\n                </tbody>\r\n            </table>\r\n            <BattlerDetailView battler={currentBattler} />\r\n        </React.Fragment>\r\n    }\r\n}","import { Side } from \"../models/Side\";\r\nimport React from \"react\";\r\nimport { Battler } from \"../models/Battler\";\r\nimport { BattleFieldView } from \"./BattleFieldView\";\r\n\r\ninterface Props{\r\n    side: Side;\r\n    onBattlerClick: (b: Battler) => void;\r\n    isRed: boolean;\r\n}\r\n\r\n\r\nexport function SideView(props: Props) {\r\n    return <div className={\"side-view column is-6\" + (props.isRed ? \" red\" : \" blue\") }>\r\n        <div>\r\n            <p><b>HP:</b> {props.side.hp}</p>\r\n            <p><b>AP:</b> {props.side.sp}</p>\r\n            <BattleFieldView isLeft={props.isRed} battlers={props.side.battlers} onBattlerClick={props.onBattlerClick}/>\r\n        </div>\r\n    </div>\r\n}\r\n\r\n","import { Battler, Position, XYPosToFlat } from \"../models/Battler\";\r\nimport React from \"react\";\r\n\r\ninterface Props{\r\n    battlersLeft: Battler[];\r\n    battlersRight: Battler[];\r\n    onTargetSelected: (selected: {left: Position[], right: Position[]}) => void;\r\n    onClose: () => void;\r\n}\r\n\r\nfunction BattlerCell(props: {onClick: () => void, pos: Position, highlighted: boolean, name: string}) {\r\n    return <td className={props.highlighted ? \"highlighted\" : \"\"} onClick={() => props.onClick()}>{props.name}</td>\r\n}\r\n\r\nexport class TargetView extends React.Component<Props, {selectedPosition: {left: {[p in Position] : boolean}, right: {[p in Position]: boolean}}}> {\r\n    constructor(props: Props) {\r\n        super(props);\r\n        this.state = {selectedPosition: {left: {0: false, 1: false, 2: false, 3: false, 4: false, 5: false}, right: {0: false, 1: false, 2: false, 3: false, 4: false, 5: false}}};\r\n        this.onTargetSelected = this.onTargetSelected.bind(this);\r\n    }\r\n\r\n    onTargetSelected(pos: Position, isLeft: boolean) {\r\n        this.setState(prevState => {\r\n            {\r\n                const oldPos = {left: {...prevState.selectedPosition.left}, right: {...prevState.selectedPosition.right}};\r\n                if(isLeft) {\r\n                    oldPos.left[pos] = !oldPos.left[pos];\r\n                }\r\n                else{\r\n                    oldPos.right[pos] = !oldPos.right[pos];\r\n                }\r\n                return {selectedPosition: oldPos}\r\n            }\r\n        });\r\n    }\r\n\r\n    onConfirm() {\r\n        const convert = (v: {[p in Position]: boolean}) => Object.entries(v).filter(([x,y]) => y).map(([key, _]) => Number.parseInt(key));\r\n        const left = convert(this.state.selectedPosition.left) as Position[];\r\n        const right = convert(this.state.selectedPosition.right) as Position[];\r\n        this.props.onTargetSelected({left, right});\r\n    }\r\n\r\n    render() {\r\n        let leftBattlersMap: (Battler|null)[] = Array(6).fill(null);\r\n        let rightBattlersMap: (Battler|null)[] = Array(6).fill(null);\r\n        this.props.battlersLeft.forEach(b => leftBattlersMap[b.position] = b);\r\n        this.props.battlersRight.forEach(b => rightBattlersMap[b.position] = b);\r\n        return <div className=\"modal target-view is-active\">\r\n                <div className=\"modal-background\"></div>\r\n                <div className=\"modal-card\">\r\n                    <header className=\"modal-card-head\">\r\n                        <p className=\"modal-card-title\">选择目标</p>\r\n                        <button className=\"delete\" aria-label=\"close\" onClick={()=>this.props.onClose()}></button>\r\n                    </header>\r\n                    <section className=\"modal-card-body\">\r\n                        <table className=\"target-view-table\">\r\n                            <tbody>\r\n                                {\r\n                                    [0,1,2].map(x => \r\n                                        <tr key={x}>\r\n                                            {\r\n                                                [0,1].map(y => {\r\n                                                    let pos = XYPosToFlat(x as 0|1|2, y as 0|1);\r\n                                                    let battler = leftBattlersMap[pos];\r\n                                                    let name = battler === null ? \"\" : battler.name;\r\n                                                    let isHighlighted = this.state.selectedPosition.left[pos];\r\n                                                    return <BattlerCell key={y} onClick={()=>this.onTargetSelected(pos, true)} pos={pos} name={name} highlighted={isHighlighted}/>\r\n                                                })\r\n                                            }\r\n                                            {\r\n                                                x === 0 ? <td rowSpan={3} className=\"target-view-frontline\">前线</td> : null\r\n                                            }\r\n                                            {\r\n                                                [1,0].map(y => {\r\n                                                    let pos = XYPosToFlat(x as 0|1|2, y as 0|1);\r\n                                                    let battler = rightBattlersMap[pos];\r\n                                                    let name = battler === null ? \"\" : battler.name;\r\n                                                    let isHighlighted = this.state.selectedPosition.right[pos];\r\n                                                    return <BattlerCell key={y} onClick={()=>this.onTargetSelected(pos, false)} pos={pos} name={name} highlighted={isHighlighted}/>\r\n                                                })\r\n                                            }\r\n                                        </tr>\r\n                                    )\r\n                                }\r\n                            </tbody>\r\n                        </table>\r\n                    </section>\r\n                    <footer className=\"modal-card-foot\">\r\n                        <button className=\"button is-success\" onClick={() => this.onConfirm()}>确认</button>\r\n                        <button className=\"button\" onClick={() => this.props.onClose()}>取消</button>\r\n                    </footer>\r\n                </div>\r\n            </div>\r\n    }\r\n}","import { Attack } from \"../models/Action\";\r\nimport { ATTRIBUTE_NAME } from \"./AttributeName\";\r\nimport React from \"react\";\r\n\r\ninterface Props{\r\n    result: Attack;\r\n}\r\nexport function ResultView(props: Props) {\r\n    let attribute = null;\r\n    if(props.result.attributeDamageResult.attribute !== null) {\r\n        attribute = <React.Fragment>\r\n                <p>附加了 {props.result.attributeDamageResult.attributePointAttached} 点 {ATTRIBUTE_NAME[props.result.attributeDamageResult.attribute]} </p>\r\n                <p>{props.result.attributeDamageResult.knockedIntoWeak ? \"打入了弱点状态\" : \"\"} \r\n                 {props.result.attributeDamageResult.dpDamage > 0 ? `造成了${props.result.attributeDamageResult.dpDamage}点DP伤害` : \"\" } </p>\r\n            </React.Fragment>;\r\n    }\r\n    let damageMultipiler = null;\r\n    if(props.result.damageMultiplierResult !== null) {\r\n        damageMultipiler = <p>\r\n            伤害提升率上涨了: {props.result.damageMultiplierResult.multiplierAdded}\r\n        </p>\r\n    }\r\n    let dpRcovery = null;\r\n    if(props.result.dpRecoveryResult !== 0) {\r\n        dpRcovery = <p>DP回复了：{props.result.dpRecoveryResult} </p>\r\n    }\r\n    let spRecovery = null;\r\n    if(props.result.spRecoveryResult !== 0) {\r\n        spRecovery = <p>SP回复了：{props.result.spRecoveryResult} </p>\r\n    }\r\n    let defenceIncreasement = null;\r\n    if(props.result.defenceIncreaseResult !== 0) {\r\n        defenceIncreasement = <p>防御上涨了：{props.result.defenceIncreaseResult}</p>\r\n    }\r\n    return <div className=\"result-view\">\r\n        <p>{props.result.action.user.name} 对 {props.result.target.name} 使用了 {props.result.action.data.name}</p>\r\n        <p>消耗了{props.result.hpDamageResult.defended}点防御</p>\r\n        <p>造成了 {props.result.hpDamageResult.hpDamage} 点伤害 {props.result.hpDamageResult.isDead ? \"对面已死亡\" : \"\"}</p>\r\n        {attribute}\r\n        {damageMultipiler}\r\n        {dpRcovery}\r\n        {spRecovery}\r\n        {defenceIncreasement}\r\n    </div>\r\n}","import { ActionData } from \"../models/ActionData\";\r\nimport React from \"react\";\r\n\r\n\r\ninterface Props{\r\n    action: ActionData;\r\n    onClicked: (action: ActionData) => void;\r\n}\r\n\r\nexport function ActionView(props: Props) {\r\n    return <p className=\"action\" onClick={() => props.onClicked(props.action)}>\r\n        <span className=\"name\">{props.action.name}</span> \r\n        &nbsp;\r\n        <span className=\"sp-cost\"><b>SP消耗:</b>{props.action.spCost}</span>\r\n    </p>\r\n\r\n}","import { ActionData } from \"../models/ActionData\";\r\nimport { ActionView } from \"./ActionView\";\r\nimport React from \"react\";\r\n\r\ninterface Props {\r\n    onActionSelectionClosed: () => void;\r\n    actionDatas: ActionData[];\r\n    onActionClicked: (action: ActionData) => void;\r\n}\r\nexport function ActionSelectionView(props: Props) {\r\n    return <div className=\"actions-selection modal is-active\">  \r\n        <div className=\"modal-background\"></div>\r\n        <div className=\"modal-card\">\r\n            <header className=\"modal-card-head\">\r\n                <p className=\"modal-card-title\">选择行动</p>\r\n                <button className=\"delete\" aria-label=\"close\" onClick={() => props.onActionSelectionClosed()}></button>\r\n            </header>\r\n            <section className=\"modal-card-body\">\r\n                {\r\n                    props.actionDatas.map((action, id) => \r\n                    <ActionView action={action} key={id} onClicked={() => props.onActionClicked(action)}/>)\r\n                }\r\n            </section>\r\n        </div>\r\n    </div>\r\n}","import { Action } from \"../models/Action\";\r\nimport React from \"react\";\r\n\r\ninterface Props{\r\n    actions: Action[];\r\n    onActionDeleted: (id: number) => void;\r\n}\r\nexport function ActionRecordsView(props: Props) {\r\n    return <div className=\"action-records\">\r\n        {\r\n            props.actions.map(action => <p key={action.id} className=\"action-record\">\r\n                <span>{action.user.name}</span>\r\n                <span className=\"action-record-action-use\">使用了</span>\r\n                <span className=\"action-record-action-name\">{action.data.name}</span> \r\n                <button className=\"delete action-record-delete\" onClick={e=>{e.preventDefault(); props.onActionDeleted(action.id)} }>X</button>\r\n            </p>)\r\n        }\r\n    </div>\r\n}","import React from \"react\";\r\nimport { SideData } from \"../models/Side\";\r\nimport { ActionData } from \"../models/ActionData\";\r\nimport { Phase, BattleVM, InputtingPhase } from \"../viewmodels/BattleVM\";\r\nimport { Action, Attack } from \"../models/Action\";\r\nimport { Subscription } from \"rxjs\";\r\nimport { SideView } from \"./SideView\";\r\nimport { TargetView } from \"./TargetView\";\r\nimport { Battler, Position } from \"../models/Battler\";\r\nimport { ResultView } from \"./ResultView\";\r\nimport { ActionSelectionView } from \"./ActionSelectionView\";\r\nimport { ActionRecordsView } from \"./ActionRecordsView\";\r\nimport { Redirect } from \"react-router\";\r\n\r\ninterface Props{\r\n    sideA: SideData | undefined;\r\n    sideB: SideData | undefined;\r\n    actionDatas: ActionData[] | undefined;\r\n}\r\ninterface State {\r\n    phase: Phase;\r\n    inputtingPhase: InputtingPhase;\r\n    actionResults: Attack[];\r\n    actions: Action[];\r\n}\r\n\r\nexport class BattleView extends React.Component<Props, State>{\r\n\r\n    private subscription : Subscription | undefined;\r\n    private battleVM : BattleVM | undefined;\r\n    private previousProps : Props | undefined;\r\n\r\n    constructor(props: Props) {\r\n        super(props);\r\n        this.state = {\r\n            phase: undefined,\r\n            inputtingPhase: undefined,\r\n            actionResults: [],\r\n            actions: []\r\n        }\r\n        this.onActionClicked = this.onActionClicked.bind(this);\r\n        this.onTargetSelected = this.onTargetSelected.bind(this);\r\n        this.onBattlerSelected = this.onBattlerSelected.bind(this);\r\n        this.onTargetSelectionClosed = this.onTargetSelectionClosed.bind(this);\r\n        this.onActionSelectionClosed = this.onActionSelectionClosed.bind(this);\r\n        this.onActionDeleted = this.onActionDeleted.bind(this);\r\n    }\r\n\r\n    createVM() {\r\n        this.subscription!.unsubscribe();\r\n        this.subscription = new Subscription();\r\n        this.battleVM = undefined;\r\n        if(this.props.sideA !== undefined && this.props.sideB !== undefined) {\r\n            this.battleVM = new BattleVM(this.props.sideA, this.props.sideB);\r\n            this.battleVM!.phase.subscribe(p => this.setState({phase: p}));\r\n            this.battleVM!.inputtingPhase.subscribe(p => this.setState({inputtingPhase: p}));\r\n            this.battleVM!.actionResults.subscribe(r => this.setState({actionResults: r}));\r\n            this.battleVM!.actions.subscribe(a => this.setState({actions: a}));\r\n        }\r\n    }\r\n\r\n    recreateBattleVM() {\r\n        if(this.previousProps !== this.props){\r\n\r\n            this.previousProps = this.props;\r\n\r\n            if(this.subscription !== undefined) {\r\n                this.subscription!.unsubscribe();\r\n                this.subscription = undefined;\r\n            }\r\n            \r\n            this.battleVM = undefined;\r\n            if(this.props.sideA !== undefined && this.props.sideB !== undefined) {\r\n                this.battleVM = new BattleVM(this.props.sideA, this.props.sideB);\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    registerSubscriptions() {\r\n        if(this.subscription === undefined && this.battleVM !== undefined) {\r\n            let d = [];\r\n            d[0] = this.battleVM!.phase.subscribe(p => this.setState({phase: p}));\r\n            d[1] = this.battleVM!.inputtingPhase.subscribe(p => this.setState({inputtingPhase: p}));\r\n            d[2] = this.battleVM!.actionResults.subscribe(r => this.setState({actionResults: r}));\r\n            d[3] = this.battleVM!.actions.subscribe(a => this.setState({actions: a}));\r\n            this.subscription = new Subscription();\r\n            d.forEach(d => this.subscription!.add(d));\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.registerSubscriptions();\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        this.registerSubscriptions();\r\n    }\r\n\r\n    onActionClicked(action: ActionData) {\r\n        this.battleVM!.addAction(action);\r\n    }\r\n\r\n    onTargetSelected(targets: {left: Position[], right: Position[]}) {\r\n        this.battleVM!.setTargets(targets);\r\n    }\r\n\r\n    onBattlerSelected(battler: Battler) {\r\n        this.battleVM!.selectBattler(battler);\r\n    }\r\n\r\n    onEndTurn() {\r\n        this.battleVM!.endInputting();\r\n    }\r\n\r\n    onTargetSelectionClosed() {\r\n        this.battleVM!.cancelTargetSelection();\r\n    }\r\n\r\n    onActionSelectionClosed() {\r\n        this.battleVM!.cancelActionSelection();\r\n    }\r\n\r\n    onActionDeleted(id: number) {\r\n        this.battleVM!.onActionDeleted(id);\r\n    }\r\n\r\n    render() {\r\n        this.recreateBattleVM();\r\n        if(this.battleVM === undefined) {\r\n            return <Redirect to=\"/\"/>\r\n        }\r\n        let actions = null;\r\n        console.log(this.state.inputtingPhase);\r\n        if(this.props.actionDatas !== undefined && this.state.inputtingPhase === \"decideAction\") {\r\n            actions = <ActionSelectionView onActionClicked={this.onActionClicked} actionDatas={this.props.actionDatas} onActionSelectionClosed={this.onActionSelectionClosed}\r\n            />\r\n        }\r\n        let target = null;\r\n        if(this.state.inputtingPhase === \"decideTarget\") {\r\n            target = <TargetView battlersLeft={this.battleVM.sideA.battlers} battlersRight={this.battleVM.sideB.battlers} onTargetSelected={this.onTargetSelected} onClose={this.onTargetSelectionClosed}/>\r\n        }\r\n        return <div className=\"container battle-view\">\r\n            <div className=\"columns\">\r\n                <SideView isRed={true} side={this.battleVM!.sideA} onBattlerClick={this.onBattlerSelected}/>\r\n                <SideView isRed={false} side={this.battleVM!.sideB} onBattlerClick={this.onBattlerSelected}/>\r\n            </div>\r\n            <ActionRecordsView actions={this.state.actions} onActionDeleted={this.onActionDeleted} />\r\n            <div className=\"control\">\r\n                {\r\n                    this.state.phase === \"inputting\" ? <button className=\"button\" onClick={() => this.onEndTurn()}>结束回合</button> : null\r\n                }\r\n            </div>\r\n            \r\n            <div className={`modal-container ${actions !== null || target !== null ? \"show\" : \"\"}`}>\r\n                {\r\n                    actions !== null ? actions : <React.Fragment />\r\n                }\r\n                {\r\n                    target !== null ? target : <React.Fragment />\r\n                }\r\n\r\n            </div>\r\n            {\r\n                this.state.actionResults.map((result, key) => <ResultView key={key} result={result}/>)\r\n            }\r\n        </div>\r\n    }\r\n}","import React from \"react\";\r\nimport { EditView } from \"./EditView\";\r\nimport { SideData } from \"../models/Side\";\r\nimport { ActionData } from \"../models/ActionData\";\r\nimport { BattleView } from \"./BattleView\";\r\nimport { Route } from \"react-router-dom\";\r\n\r\nexport class AppView extends React.Component<{}, {sideA: SideData | undefined, sideB: SideData | undefined, actions: ActionData[]}>{\r\n\r\n    constructor(props: {}) {\r\n        super(props);\r\n        this.state = {sideA: undefined, sideB: undefined, actions: []};\r\n        this.onComplete = this.onComplete.bind(this);\r\n    }\r\n\r\n    onComplete(sideA:SideData, sideB: SideData, actions: ActionData[]) {\r\n        this.setState({sideA: sideA, sideB: sideB, actions: actions});\r\n    }\r\n\r\n    render() {\r\n        return<div>\r\n            <Route render={props => <EditView onComplete={this.onComplete} {...props} />} path=\"/\" exact />\r\n            <Route render={props => <BattleView {...props} sideA={this.state.sideA} sideB={this.state.sideB} actionDatas={this.state.actions} />} path=\"/battle\"  />\r\n        </div>\r\n    }\r\n}","import React from 'react';\nimport './App.css';\nimport { AppView } from './views/AppView';\n\nconst App: React.FC = () => {\n    \n    return <AppView  />\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {HashRouter as Router } from \"react-router-dom\";\nimport \"bulma\";\nimport \"@fortawesome/fontawesome-free/css/all.css\";\n\nReactDOM.render(<Router><App /></Router>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}