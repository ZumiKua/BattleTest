{"version":3,"sources":["models/Attribute.ts","views/Field.tsx","views/BattlerInfoView.tsx","models/Battler.ts","views/BattlerPositionView.tsx","views/SideInfoView.tsx","views/ActionInfoView.tsx","views/LoadView.tsx","views/EditView.tsx","models/Side.ts","models/Action.ts","viewmodels/BattleVM.ts","views/AttributeName.ts","views/BattleFieldView.tsx","views/SideView.tsx","views/TargetView.tsx","views/ResultView.tsx","views/ActionView.tsx","views/ActionSelectionView.tsx","views/ActionRecordsView.tsx","views/BattleView.tsx","views/AppView.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["Attribute","MATCHUPS","_MATCHUPS","Object","defineProperty","Water","Fire","Electric","Earth","Wind","isEffective","a","b","isIneffective","Field","props","label","inputProps","objectWithoutProperties","className","react_default","createElement","assign","BattlerInfoView","_React$Component","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleDpChange","bind","assertThisInitialized","handleNameChange","onAttributeChanged","inherits","createClass","key","value","e","onBattlerChanged","objectSpread","battler","dp","Number","parseInt","target","name","attribute","type","onChange","onClick","onBattlerDeleted","React","Component","Battler","side","data","position","id","maxDp","initialDp","weakState","thisTurnDamaged","defence","result","dpDamage","knockedIntoWeak","damageMultipiler","onDamageWeakState","dpRecovery","oldDp","defenceIncrease","console","log","hpDamage","defended","applyHpDamage","FlatPosToXY","pos","Math","floor","XYPosToFlat","x","y","BattlerPositionView","ys","isLeft","map","rowSpan","battlerPositions","selected","undefined","toString","align","onBattlerPositionChanged","changeHandler","battlers","SideInfoView","maxBattlerId","handleHpChange","handleSpChange","addBattler","onSideChanged","hp","sp","toConsumableArray","index","findIndex","push","filter","positions","_this2","BattlerInfoView_BattlerInfoView","handleBattlerChanged","deleteBattler","p","i","ActionInfoView","onAttributeDamageChanged","onHpDamageChanged","onSpCostChanged","onNameChanged","onDpRecoveryChanged","onSpRecoveryChanged","onDefenceIncreaseChanged","onWeakStateRecoverChanged","action","onActionChanged","spCost","attributeDamage","spRecovery","weakStateRecover","checked","onActionDeleted","LoadView","aria-label","onClosed","saves","onLoad","onDelete","stopPropagation","META_ITEM","EditView","maxActionId","state","side2","actions","loadShowing","currentPage","handleSideChanged","handleSide2Changed","onAddAction","onComplete","migrateSaveV2_TO_V3","migrateSaveV3_TO_V4","setState","arr","v","splice","savename","window","prompt","Date","toLocaleString","trim","names","stateString","JSON","stringify","namesString","localStorage","getItem","parse","confirm","setItem","alert","oldSaveItem","newSaveItem","convert","oldNameString","oldSaves","newSave","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","next","done","save","saveString","saveData","err","return","removeItem","newNameString","newNames","_i","_newSave","length","indexOf","convertSide","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","migrateSave","oldSave","forEach","nameString","_this3","dataString","_this4","Fragment","preventDefault","SideInfoView_SideInfoView","ActionInfoView_ActionInfoView","onRemoveAction","react_router_dom","to","onSave","onLoadCanceled","onLoadSelected","onDeleteSave","Side","opponent","damageMultiplier","thisActionDamageMultiplier","damageMultiplierDelta","entries","_ref","_ref2","slicedToArray","_ref3","_ref4","find","flatPosition","isDead","oldSp","ret","multiplierAdded","onTurnStart","Action","ad","user","targets","attack","targetPoints","getBattler","canUse","concat","fetchBattlers","self","onActionEnd","t","shift","Attack","hitted","hpDamageResult","spRecoveryResult","dpRecoveryResult","defenceIncreaseResult","attributeDamageResult","calculateHitted","applySpRecovery","applyDpRecovery","applyDefenceIncrease","applyAttributeDamage","applyRecoverFromWeakState","col","userPos","targetPos","row","abs","Error","random","BattleVM","sideA","sideB","_sideA","_sideB","_actions","_phase","_sidesSubject","_inputtingPhase","_actionResults","currentProcessingAction","_inputtingAction","_currentInputtingBattler","_nextActionId","setOpponent","BehaviorSubject","startTurn","checkInputting","actionTargets","left","right","inputtingPhase","updateLoop","update","setTimeout","step","getCurrentAttack","dispatchSideChanges","_this$_actions$value$","pos2","isRed","b1","b2","get","ATTRIBUTE_NAME","_ATTRIBUTE_NAME","ICON_NAME","_ICON_NAME","BattlerBriefView","dataTransferKey","dragObj","draggable","onDragStart","dataTransfer","setData","onDrop","getData","onPositionChange","onDragOver","types","dropEffect","onMouseEnter","enter","onMouseLeave","exit","attrIcon","attr","dp_classname","isWeakState","BattlerDetailView","BattleFieldView","prevState","reduce","currentBattler","onEnterBattler","onExitBattler","onBattlerClick","SideView","BattleFieldView_BattleFieldView","BattlerCell","highlighted","TargetView","selectedPosition","0","1","2","3","4","5","onTargetSelected","oldPos","leftBattlersMap","Array","fill","rightBattlersMap","battlersLeft","battlersRight","onClose","isHighlighted","onConfirm","ResultView","dpRcovery","defenceIncreasement","damage","ActionView","onClicked","ActionSelectionView","onActionSelectionClosed","actionDatas","onActionClicked","ActionRecordsView","BattleView","subscription","battleVM","previousProps","phase","actionResults","onBattlerSelected","onTargetSelectionClosed","unsubscribe","registerSubscriptions","d","subscribe","r","sides","Subscription","add","addAction","setTargets","selectBattler","endInputting","cancelTargetSelection","cancelActionSelection","recreateBattleVM","react_router","TargetView_TargetView","p1","p2","onEndTurn","AppView","render","EditView_EditView","path","exact","BattleView_BattleView","App","AppView_AppView","Boolean","location","hostname","match","ReactDOM","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.97742130.chunk.js","sourcesContent":["export enum Attribute{\r\n    Fire, Water, Earth, Wind, Electric\r\n}\r\nconst MATCHUPS = {\r\n    [Attribute.Water]: Attribute.Fire,\r\n    [Attribute.Electric]: Attribute.Water,\r\n    [Attribute.Earth]: Attribute.Electric,\r\n    [Attribute.Wind]: Attribute.Earth,\r\n    [Attribute.Fire]: Attribute.Wind\r\n}\r\n\r\nexport function isEffective(a: Attribute, b: Attribute) {\r\n    return MATCHUPS[a] === b;\r\n}\r\n\r\nexport function isIneffective(a: Attribute, b: Attribute) {\r\n    return isEffective(b, a);\r\n}","import React from \"react\";\r\ninterface Props{\r\n    label: string;\r\n    [x:string] :any;\r\n}\r\nexport function Field(props: Props) {\r\n    let {label, ...inputProps} = props;\r\n    let className = \"input\";\r\n    if(inputProps[\"type\"] === \"checkbox\") {\r\n        className = \"checkbox\";\r\n    }\r\n    return <div className=\"field is-horizontal\">\r\n        <div className=\"field-label\">\r\n            <label className=\"label\">{label}</label>\r\n        </div>\r\n        <div className=\"field-body\">\r\n            <div className=\"field\">\r\n                <div className=\"control\">\r\n                    <input className={className} {...inputProps}/>\r\n                </div>\r\n                \r\n            </div>\r\n        </div>\r\n        \r\n    </div>\r\n}","import React, { ChangeEvent } from \"react\";\r\nimport { Attribute } from \"../models/Attribute\";\r\nimport { BattlerData } from \"../models/Battler\";\r\nimport { Field } from \"./Field\";\r\n\r\ninterface Props{\r\n    isLeft: boolean;\r\n    battler: BattlerData;\r\n    onBattlerChanged: (battler: BattlerData) => void;\r\n    onBattlerDeleted: () => void\r\n}\r\n\r\nexport class BattlerInfoView extends React.Component<Props, {}>{\r\n    constructor(props: Props) {\r\n        super(props);\r\n        this.handleDpChange = this.handleDpChange.bind(this);\r\n        this.handleNameChange = this.handleNameChange.bind(this);\r\n        this.onAttributeChanged = this.onAttributeChanged.bind(this);\r\n    }\r\n\r\n    handleDpChange(e: ChangeEvent<HTMLInputElement>) {\r\n        this.props.onBattlerChanged({...this.props.battler, dp: Number.parseInt(e.target.value)});\r\n    }\r\n\r\n    handleNameChange(e: ChangeEvent<HTMLInputElement>) {\r\n        this.props.onBattlerChanged({...this.props.battler, name: e.target.value});\r\n    }\r\n\r\n    onAttributeChanged(e: ChangeEvent<HTMLSelectElement>) {\r\n        this.props.onBattlerChanged({...this.props.battler, attribute: Number.parseInt(e.target.value)})\r\n    }\r\n\r\n    render() {\r\n        return <div className=\"battler-info-view\">\r\n            <Field label=\"DP:\" type=\"number\" onChange={this.handleDpChange} value={this.props.battler.dp} />\r\n            <Field label=\"名称:\" type=\"text\" onChange={this.handleNameChange} value={this.props.battler.name} />\r\n        \r\n            <div className=\"field is-horizontal\">\r\n                <div className=\"field-label is-normal\">\r\n                    <label className=\"label\">属性:</label>\r\n                </div>\r\n                <div className=\"field-body\">\r\n                    <div className=\"field\">\r\n                        <div className=\"control\">\r\n                            <div className=\"select is-fullwidth\">\r\n                                <select onChange={this.onAttributeChanged} value={this.props.battler.attribute}>\r\n                                    <option value={Attribute.Earth}>土</option>\r\n                                    <option value={Attribute.Electric}>电</option>\r\n                                    <option value={Attribute.Fire}>火</option>\r\n                                    <option value={Attribute.Water}>水</option>\r\n                                    <option value={Attribute.Wind}>风</option>\r\n                                </select> \r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        \r\n            <div className=\"is-grouped-right is-grouped field\">\r\n                <div className=\"control\">\r\n                    <button className=\"button is-danger\" onClick={this.props.onBattlerDeleted}>删除</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    }\r\n\r\n    \r\n}","import {Attribute, isEffective, isIneffective} from \"./Attribute\"\r\nimport { Side, HpDamageResult as SideHpDamageResult, DamageMultiplierResult } from \"./Side\";\r\nexport class Battler {\r\n    maxDp: number;\r\n    dp: number;\r\n    initialDp: number;\r\n    side: Side;\r\n    private weakState: boolean;\r\n    private thisTurnDamaged: boolean;\r\n    attribute: Attribute;\r\n    position: Position;\r\n    name: string;\r\n    id: number;\r\n    defence: number;\r\n\r\n    constructor(side: Side, data: BattlerData, position: Position, id: number) {\r\n        this.position = position;\r\n        this.side = side;\r\n        this.dp = data.dp;\r\n        this.maxDp = data.dp;\r\n        this.initialDp = data.dp;\r\n        this.weakState = false;\r\n        this.name = data.name;\r\n        this.attribute = data.attribute;\r\n        this.thisTurnDamaged = false;\r\n        this.id = id;\r\n        this.defence = 0;\r\n    }\r\n\r\n    applyAttributeDamage(attribute: Attribute): AttributeDamageResult{\r\n        let result: AttributeDamageResult = {dpDamage: 0, knockedIntoWeak: false, damageMultipiler: null};\r\n        if(this.weakState) {\r\n            if(!isIneffective(attribute, this.attribute)) {\r\n                result.damageMultipiler = this.side.onDamageWeakState(isEffective(attribute, this.attribute));\r\n            }\r\n        }\r\n        if(isEffective(attribute, this.attribute)) {\r\n            this.dp -= 2;\r\n            result.dpDamage = 2;\r\n        }\r\n        else if(isIneffective(attribute, this.attribute)) {\r\n            return result;\r\n        }\r\n        else {\r\n            this.dp -= 1;\r\n            result.dpDamage = 1;\r\n        }\r\n        if(this.dp <= 0) {\r\n            this.dp = 0;\r\n            this.weakState = true;\r\n            result.knockedIntoWeak = true;\r\n        }\r\n        return result;\r\n    }\r\n\r\n    applyRecoverFromWeakState(): WeakStateRecoverResult{\r\n        if(this.weakState) {\r\n            this.weakState = false;\r\n            this.dp = this.maxDp;\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    applyDpRecovery(dpRecovery: number): DpRecoveryResult {\r\n        if(this.weakState) {\r\n            //we can't recover dp in weak state.\r\n            return 0;\r\n        }\r\n        const oldDp = this.dp;\r\n        this.dp += dpRecovery;\r\n        if(this.dp >= this.maxDp){\r\n            this.dp = this.maxDp;\r\n        }\r\n        if(this.dp < 0) {\r\n            this.dp = 0;\r\n        }\r\n        return this.dp - oldDp;\r\n    }\r\n\r\n    applyDefenceIncrease(defenceIncrease: number): DefenceIncreaseResult {\r\n        this.defence += defenceIncrease;\r\n        console.log(this, defenceIncrease);\r\n        return defenceIncrease;\r\n    }\r\n\r\n    applyHpDamage(hpDamage: number, attribute: Attribute): HpDamageResult {\r\n        if(isIneffective(attribute, this.attribute) && !this.weakState) {\r\n            hpDamage *= 0.5;\r\n        }\r\n        if(hpDamage > 0 && this.weakState) {\r\n            this.thisTurnDamaged = true;\r\n        }\r\n        let defended;\r\n        if(this.defence < hpDamage) {\r\n            defended = this.defence;\r\n            hpDamage -= this.defence;\r\n            this.defence = 0;\r\n        }\r\n        else{\r\n            this.defence -= hpDamage;\r\n            defended = hpDamage;\r\n            hpDamage = 0;\r\n        }\r\n        return {...this.side.applyHpDamage(hpDamage), defended};\r\n    }\r\n\r\n    onTurnStart() : void{\r\n        if(this.thisTurnDamaged && this.weakState) {\r\n            this.weakState = false;\r\n            this.maxDp -= 1;\r\n            this.dp = this.maxDp;\r\n        }\r\n        this.thisTurnDamaged = false;\r\n        this.defence = 0;\r\n    }\r\n\r\n    isDead() : boolean {\r\n        return this.maxDp <= 0;\r\n    }\r\n\r\n    isWeakState(): boolean {\r\n        return this.weakState;\r\n    }\r\n}\r\nexport interface AttributeDamageResult{\r\n    knockedIntoWeak: boolean;\r\n    dpDamage: number;\r\n    damageMultipiler: DamageMultiplierResult | null;\r\n}\r\nexport interface BattlerData{\r\n    name: string;\r\n    dp: number;\r\n    id: number;\r\n    attribute: Attribute;\r\n}\r\n\r\nexport type Position = 0|1|2|3|4|5;\r\nexport function FlatPosToXY(pos: Position) : [0|1|2, 0|1]{\r\n    return [Math.floor(pos / 2), pos % 2] as [0|1|2, 0|1];\r\n}\r\n\r\nexport function XYPosToFlat(x: 0|1|2, y: 0|1): Position {\r\n    return x * 2 + y as Position;\r\n}\r\n\r\nexport interface HpDamageResult extends SideHpDamageResult{\r\n    defended: number;\r\n}\r\n\r\nexport type DpRecoveryResult = number;\r\nexport type DefenceIncreaseResult = number;\r\nexport type WeakStateRecoverResult = boolean;","import { Position, XYPosToFlat, BattlerData } from \"../models/Battler\";\r\nimport React, { ChangeEvent } from \"react\";\r\n\r\ninterface Props{\r\n    battlers: BattlerData[];\r\n    battlerPositions: {[p in Position]?: number | undefined};\r\n    onBattlerPositionChanged: (pos: Position, id: number | undefined) => void;\r\n    isLeft: boolean;\r\n}\r\nexport function BattlerPositionView(props: Props) {\r\n    const ys = props.isLeft ? [0, 1] : [1, 0];\r\n    const changeHandler = (pos: Position, e: ChangeEvent<HTMLSelectElement>) => {\r\n        const id = e.target.value === \"unselect\" ? undefined : parseInt(e.target.value);\r\n        props.onBattlerPositionChanged(pos, id);\r\n    }\r\n    return <div>\r\n        <table className=\"battler-position-view\">\r\n            <tbody>{\r\n                [0,1,2].map(x => <tr key={x}>\r\n                    {\r\n                        (x === 0 && !props.isLeft) ? <td rowSpan={3} className=\"frontline\">前线</td> : null\r\n                    }\r\n                    {\r\n                        ys.map(y => {\r\n                            const pos = XYPosToFlat(x as 0|1|2, y as 0|1);\r\n                            const id = props.battlerPositions[pos];\r\n                            const selected = id === undefined ? \"unselect\" : id.toString();\r\n                            return <td key={y} align=\"center\">\r\n                                <div className=\"select\">\r\n                                    <select value={selected} onChange={e => changeHandler(pos, e)}>\r\n                                        <option value=\"unselect\"></option> \r\n                                        {\r\n                                            props.battlers.map(b => <option key={b.id} value={b.id.toString()}>\r\n                                                {b.name}\r\n                                            </option>)\r\n                                        }\r\n                                    </select>\r\n                                </div>\r\n                            </td>\r\n                        })\r\n                    }\r\n                    {\r\n                        (x === 0 && props.isLeft) ? <td rowSpan={3} className=\"frontline\">前线</td> : null\r\n                    }\r\n                </tr>)\r\n            }</tbody>\r\n        </table>\r\n    </div>\r\n}","import React, { ReactNode, ChangeEvent } from \"react\";\r\nimport { BattlerData, Position } from \"../models/Battler\";\r\nimport { BattlerInfoView } from \"./BattlerInfoView\";\r\nimport { SideData } from \"../models/Side\";\r\nimport { Attribute } from \"../models/Attribute\";\r\nimport { Field } from \"./Field\";\r\nimport { BattlerPositionView } from \"./BattlerPositionView\";\r\n\r\ninterface Props{\r\n    isLeft: boolean;\r\n    side: SideData;\r\n    onSideChanged: (side: SideData) => void;\r\n}\r\n\r\nexport class SideInfoView extends React.Component<Props, {}>{\r\n\r\n    maxBattlerId: number;\r\n\r\n    constructor(props : Props) {\r\n        super(props);\r\n        this.handleHpChange = this.handleHpChange.bind(this);\r\n        this.handleSpChange = this.handleSpChange.bind(this);\r\n        this.addBattler = this.addBattler.bind(this);\r\n        this.maxBattlerId = 0;\r\n    }\r\n\r\n    handleHpChange(e: ChangeEvent<HTMLInputElement>) {\r\n        this.props.onSideChanged({...this.props.side, hp: Number.parseInt(e.target.value)});\r\n    }\r\n\r\n    handleSpChange(e: ChangeEvent<HTMLInputElement>) {\r\n        this.props.onSideChanged({...this.props.side, sp: Number.parseInt(e.target.value)});\r\n    }\r\n\r\n    handleBattlerChanged(id: number, battler: BattlerData) {\r\n        let battlers = [...this.props.side.battlers];\r\n        const index = battlers.findIndex(b => b.id === id);\r\n        battlers[index] = battler;\r\n        this.props.onSideChanged({...this.props.side, battlers});\r\n    }\r\n\r\n    addBattler() {\r\n        let battlers = [...this.props.side.battlers];\r\n        let b: BattlerData = {dp: 0, name: \"\", id: this.maxBattlerId++, attribute: Attribute.Fire};\r\n        battlers.push(b);\r\n        this.props.onSideChanged({...this.props.side, battlers});\r\n    }\r\n\r\n    deleteBattler(id: number) {\r\n        let battlers = this.props.side.battlers.filter(b => b.id !== id);\r\n        const positions: any = this.props.side.battlerPositions;\r\n        for(let key in positions) {\r\n            if(positions[key] === id) {\r\n                positions[key] = undefined;\r\n            }\r\n        }\r\n        this.props.onSideChanged({...this.props.side, battlers, battlerPositions: positions});\r\n    }\r\n\r\n    onBattlerPositionChanged(pos: Position, id: number | undefined): void {\r\n        const battlerPositions = {...this.props.side.battlerPositions, [pos]: id};\r\n        console.log(battlerPositions);\r\n        this.props.onSideChanged({...this.props.side, battlerPositions});\r\n    }\r\n\r\n    render(): ReactNode{\r\n        return <div className=\"column\">\r\n            <div className=\"side-info-view\">\r\n                <Field label=\"HP:\" className=\"input\" type=\"number\" onChange={this.handleHpChange} value={this.props.side.hp}/>\r\n                <Field label=\"AP:\" className=\"input\" type=\"number\" onChange={this.handleSpChange} value={this.props.side.sp}/>\r\n                <div className=\"battlers-view\">\r\n                    <label className=\"label\">角色：</label>\r\n                    {\r\n                        this.props.side.battlers.map((b) => {\r\n                            return <BattlerInfoView isLeft={this.props.isLeft} battler={b} onBattlerChanged={this.handleBattlerChanged.bind(this, b.id) } onBattlerDeleted={() => this.deleteBattler(b.id)} key={b.id}/>\r\n                        })\r\n                    }\r\n                    <button className=\"button\" onClick={this.addBattler}>添加角色</button>\r\n                </div>\r\n                <BattlerPositionView battlers={this.props.side.battlers} battlerPositions={this.props.side.battlerPositions} isLeft={this.props.isLeft} onBattlerPositionChanged={(p,i) => this.onBattlerPositionChanged(p,i)} />\r\n            </div>\r\n        </div>\r\n    }\r\n    \r\n}","import React, { ChangeEvent } from \"react\";\r\nimport { ActionData } from \"../models/ActionData\";\r\nimport { Attribute } from \"../models/Attribute\";\r\nimport { Field } from \"./Field\";\r\n\r\ninterface Props{\r\n    action: ActionData;\r\n    onActionChanged: (action: ActionData) => void;\r\n    onActionDeleted: () => void;\r\n}\r\n\r\nexport class ActionInfoView extends React.Component<Props> {\r\n\r\n    constructor(props: Props) {\r\n        super(props);\r\n        this.onAttributeChanged = this.onAttributeChanged.bind(this);\r\n        this.onAttributeDamageChanged = this.onAttributeDamageChanged.bind(this);\r\n        this.onHpDamageChanged = this.onHpDamageChanged.bind(this);\r\n        this.onSpCostChanged = this.onSpCostChanged.bind(this);\r\n        this.onNameChanged = this.onNameChanged.bind(this);\r\n        this.onDpRecoveryChanged = this.onDpRecoveryChanged.bind(this);\r\n        this.onSpRecoveryChanged = this.onSpRecoveryChanged.bind(this);\r\n        this.onDefenceIncreaseChanged = this.onDefenceIncreaseChanged.bind(this);\r\n        this.onWeakStateRecoverChanged = this.onWeakStateRecoverChanged.bind(this);\r\n    }\r\n\r\n    onAttributeChanged(e: ChangeEvent<HTMLSelectElement>) {\r\n        let action = {...this.props.action, attribute: Number.parseInt(e.target.value)};\r\n        this.props.onActionChanged(action);\r\n    }\r\n\r\n    onHpDamageChanged(e: ChangeEvent<HTMLInputElement>) {\r\n        let action = {...this.props.action, hpDamage: Number.parseInt(e.target.value)};\r\n        this.props.onActionChanged(action);\r\n    }\r\n\r\n    onSpCostChanged(e: ChangeEvent<HTMLInputElement>) {\r\n        let action = {...this.props.action, spCost: Number.parseInt(e.target.value)};\r\n        this.props.onActionChanged(action);\r\n    }\r\n\r\n    onAttributeDamageChanged(e: ChangeEvent<HTMLInputElement>) {\r\n        let action = {...this.props.action, attributeDamage: Number.parseInt(e.target.value)};\r\n        this.props.onActionChanged(action);\r\n    }\r\n\r\n    onNameChanged(e: ChangeEvent<HTMLInputElement>) {\r\n        let action = {...this.props.action, name: e.target.value};\r\n        this.props.onActionChanged(action);\r\n    }\r\n\r\n    onDpRecoveryChanged(e: ChangeEvent<HTMLInputElement>) {\r\n        let action = {...this.props.action, dpRecovery: Number.parseInt(e.target.value)};\r\n        this.props.onActionChanged(action);\r\n    }\r\n\r\n    onSpRecoveryChanged(e: ChangeEvent<HTMLInputElement>) {\r\n        let action = {...this.props.action, spRecovery: Number.parseInt(e.target.value)};\r\n        this.props.onActionChanged(action);\r\n    }\r\n\r\n    onDefenceIncreaseChanged(e: ChangeEvent<HTMLInputElement>) {\r\n        let action = {...this.props.action, defenceIncrease: Number.parseInt(e.target.value)};\r\n        this.props.onActionChanged(action);\r\n    }\r\n\r\n    onWeakStateRecoverChanged(e: ChangeEvent<HTMLInputElement>) {\r\n        let action = {...this.props.action, weakStateRecover: e.target.checked};\r\n        this.props.onActionChanged(action);\r\n    }\r\n    \r\n    render() {\r\n        return <div className=\"action-view\">\r\n            <Field label=\"名称\"  type=\"text\" value={this.props.action.name} onChange={this.onNameChanged} />\r\n            <Field label=\"HP伤害\" type=\"number\" value={this.props.action.hpDamage} onChange={this.onHpDamageChanged} />\r\n            <Field label=\"AP消耗\" type=\"number\" value={this.props.action.spCost} onChange={this.onSpCostChanged} />\r\n            <Field label=\"DP回复\" type=\"number\" value={this.props.action.dpRecovery} onChange={this.onDpRecoveryChanged} />\r\n            <Field label=\"AP回复\" type=\"number\" value={this.props.action.spRecovery} onChange={this.onSpRecoveryChanged} />\r\n            <Field label=\"防御值增加\" type=\"number\" value={this.props.action.defenceIncrease} onChange={this.onDefenceIncreaseChanged} />\r\n            <Field label=\"去除弱点状态\" type=\"checkbox\" value={this.props.action.weakStateRecover} checked={this.props.action.weakStateRecover} onChange={this.onWeakStateRecoverChanged}/>\r\n            <div className=\"field is-horizontal\">\r\n                <div className=\"field-label is-normal\">\r\n                    <label className=\"label\">属性</label>\r\n                </div>\r\n                <div className=\"field-body\">\r\n                    <div className=\"field\">\r\n                        <div className=\"control\">\r\n                            <div className=\"select is-fullwidth\">\r\n                                <select onChange={this.onAttributeChanged} value={this.props.action.attribute}>\r\n                                    <option value={Attribute.Earth}>土</option>\r\n                                    <option value={Attribute.Electric}>电</option>\r\n                                    <option value={Attribute.Fire}>火</option>\r\n                                    <option value={Attribute.Water}>水</option>\r\n                                    <option value={Attribute.Wind}>风</option>\r\n                                </select> \r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"is-grouped-right is-grouped field\">\r\n                <div className=\"control\">\r\n                    <button className=\"button is-danger\" onClick={this.props.onActionDeleted}>删除</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    }\r\n}","import React from \"react\";\r\ninterface Props{\r\n    saves: string[];\r\n    onClosed: () => void;\r\n    onLoad: (name: string) => void;\r\n    onDelete: (name: string) => void;\r\n}\r\n\r\nexport function LoadView(props: Props) {\r\n    return <div className=\"modal is-active\">\r\n        <div className=\"modal-background\"></div>\r\n        <div className=\"modal-card\">\r\n            <header className=\"modal-card-head\">\r\n                <p className=\"modal-card-title\">\r\n                    读取存档\r\n                </p>\r\n                <button className=\"delete\" aria-label=\"close\" onClick={props.onClosed}></button>\r\n            </header>\r\n            <section className=\"modal-card-body\">\r\n                <div className=\"content\">\r\n                    <ol>\r\n                        {\r\n                            props.saves.map((name, id) => \r\n                                <li className=\"load-name\" key={id} onClick={() => props.onLoad(name)}><span>{name}</span> <button className=\"delete\" onClick={(e) => {props.onDelete(name); e.stopPropagation();}}></button></li>\r\n                            )\r\n                        }\r\n                    </ol>\r\n                </div>\r\n            </section>\r\n        </div>\r\n    </div>\r\n}","import React from \"react\";\r\nimport { SideInfoView } from \"./SideInfoView\";\r\nimport { SideData } from \"../models/Side\";\r\nimport { ActionData } from \"../models/ActionData\";\r\nimport { ActionInfoView } from \"./ActionInfoView\";\r\nimport { Attribute } from \"../models/Attribute\";\r\nimport { LoadView } from \"./LoadView\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst META_ITEM = \"_saveMetaItem_V5\";\r\n//NO MIGRATE FOR V4\r\nconst META_ITEM_V3 = \"_saveMetaItem_V3\";\r\nconst META_ITEM_V2 = \"_saveMetaItem_V2\";\r\n\r\ninterface SaveData{\r\n    side: SideData;\r\n    side2: SideData;\r\n    actions: ActionData[];\r\n}\r\n\r\ninterface Props{\r\n    onComplete: (sideA: SideData, sideB: SideData, actions: ActionData[]) => void;\r\n}\r\n\r\ninterface Action {\r\n    data: ActionData;\r\n    id: number;\r\n}\r\n\r\ninterface State{\r\n    side: SideData;\r\n    side2: SideData;\r\n    actions: Action[];\r\n    loadShowing: boolean;\r\n    saves: string[];\r\n    currentPage: \"sides\" | \"actions\";\r\n}\r\n\r\nexport class EditView extends React.Component<Props, State>{\r\n\r\n    maxActionId: number;\r\n\r\n    constructor(props: Props) {\r\n        super(props);\r\n        this.state = {\r\n            side: {hp: 0, sp: 0, battlers: [], battlerPositions: {}},\r\n            side2: {hp:0, sp:0, battlers: [], battlerPositions: {}},\r\n            actions: [],\r\n            loadShowing: false,\r\n            saves: [],\r\n            currentPage: \"sides\" \r\n        }\r\n        this.maxActionId = 0;\r\n        this.handleSideChanged = this.handleSideChanged.bind(this);\r\n        this.handleSide2Changed = this.handleSide2Changed.bind(this);\r\n        this.onAddAction = this.onAddAction.bind(this);\r\n        this.onComplete = this.onComplete.bind(this);\r\n        this.migrateSaveV2_TO_V3();\r\n        this.migrateSaveV3_TO_V4();\r\n    }\r\n\r\n    handleSideChanged(side: SideData) {\r\n        this.setState({side: side});\r\n    }\r\n\r\n    handleSide2Changed(side: SideData) {\r\n        this.setState({side2: side});\r\n    }\r\n\r\n    onActionChanged(id: number, action: ActionData) {\r\n        this.setState((state) => {\r\n            let arr = [...state.actions];\r\n            const index = arr.findIndex(v=> v.id === id);\r\n            arr[index] = {...arr[index], data: action};\r\n            return {actions: arr};\r\n        })\r\n    }\r\n\r\n    onAddAction() {\r\n        this.setState((state) => {\r\n            let arr = [...state.actions];\r\n            arr.push({id: this.maxActionId++, data: {hpDamage: 0, spCost: 0, attribute: Attribute.Earth, name: \"\", spRecovery: 0, dpRecovery: 0, defenceIncrease: 0, weakStateRecover: false}});\r\n            return {actions: arr};\r\n        })\r\n    }\r\n\r\n    onRemoveAction(id: number) {\r\n        this.setState((state) => {\r\n            const actions = [...state.actions];\r\n            const index = actions.findIndex(v => v.id === id);\r\n            if(index !== -1) {\r\n                actions.splice(index, 1);\r\n            }\r\n            return {actions};\r\n        });\r\n    }\r\n\r\n    onComplete() {\r\n        this.props.onComplete(this.state.side, this.state.side2, this.state.actions.map(v=>v.data));\r\n    }\r\n\r\n    onSave() {\r\n        let savename = window.prompt(\"存档名称（同名会自动覆盖）\", new Date().toLocaleString());\r\n        if(savename === null) {\r\n            return;\r\n        }\r\n        savename = savename.trim();\r\n        if(savename === \"\") {\r\n            return;\r\n        }\r\n        if(savename === META_ITEM || savename === META_ITEM_V2) {\r\n            window.alert(\"非法名称\");\r\n            return;\r\n        }\r\n        //todo remove actions id.\r\n        const stateString = JSON.stringify({side: this.state.side, side2: this.state.side2, actions: this.state.actions.map(v => v.data)});\r\n        const namesString = localStorage.getItem(META_ITEM);\r\n        let names: string[];\r\n        if(namesString === null) {\r\n            names = [];\r\n        }else{\r\n            names = JSON.parse(namesString) as string[];\r\n        }\r\n        if(names.findIndex(x => x === savename) !== -1) {\r\n            if(window.confirm(\"存在同名存档，是否覆盖？\") === false) {\r\n                return;\r\n            }\r\n        }else{\r\n            names.push(savename);\r\n        }\r\n        localStorage.setItem(META_ITEM, JSON.stringify(names));\r\n        localStorage.setItem(savename, stateString);\r\n    }\r\n\r\n    private migrateSave(oldSaveItem: string, newSaveItem: string, convert: (data:any) => any) {\r\n        const oldNameString = localStorage.getItem(oldSaveItem);\r\n        if(oldNameString === null) {\r\n            return;\r\n        }\r\n        const oldSaves = JSON.parse(oldNameString) as string[];\r\n        const newSave = [];\r\n        for (let save of oldSaves) {\r\n            const saveString = localStorage.getItem(save);\r\n            if(saveString === null) {\r\n                continue;\r\n            }\r\n            let saveData = JSON.parse(saveString) as any;\r\n            saveData = convert(saveData);\r\n            newSave.push(save);\r\n            localStorage.setItem(save, JSON.stringify(saveData));\r\n        }\r\n        localStorage.removeItem(oldSaveItem);\r\n        const newNameString = localStorage.getItem(newSaveItem);\r\n        let newNames: string[] = [];\r\n        if(newNameString !== null) {\r\n            newNames = JSON.parse(newNameString) as string[];\r\n        }\r\n        for (let save of newSave) {\r\n            if(newNames.indexOf(save) === -1) {\r\n                newNames.push(save);\r\n            }\r\n        }\r\n        localStorage.setItem(META_ITEM, JSON.stringify(newNames));\r\n    }\r\n\r\n    private migrateSaveV3_TO_V4() {\r\n        const convertSide = (side: any) => {\r\n            let v: any = {};\r\n            for(let b of side.battlers){\r\n                v[b[\"position\"]] = b.id;\r\n                delete b[\"position\"];\r\n            }\r\n            side.battlerPositions = v;\r\n        }\r\n        this.migrateSave(META_ITEM_V3, META_ITEM, (oldSave)=> {\r\n            convertSide(oldSave[\"side\"]);\r\n            convertSide(oldSave[\"side2\"]);\r\n            return oldSave;\r\n        });\r\n    }\r\n\r\n    private migrateSaveV2_TO_V3() {\r\n        this.migrateSave(META_ITEM_V2, META_ITEM_V3, (oldSave) => {\r\n            oldSave.actions.forEach((action: any) => {\r\n                delete action[\"targetArea\"];\r\n            })\r\n            return oldSave;\r\n        })\r\n    }\r\n\r\n    onLoad() {\r\n        const namesString = localStorage.getItem(META_ITEM);\r\n        if(namesString === null) {\r\n            alert(\"无存档\");\r\n            return;\r\n        }\r\n        let names = JSON.parse(namesString) as string[];\r\n        if(names.length === 0) {\r\n            alert(\"无存档\");\r\n            return;\r\n        }\r\n        this.setState({\r\n            loadShowing: true,\r\n            saves: names\r\n        });\r\n    }\r\n\r\n    onLoadCanceled() {\r\n        this.setState({loadShowing: false})\r\n    }\r\n\r\n    onDeleteSave(name: string) {\r\n        const nameString = localStorage.getItem(META_ITEM);\r\n        if(nameString === null) {\r\n            alert(\"读取错误！\");\r\n            this.setState({loadShowing: false});\r\n            return;\r\n        }\r\n        let names = JSON.parse(nameString) as string[];\r\n        const index = names.indexOf(name);\r\n        if(index === -1) {\r\n            alert(\"读取错误！\");\r\n            this.setState({loadShowing: false});\r\n            return;\r\n        }\r\n        names.splice(index, 1);\r\n\r\n        localStorage.setItem(META_ITEM, JSON.stringify(names));\r\n        localStorage.removeItem(name);\r\n\r\n        if(names.length === 0) {\r\n            this.setState({\r\n                loadShowing: false,\r\n                saves: names\r\n            });\r\n        }\r\n        else {\r\n            this.setState({\r\n                loadShowing: true,\r\n                saves: names\r\n            });\r\n        }\r\n    }\r\n\r\n    onLoadSelected(name: string) { \r\n        const dataString = localStorage.getItem(name);\r\n        if(dataString === null) {\r\n            alert(\"读取错误！\");\r\n            this.setState({loadShowing: false});\r\n            return;\r\n        }\r\n        const data = JSON.parse(dataString) as SaveData;\r\n        this.setState({\r\n            loadShowing: false,\r\n            side: data.side,\r\n            side2: data.side2,\r\n            actions: data.actions.map(v => ({id: this.maxActionId++, data: v}))\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return <React.Fragment>\r\n            <div className=\"container\">\r\n                <div className=\"tabs\">\r\n                    <ul>\r\n                        <li className={this.state.currentPage === \"sides\" ? \"is-active\" : \"\"}>\r\n                            <a onClick={(e) => {e.preventDefault(); this.setState({currentPage: \"sides\"});}}>角色</a>\r\n                        </li>\r\n                        <li className={this.state.currentPage === \"actions\" ? \"is-active\" : \"\"}>\r\n                            <a onClick={(e) => {e.preventDefault(); this.setState({currentPage: \"actions\"});}}>行为</a>\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n                {\r\n                    this.state.currentPage === \"sides\" ? \r\n                        <div className=\"sides-view\">\r\n                            <div className=\"columns edit-view-troop-headers\">\r\n                                <div className=\"column edit-view-troop-header red\"><p>红方</p></div>\r\n                                <div className=\"column edit-view-troop-header blue\"><p>蓝方</p></div>\r\n                            </div>\r\n                            \r\n                            <div className=\"columns side-info-views\">\r\n                                <SideInfoView side={this.state.side} onSideChanged={this.handleSideChanged} isLeft={true}/>\r\n                                \r\n                                <SideInfoView side={this.state.side2} onSideChanged={this.handleSide2Changed} isLeft={false}/>\r\n                            </div>\r\n                        </div> \r\n                    :\r\n                         null\r\n                }\r\n                \r\n\r\n                {\r\n                    this.state.currentPage === \"actions\" ? \r\n                        <div className=\"actions-view\">\r\n                            {\r\n                                this.state.actions.map((action) => {\r\n                                    return <ActionInfoView action={action.data} onActionChanged={this.onActionChanged.bind(this, action.id)} key={action.id} onActionDeleted={() => this.onRemoveAction(action.id)}/>\r\n                                })\r\n                            }\r\n                            <div className=\"field\">\r\n                                <button className=\"button\" onClick={this.onAddAction}>添加</button>\r\n                            </div>\r\n                            \r\n                        </div>\r\n                    :\r\n                        null\r\n                }\r\n                \r\n                <div className=\"footer-view field is-grouped\">\r\n                    <p className=\"control\">\r\n                        <Link className=\"button is-primary\" to=\"/battle\" onClick={this.onComplete}>完成</Link>\r\n                    </p>\r\n                    <p className=\"control\">\r\n                        <button className=\"button\" onClick={() => this.onSave()}>保存</button>\r\n                    </p>\r\n                    <p className=\"control\">\r\n                        <button className=\"button\" onClick={() => this.onLoad()}>读取</button>\r\n                    </p>\r\n                    \r\n                </div>\r\n            </div>\r\n            {\r\n                this.state.loadShowing ? \r\n                    <LoadView saves={this.state.saves} onClosed={() => this.onLoadCanceled()} onLoad={(name) => this.onLoadSelected(name)} onDelete={(name) => this.onDeleteSave(name)}/> : null\r\n            }\r\n        </React.Fragment>\r\n    }\r\n\r\n}","import { Battler, BattlerData, Position } from \"./Battler\";\r\n\r\nexport class Side{\r\n    \r\n    opponent: Side | null;\r\n    damageMultiplier: number;\r\n    thisActionDamageMultiplier: number;\r\n    damageMultiplierDelta: number;\r\n    battlers: Battler[];\r\n    hp: number;\r\n    sp: number;\r\n    \r\n    constructor(data: SideData) {\r\n        //this.battlers = data.battlers.map(v => new Battler(this, v));\r\n        this.battlers = Object.entries(data.battlerPositions).filter(([_, id]) => id !== undefined).map(([pos, id], index) => \r\n            new Battler(this, data.battlers.find(b => b.id === id)!, parseInt(pos) as Position, index)\r\n        );\r\n        console.log(data.battlerPositions, data.battlers);\r\n        console.log(this.battlers);\r\n        this.damageMultiplier = 1.0;\r\n        this.thisActionDamageMultiplier = 1.0;\r\n        this.damageMultiplierDelta = 0.2;\r\n        this.opponent = null;\r\n        this.hp = data.hp;\r\n        this.sp = data.sp;\r\n    }\r\n\r\n    getBattler(position: [number, number]) : Battler | undefined {\r\n        const flatPosition = position[0] * 2 + position[1];\r\n        return this.battlers.find(b => b.position === flatPosition);\r\n    }\r\n    \r\n\r\n    setOpponent(side: Side) {\r\n        this.opponent = side;\r\n    }\r\n\r\n    applyHpDamage(hpDamage: number): HpDamageResult {\r\n        this.hp -= hpDamage;\r\n        if(this.hp < 0) {\r\n            this.hp = 0;\r\n        }\r\n        return {hpDamage: hpDamage, isDead: this.hp === 0};\r\n    }\r\n\r\n    applySpRecovery(spRecovery: number): SpRecoveryResult {\r\n        const oldSp = this.sp;\r\n        this.sp += spRecovery;\r\n        if(this.sp >= 10) {\r\n            this.sp = 10;\r\n        }\r\n        if(this.sp < 0) {\r\n            this.sp = 0;\r\n        }\r\n        return this.sp - oldSp;\r\n    }\r\n\r\n    onDamageWeakState(isEffective: boolean): DamageMultiplierResult {\r\n        let ret = {multiplierAdded: this.damageMultiplierDelta};\r\n        this.thisActionDamageMultiplier += this.damageMultiplierDelta;\r\n        this.damageMultiplierDelta += 0.2;\r\n        return ret;\r\n    }\r\n\r\n    onActionEnd() {\r\n        this.damageMultiplier = this.thisActionDamageMultiplier;\r\n    }\r\n\r\n    onTurnStart() {\r\n        this.damageMultiplier = 1.0;\r\n        this.thisActionDamageMultiplier = 1.0;\r\n        this.damageMultiplierDelta = 0.2;\r\n        this.battlers.forEach(b => b.onTurnStart());\r\n        if(this.sp <= 3) {\r\n            this.sp = 3;\r\n        }\r\n    }\r\n\r\n    getDisplayDamageMultiplier(): number{\r\n        return this.thisActionDamageMultiplier;\r\n    }\r\n\r\n\r\n}\r\n\r\nexport interface HpDamageResult{\r\n    hpDamage: number;\r\n    isDead: boolean;\r\n}\r\n\r\nexport type SpRecoveryResult = number;\r\n\r\nexport interface SideData{\r\n    battlerPositions: {[p in Position]? : number|undefined};\r\n    battlers: BattlerData[];\r\n    hp: number;\r\n    sp: number;\r\n}\r\n\r\nexport interface DamageMultiplierResult{\r\n    multiplierAdded: number;\r\n}\r\n","import { HpDamageResult, Battler, Position, AttributeDamageResult, DpRecoveryResult, DefenceIncreaseResult, FlatPosToXY } from \"./Battler\";\r\nimport { Side, SpRecoveryResult  } from \"./Side\";\r\nimport { ActionData } from \"./ActionData\";\r\nimport { randomBytes } from \"crypto\";\r\n\r\nexport class Action{\r\n    user: Battler;\r\n    targets: Battler[] | null;\r\n    data: ActionData;\r\n    id: number;\r\n    private attack: Attack | null;\r\n    private targetPoints: {self: Position[], opponent: Position[]};\r\n\r\n    constructor(ad: ActionData, user: Battler, targets: {self: Position[], opponent: Position[]}, id: number) {\r\n        this.data = ad;\r\n        this.targets = null;\r\n        this.attack = null;\r\n        this.user = user;\r\n        this.targetPoints = targets;\r\n        this.id = id;\r\n    }\r\n\r\n    canUse(){\r\n        return !this.user.isDead();\r\n    }\r\n\r\n    private fetchBattlers(side: Side, positions: Position[]) : Battler[]{\r\n        return positions.map(p => side.getBattler(FlatPosToXY(p))).filter(b => b !== undefined) as Battler[];\r\n    }\r\n\r\n    step() : boolean{\r\n        if(!this.canUse()){\r\n            return false;\r\n        }\r\n        if(this.targets === null) {\r\n            this.targets = [...this.fetchBattlers(this.user.side, this.targetPoints.self), ...this.fetchBattlers(this.user.side.opponent!, this.targetPoints.opponent)];\r\n        }\r\n        if(this.targets.length === 0) {\r\n            this.user.side.onActionEnd();\r\n            return false;\r\n        }\r\n        let t = this.targets.shift();\r\n        this.attack = new Attack(this.user, t!, this);\r\n        return true;\r\n    }\r\n\r\n    getCurrentAttack() : Attack | null{\r\n        return this.attack;\r\n    }\r\n}\r\n\r\nexport class Attack{\r\n    user: Battler;\r\n    target: Battler;\r\n    action: Action;\r\n    hitted: boolean;\r\n    hpDamageResult: HpDamageResult | undefined;\r\n    spRecoveryResult: SpRecoveryResult | undefined;\r\n    dpRecoveryResult: DpRecoveryResult | undefined;\r\n    defenceIncreaseResult: DefenceIncreaseResult | undefined;\r\n    attributeDamageResult: AttributeDamageResult | undefined;\r\n\r\n    constructor(user: Battler, target: Battler, action: Action){\r\n        this.user = user;\r\n        this.target = target;\r\n        this.action = action;\r\n        this.hitted = this.calculateHitted(user, target);\r\n        if(this.hitted) {\r\n            let hpDamage = this.user.side.damageMultiplier * this.action.data.hpDamage;\r\n            this.hpDamageResult = this.target.applyHpDamage(hpDamage, this.action.data.attribute);\r\n            this.spRecoveryResult = this.target.side.applySpRecovery(this.action.data.spRecovery);\r\n            this.dpRecoveryResult = this.target.applyDpRecovery(this.action.data.dpRecovery);\r\n            this.defenceIncreaseResult = this.target.applyDefenceIncrease(this.action.data.defenceIncrease);\r\n            this.attributeDamageResult = this.target.applyAttributeDamage(this.action.data.attribute);\r\n            if(this.action.data.weakStateRecover) {\r\n                this.target.applyRecoverFromWeakState();\r\n            }\r\n        }\r\n    }\r\n\r\n    calculateHitted(user: Battler, target: Battler) : boolean{\r\n        const userPos = FlatPosToXY(user.position);\r\n        const targetPos = FlatPosToXY(target.position);\r\n        const row = Math.abs(userPos[0] - targetPos[0]) * 0.1;\r\n        let col;\r\n        switch(targetPos[1] + userPos[1]){\r\n            case 0: \r\n                col = 0.2;\r\n                break;\r\n            case 1:\r\n                col = 0.1;\r\n                break;\r\n            case 2:\r\n                col = 0;\r\n                break;\r\n            default:\r\n                throw new Error(\"unknown col\");\r\n        }\r\n        console.log(\"HitRate: \", 1 - col - row);\r\n        return Math.random() > col + row;\r\n    }\r\n}","import { Side, SideData } from \"../models/Side\";\r\nimport { Action, Attack } from \"../models/Action\";\r\nimport { ActionData } from \"../models/ActionData\";\r\nimport { Battler, Position, FlatPosToXY } from \"../models/Battler\";\r\nimport { Observable, BehaviorSubject } from \"rxjs\" \r\n\r\nexport type InputtingPhase = \"decideBattler\" | \"decideAction\" | \"decideTarget\" | undefined;\r\nexport type Phase = \"inputting\"|\"processing\" | undefined;\r\n\r\nconst UPDATE_INTERVAL = 200;\r\n\r\nexport class BattleVM {\r\n    private _sideA: Side;\r\n    private _sideB: Side;\r\n    private _actions: BehaviorSubject<Action[]>;\r\n    private _phase: BehaviorSubject<Phase>;\r\n    private _sidesSubject: BehaviorSubject<[Side, Side]>;\r\n    private _inputtingPhase: BehaviorSubject<InputtingPhase>;\r\n    private _actionResults : BehaviorSubject<Attack[]>;\r\n    private currentProcessingAction: Action | undefined;\r\n    private _inputtingAction: ActionData | undefined;\r\n    private _currentInputtingBattler: Battler | undefined;\r\n    private _nextActionId: number;\r\n\r\n    constructor(sideA: SideData, sideB: SideData) {\r\n        this._sideA = new Side(sideA);\r\n        this._sideB = new Side(sideB);\r\n        this._sideA.setOpponent(this._sideB);\r\n        this._sideB.setOpponent(this._sideA);\r\n        this._sidesSubject = new BehaviorSubject([this._sideA, this._sideB]);\r\n        this._actions = new BehaviorSubject([] as Action[]);\r\n        this._phase = new BehaviorSubject(undefined as Phase);\r\n        this._inputtingPhase = new BehaviorSubject(undefined as InputtingPhase);\r\n        this._actionResults = new BehaviorSubject([] as Attack[]);\r\n        this._actions.next([]);\r\n        this._actionResults.next([]);\r\n        this.currentProcessingAction = undefined;\r\n        this.startTurn();\r\n        this._nextActionId = 0;\r\n    }\r\n\r\n    get phase() : Observable<Phase>{\r\n        return this._phase;\r\n    }\r\n\r\n    get sideA() {\r\n        return this._sideA;\r\n    }\r\n\r\n    get sideB() {\r\n        return this._sideB;\r\n    }\r\n\r\n    get actions() : Observable<Action[]>{\r\n        return this._actions;\r\n    }\r\n    \r\n    get sides() : Observable<[Side, Side]> {\r\n        return this._sidesSubject;\r\n    }\r\n\r\n    get inputtingPhase() : Observable<InputtingPhase> {\r\n        return this._inputtingPhase;\r\n    }\r\n\r\n    get actionResults() : Observable<Attack[]> {\r\n        return this._actionResults;\r\n    }\r\n\r\n    get inputtingAction() : ActionData | undefined{\r\n        return this._inputtingAction;\r\n    }\r\n\r\n    get targets() : Battler[] | undefined{\r\n        if(this._currentInputtingBattler === undefined) {\r\n            return undefined;\r\n        }\r\n        else{\r\n            return this._currentInputtingBattler!.side.opponent!.battlers; \r\n        }\r\n    }\r\n    \r\n\r\n    addAction(action: ActionData) : boolean{\r\n        this.checkInputting(\"decideAction\");\r\n        if(action.spCost > this._currentInputtingBattler!.side.sp) {\r\n            return false;\r\n        }\r\n        this._inputtingAction = action;\r\n        this._inputtingPhase.next(\"decideTarget\");\r\n        return true;\r\n    }\r\n\r\n    setTargets(targets: {left: Position[], right: Position[]}) {\r\n        if(this._inputtingAction!.spCost <= this._currentInputtingBattler!.side.sp) {\r\n            this._currentInputtingBattler!.side.sp -= this._inputtingAction!.spCost;\r\n            \r\n            \r\n            let actionTargets;\r\n            if(this._currentInputtingBattler!.side === this._sideA) {\r\n                actionTargets = {self: targets.left, opponent: targets.right};\r\n            }\r\n            else {\r\n                actionTargets = {self: targets.right, opponent: targets.left};\r\n            }\r\n            this._actions.value.push(new Action(this._inputtingAction!, this._currentInputtingBattler!, actionTargets, this._nextActionId));\r\n            ++this._nextActionId;\r\n        }\r\n        this._inputtingPhase.next(\"decideBattler\");\r\n    }\r\n\r\n    selectBattler(battler: Battler) {\r\n        this.checkInputting(\"decideBattler\");\r\n        this._currentInputtingBattler = battler;\r\n        this._inputtingPhase.next(\"decideAction\");\r\n    }\r\n\r\n    checkInputting(inputtingPhase: InputtingPhase) {\r\n        if(this._phase.value !== \"inputting\") {\r\n            throw new Error(\"phase must be inputting\");\r\n        }\r\n        if(this._inputtingPhase.value !== inputtingPhase) {\r\n            throw new Error(\"inputting phase must be \" + inputtingPhase);\r\n        }\r\n    }\r\n\r\n    endInputting() {\r\n        this._phase.next(\"processing\");\r\n        this._inputtingPhase.next(undefined);\r\n        this._actionResults.value.length = 0;\r\n        this._actionResults.next(this._actionResults.value);\r\n        this.updateLoop();\r\n    }\r\n\r\n    updateLoop() {\r\n        this.update();\r\n        if(this._phase.value === \"processing\") {\r\n            setTimeout( ()=> this.updateLoop(), UPDATE_INTERVAL);\r\n        }\r\n    }\r\n\r\n    update() {\r\n        if(this._phase.value === \"inputting\") {\r\n            throw new Error(\"You shouldn't call update in inputting state.\");\r\n        }\r\n        while(true) {\r\n            if(this.currentProcessingAction !== undefined) {\r\n                if(this.currentProcessingAction.step()){\r\n                    this._actionResults.value.push(this.currentProcessingAction.getCurrentAttack()!);\r\n                    this._actionResults.next(this._actionResults.value);\r\n                    return;\r\n                }\r\n            }\r\n            this.currentProcessingAction = this._actions.value.shift();\r\n            this._actions.next(this._actions.value);\r\n            if(this.currentProcessingAction === undefined) {\r\n                this.startTurn();\r\n                break;\r\n            }\r\n        }\r\n\r\n        //after action processed, side may change.\r\n        this.dispatchSideChanges();\r\n        \r\n    }\r\n\r\n    cancelTargetSelection(): void {\r\n        this.checkInputting(\"decideTarget\");\r\n        this._inputtingAction = undefined;\r\n        this._inputtingPhase.next(\"decideAction\");\r\n    }\r\n\r\n    cancelActionSelection() : void {\r\n        this.checkInputting(\"decideAction\");\r\n        this._currentInputtingBattler = undefined;\r\n        this._inputtingPhase.next(\"decideBattler\");\r\n    }\r\n\r\n    private startTurn() {\r\n        this._sideA.onTurnStart();\r\n        this._sideB.onTurnStart();\r\n        this._phase.next(\"inputting\");\r\n        this._inputtingPhase.next(\"decideBattler\");\r\n        this.dispatchSideChanges();\r\n    }\r\n\r\n    onActionDeleted(id: number): void {\r\n        this.checkInputting(\"decideBattler\");\r\n        const index = this._actions.value.findIndex((a) => a.id === id);\r\n        const [action] = this._actions.value.splice(index, 1);\r\n        action.user.side.sp += action.data.spCost;\r\n        this._actions.next(this._actions.value);\r\n    }\r\n\r\n    onPositionChange(pos: Position, pos2: Position, isRed: boolean) {\r\n        let side;\r\n        if(isRed) {\r\n            side = this._sideA;\r\n        }\r\n        else {\r\n            side = this._sideB;\r\n        }\r\n        const b1 = side.getBattler(FlatPosToXY(pos));\r\n        const b2 = side.getBattler(FlatPosToXY(pos2));\r\n        if(b1 !== undefined) {\r\n            b1.position = pos2;\r\n        }\r\n        if(b2 !== undefined) {\r\n            b2.position = pos;\r\n        }\r\n        this.dispatchSideChanges();\r\n    }\r\n\r\n    private dispatchSideChanges() {\r\n        this._sidesSubject.next([this._sideA, this._sideB]);\r\n    }\r\n    \r\n}","import { Attribute } from \"../models/Attribute\";\r\n\r\nexport const ATTRIBUTE_NAME = {\r\n    [Attribute.Earth] : \"地\",\r\n    [Attribute.Electric] : \"电\",\r\n    [Attribute.Fire] : \"火\",\r\n    [Attribute.Water] : \"水\",\r\n    [Attribute.Wind] : \"风\"\r\n}\r\n\r\nexport const ICON_NAME = {\r\n    [Attribute.Earth]: \"fa-mountain\",\r\n    [Attribute.Electric]: \"fa-bolt\",\r\n    [Attribute.Fire]: \"fa-fire\",\r\n    [Attribute.Water]: \"fa-tint\",\r\n    [Attribute.Wind]: \"fa-wind\"\r\n}\r\n","import React, { DragEvent } from \"react\";\r\nimport { Battler, Position } from \"../models/Battler\";\r\nimport {ATTRIBUTE_NAME, ICON_NAME} from \"./AttributeName\";\r\n\r\ninterface Props{\r\n    battlers: Battler[];\r\n    isLeft: boolean;\r\n    onBattlerClick: (b: Battler) => void;\r\n    onPositionChange: (pos: Position, pos2: Position) => void;\r\n}\r\n\r\ninterface BriefProps{\r\n    pos: Position;\r\n    battler: Battler | undefined;\r\n    enter: (pos: Position) => void;\r\n    exit: (pos: Position) => void;\r\n    onClick: (b: Battler) => void;\r\n    isLeft: boolean;\r\n    onPositionChange: (pos: Position, pos2: Position) => void;\r\n}\r\n\r\nfunction BattlerBriefView(props: BriefProps){\r\n    const dataTransferKey = props.isLeft ? \"btest/battler_left\" : \"btest/battler_right\";\r\n    const onDragStart = (e: DragEvent) => {\r\n        if(props.battler !== undefined) {\r\n            e.dataTransfer.setData(dataTransferKey, props.pos.toString());\r\n        }\r\n        else{\r\n            e.preventDefault();\r\n        }\r\n    }\r\n    const onDragDrop = (e: DragEvent) => {\r\n        const pos = parseInt(e.dataTransfer.getData(dataTransferKey)) as Position;\r\n        if(pos === props.pos) {\r\n            return;\r\n        }\r\n        e.preventDefault();\r\n        props.onPositionChange(pos, props.pos);\r\n    }\r\n\r\n    const onDragOver = (e: DragEvent) => {\r\n        if(e.dataTransfer.types.indexOf(dataTransferKey) === -1) {\r\n            return;\r\n        }\r\n        e.dataTransfer.dropEffect = \"move\";\r\n        e.preventDefault();\r\n    }\r\n    const dragObj = {draggable:true, onDragStart, onDrop: onDragDrop, onDragOver };\r\n    if(props.battler === undefined) {\r\n        return <td onMouseEnter={() => props.enter(props.pos)} onMouseLeave={() => props.exit(props.pos)} {...dragObj} ></td>\r\n    }\r\n    let attrIcon = null;\r\n    \r\n    const attr = props.battler.attribute;\r\n    if(attr !== null) {\r\n        attrIcon = <span className=\"icon\"><i className={\"fas \" + ICON_NAME[attr]}></i></span>\r\n    }\r\n\r\n    const dp_classname = props.battler.dp === props.battler.maxDp ? \" maxed\" : \"\"\r\n\r\n    return <td onMouseEnter={() => props.enter(props.pos)} onMouseLeave={() => props.exit(props.pos)} onClick={()=>props.onClick(props.battler!)} {...dragObj}>\r\n        <p className=\"battle-brief-view-name\">{props.battler.name}</p>\r\n        <p className={\"battle-brief-view-dp\" + dp_classname}>{props.battler.dp}</p>\r\n        <p className=\"battle-brief-view-icons\">\r\n            {\r\n                props.battler.isDead() ? <span className=\"icon\"><i className=\"fas fa-skull\"></i></span> : null\r\n            }\r\n            {\r\n                props.battler.isWeakState() ? <span className=\"icon\"><i className=\"fas fa-heart-broken\"></i></span> : null\r\n            }\r\n            {\r\n                attrIcon\r\n            }\r\n            \r\n        </p>\r\n        \r\n    </td>\r\n}\r\n\r\nfunction BattlerDetailView(props: {battler: Battler|undefined}){\r\n    if(props.battler === undefined) {\r\n        return <div className=\"detail-view\"></div>\r\n    }\r\n    let attribute = props.battler.attribute;\r\n    console.log(\"BattlerDetailView\", props.battler);\r\n    return <div className=\"detail-view\">\r\n        <p>{props.battler.name}\r\n            {\r\n                props.battler.isDead() ? <span className=\"icon\"><i className=\"fas fa-skull\"></i></span> : null\r\n            }\r\n            {\r\n                props.battler.isWeakState() ? <span className=\"icon\"><i className=\"fas fa-heart-broken\"></i></span> : null\r\n            }\r\n        </p>\r\n        \r\n        <p><b>DP:</b> {props.battler.dp} / {props.battler.maxDp}</p>\r\n        <p><b>抗:</b>{props.battler.defence}</p>\r\n        {\r\n            attribute === null ? null : \r\n            <p><b>{ATTRIBUTE_NAME[attribute]}</b></p>\r\n        }\r\n    </div>\r\n}\r\n\r\nexport class BattleFieldView extends React.Component<Props, {pos: Position | undefined}>{\r\n    constructor(props: Props) {\r\n        super(props);\r\n        this.state = {\r\n            pos: undefined\r\n        }\r\n    }\r\n\r\n    onEnterBattler(pos: Position) {\r\n        this.setState({pos});\r\n    }\r\n\r\n    onExitBattler(pos: Position) {\r\n        this.setState((prevState) => prevState.pos === pos ? {pos: undefined} : {pos: prevState.pos});\r\n    }\r\n\r\n    render() {\r\n        const battlers: {[key in Position]? : Battler} = this.props.battlers.reduce((state: {[p in Position]? : Battler}, b) => {state[b.position] = b; return state;}, {});\r\n        const col = this.props.isLeft ? [0, 1] : [1, 0];\r\n        let currentBattler = this.state.pos === undefined ? undefined : battlers[this.state.pos];\r\n        return <React.Fragment>\r\n            <table className=\"battle-field-view\">\r\n                <tbody>\r\n                    {\r\n                        [0,1,2].map(x => <tr key={x}>\r\n                            {\r\n                                (x === 0 && !this.props.isLeft) ? <td rowSpan={3} className=\"frontline\"><span>前线</span></td> : null\r\n                            }\r\n                            {\r\n                                col.map(y => <BattlerBriefView \r\n                                    pos={(x * 2 + y) as Position} \r\n                                    key={y} \r\n                                    battler={battlers[(x * 2 + y) as Position]} \r\n                                    enter={(b) => this.onEnterBattler(b)} \r\n                                    exit={(b) => this.onExitBattler(b)} \r\n                                    onClick={this.props.onBattlerClick} isLeft={this.props.isLeft} \r\n                                    onPositionChange={this.props.onPositionChange}\r\n                                />)\r\n                            }\r\n                            {\r\n                                (x === 0 && this.props.isLeft) ? <td rowSpan={3} className=\"frontline\"><span>前线</span></td> : null\r\n                            }\r\n                        </tr>)\r\n                    }\r\n                </tbody>\r\n            </table>\r\n            <BattlerDetailView battler={currentBattler} />\r\n        </React.Fragment>\r\n    }\r\n}","import { Side } from \"../models/Side\";\r\nimport React from \"react\";\r\nimport { Battler, Position } from \"../models/Battler\";\r\nimport { BattleFieldView } from \"./BattleFieldView\";\r\n\r\ninterface Props{\r\n    onPositionChange: (pos: Position, pos2: Position) => void;\r\n    side: Side;\r\n    onBattlerClick: (b: Battler) => void;\r\n    isRed: boolean;\r\n}\r\n\r\n\r\nexport function SideView(props: Props) {\r\n    return <div className={\"side-view column is-6\" + (props.isRed ? \" red\" : \" blue\") }>\r\n        <div>\r\n            <p><b>HP:</b> {props.side.hp}</p>\r\n            <p><b>AP:</b> {props.side.sp}</p>\r\n            <BattleFieldView isLeft={props.isRed} battlers={props.side.battlers} onBattlerClick={props.onBattlerClick} onPositionChange={props.onPositionChange}/>\r\n        </div>\r\n    </div>\r\n}\r\n\r\n","import { Battler, Position, XYPosToFlat } from \"../models/Battler\";\r\nimport React from \"react\";\r\n\r\ninterface Props{\r\n    battlersLeft: Battler[];\r\n    battlersRight: Battler[];\r\n    onTargetSelected: (selected: {left: Position[], right: Position[]}) => void;\r\n    onClose: () => void;\r\n}\r\n\r\nfunction BattlerCell(props: {onClick: () => void, pos: Position, highlighted: boolean, name: string}) {\r\n    return <td className={props.highlighted ? \"highlighted\" : \"\"} onClick={() => props.onClick()}>{props.name}</td>\r\n}\r\n\r\nexport class TargetView extends React.Component<Props, {selectedPosition: {left: {[p in Position] : boolean}, right: {[p in Position]: boolean}}}> {\r\n    constructor(props: Props) {\r\n        super(props);\r\n        this.state = {selectedPosition: {left: {0: false, 1: false, 2: false, 3: false, 4: false, 5: false}, right: {0: false, 1: false, 2: false, 3: false, 4: false, 5: false}}};\r\n        this.onTargetSelected = this.onTargetSelected.bind(this);\r\n    }\r\n\r\n    onTargetSelected(pos: Position, isLeft: boolean) {\r\n        this.setState(prevState => {\r\n            {\r\n                const oldPos = {left: {...prevState.selectedPosition.left}, right: {...prevState.selectedPosition.right}};\r\n                if(isLeft) {\r\n                    oldPos.left[pos] = !oldPos.left[pos];\r\n                }\r\n                else{\r\n                    oldPos.right[pos] = !oldPos.right[pos];\r\n                }\r\n                return {selectedPosition: oldPos}\r\n            }\r\n        });\r\n    }\r\n\r\n    onConfirm() {\r\n        const convert = (v: {[p in Position]: boolean}) => Object.entries(v).filter(([x,y]) => y).map(([key, _]) => Number.parseInt(key));\r\n        const left = convert(this.state.selectedPosition.left) as Position[];\r\n        const right = convert(this.state.selectedPosition.right) as Position[];\r\n        this.props.onTargetSelected({left, right});\r\n    }\r\n\r\n    render() {\r\n        let leftBattlersMap: (Battler|null)[] = Array(6).fill(null);\r\n        let rightBattlersMap: (Battler|null)[] = Array(6).fill(null);\r\n        this.props.battlersLeft.forEach(b => leftBattlersMap[b.position] = b);\r\n        this.props.battlersRight.forEach(b => rightBattlersMap[b.position] = b);\r\n        return <div className=\"modal target-view is-active\">\r\n                <div className=\"modal-background\"></div>\r\n                <div className=\"modal-card\">\r\n                    <header className=\"modal-card-head\">\r\n                        <p className=\"modal-card-title\">选择目标</p>\r\n                        <button className=\"delete\" aria-label=\"close\" onClick={()=>this.props.onClose()}></button>\r\n                    </header>\r\n                    <section className=\"modal-card-body\">\r\n                        <table className=\"target-view-table\">\r\n                            <tbody>\r\n                                {\r\n                                    [0,1,2].map(x => \r\n                                        <tr key={x}>\r\n                                            {\r\n                                                [0,1].map(y => {\r\n                                                    let pos = XYPosToFlat(x as 0|1|2, y as 0|1);\r\n                                                    let battler = leftBattlersMap[pos];\r\n                                                    let name = battler === null ? \"\" : battler.name;\r\n                                                    let isHighlighted = this.state.selectedPosition.left[pos];\r\n                                                    return <BattlerCell key={y} onClick={()=>this.onTargetSelected(pos, true)} pos={pos} name={name} highlighted={isHighlighted}/>\r\n                                                })\r\n                                            }\r\n                                            {\r\n                                                x === 0 ? <td rowSpan={3} className=\"target-view-frontline\">前线</td> : null\r\n                                            }\r\n                                            {\r\n                                                [1,0].map(y => {\r\n                                                    let pos = XYPosToFlat(x as 0|1|2, y as 0|1);\r\n                                                    let battler = rightBattlersMap[pos];\r\n                                                    let name = battler === null ? \"\" : battler.name;\r\n                                                    let isHighlighted = this.state.selectedPosition.right[pos];\r\n                                                    return <BattlerCell key={y} onClick={()=>this.onTargetSelected(pos, false)} pos={pos} name={name} highlighted={isHighlighted}/>\r\n                                                })\r\n                                            }\r\n                                        </tr>\r\n                                    )\r\n                                }\r\n                            </tbody>\r\n                        </table>\r\n                    </section>\r\n                    <footer className=\"modal-card-foot\">\r\n                        <button className=\"button is-success\" onClick={() => this.onConfirm()}>确认</button>\r\n                        <button className=\"button\" onClick={() => this.props.onClose()}>取消</button>\r\n                    </footer>\r\n                </div>\r\n            </div>\r\n    }\r\n}","import { Attack } from \"../models/Action\";\r\nimport React from \"react\";\r\n\r\ninterface Props{\r\n    result: Attack;\r\n}\r\nexport function ResultView(props: Props) {\r\n    let attribute = null;\r\n    if(props.result.attributeDamageResult !== undefined) {\r\n        attribute = <React.Fragment>\r\n                <p>{props.result.attributeDamageResult.knockedIntoWeak ? \"打入了弱点状态\" : \"\"} \r\n                 {props.result.attributeDamageResult.dpDamage > 0 ? `造成了${props.result.attributeDamageResult.dpDamage}点DP伤害` : \"\" } </p>\r\n                 {props.result.attributeDamageResult.damageMultipiler === null ? null : <p>伤害提升率上涨了: {props.result.attributeDamageResult.damageMultipiler.multiplierAdded}</p>}\r\n            </React.Fragment>;\r\n    }\r\n    let dpRcovery = null;\r\n    if(props.result.dpRecoveryResult !== 0 && props.result.dpRecoveryResult !== undefined) {\r\n        dpRcovery = <p>DP回复了：{props.result.dpRecoveryResult} </p>\r\n    }\r\n    let spRecovery = null;\r\n    if(props.result.spRecoveryResult !== 0 && props.result.spRecoveryResult !== undefined) {\r\n        spRecovery = <p>SP回复了：{props.result.spRecoveryResult} </p>\r\n    }\r\n    let defenceIncreasement = null;\r\n    if(props.result.defenceIncreaseResult !== 0 && props.result.defenceIncreaseResult !== undefined) {\r\n        defenceIncreasement = <p>防御上涨了：{props.result.defenceIncreaseResult}</p>\r\n    }\r\n    let damage = null;\r\n    if(props.result.hpDamageResult !== undefined) {\r\n        damage = <React.Fragment>\r\n            <p>消耗了{props.result.hpDamageResult.defended}点防御</p>\r\n            <p>造成了 {props.result.hpDamageResult.hpDamage} 点伤害 {props.result.hpDamageResult.isDead ? \"对面已死亡\" : \"\"}</p>\r\n        </React.Fragment>\r\n    }\r\n    return <div className=\"result-view\">\r\n        <p>{props.result.action.user.name} 对 {props.result.target.name} 使用了 {props.result.action.data.name}</p>\r\n        {\r\n            props.result.hitted ? damage : <p>未命中</p>\r\n        }\r\n        {attribute}\r\n        {dpRcovery}\r\n        {spRecovery}\r\n        {defenceIncreasement}\r\n    </div>\r\n}","import { ActionData } from \"../models/ActionData\";\r\nimport React from \"react\";\r\n\r\n\r\ninterface Props{\r\n    action: ActionData;\r\n    onClicked: (action: ActionData) => void;\r\n}\r\n\r\nexport function ActionView(props: Props) {\r\n    return <p className=\"action\" onClick={() => props.onClicked(props.action)}>\r\n        <span className=\"name\">{props.action.name}</span> \r\n        &nbsp;\r\n        <span className=\"sp-cost\"><b>SP消耗:</b>{props.action.spCost}</span>\r\n    </p>\r\n\r\n}","import { ActionData } from \"../models/ActionData\";\r\nimport { ActionView } from \"./ActionView\";\r\nimport React from \"react\";\r\n\r\ninterface Props {\r\n    onActionSelectionClosed: () => void;\r\n    actionDatas: ActionData[];\r\n    onActionClicked: (action: ActionData) => void;\r\n}\r\nexport function ActionSelectionView(props: Props) {\r\n    return <div className=\"actions-selection modal is-active\">  \r\n        <div className=\"modal-background\"></div>\r\n        <div className=\"modal-card\">\r\n            <header className=\"modal-card-head\">\r\n                <p className=\"modal-card-title\">选择行动</p>\r\n                <button className=\"delete\" aria-label=\"close\" onClick={() => props.onActionSelectionClosed()}></button>\r\n            </header>\r\n            <section className=\"modal-card-body\">\r\n                {\r\n                    props.actionDatas.map((action, id) => \r\n                    <ActionView action={action} key={id} onClicked={() => props.onActionClicked(action)}/>)\r\n                }\r\n            </section>\r\n        </div>\r\n    </div>\r\n}","import { Action } from \"../models/Action\";\r\nimport React from \"react\";\r\n\r\ninterface Props{\r\n    actions: Action[];\r\n    onActionDeleted: (id: number) => void;\r\n}\r\nexport function ActionRecordsView(props: Props) {\r\n    return <div className=\"action-records\">\r\n        {\r\n            props.actions.map(action => <p key={action.id} className=\"action-record\">\r\n                <span>{action.user.name}</span>\r\n                <span className=\"action-record-action-use\">使用了</span>\r\n                <span className=\"action-record-action-name\">{action.data.name}</span> \r\n                <button className=\"delete action-record-delete\" onClick={e=>{e.preventDefault(); props.onActionDeleted(action.id)} }>X</button>\r\n            </p>)\r\n        }\r\n    </div>\r\n}","import React from \"react\";\r\nimport { SideData, Side } from \"../models/Side\";\r\nimport { ActionData } from \"../models/ActionData\";\r\nimport { Phase, BattleVM, InputtingPhase } from \"../viewmodels/BattleVM\";\r\nimport { Action, Attack } from \"../models/Action\";\r\nimport { Subscription } from \"rxjs\";\r\nimport { SideView } from \"./SideView\";\r\nimport { TargetView } from \"./TargetView\";\r\nimport { Battler, Position } from \"../models/Battler\";\r\nimport { ResultView } from \"./ResultView\";\r\nimport { ActionSelectionView } from \"./ActionSelectionView\";\r\nimport { ActionRecordsView } from \"./ActionRecordsView\";\r\nimport { Redirect } from \"react-router\";\r\n\r\ninterface Props{\r\n    sideA: SideData | undefined;\r\n    sideB: SideData | undefined;\r\n    actionDatas: ActionData[] | undefined;\r\n}\r\ninterface State {\r\n    phase: Phase;\r\n    inputtingPhase: InputtingPhase;\r\n    actionResults: Attack[];\r\n    actions: Action[];\r\n    sideA: Side | undefined;\r\n    sideB: Side | undefined;\r\n}\r\n\r\nexport class BattleView extends React.Component<Props, State>{\r\n\r\n    private subscription : Subscription | undefined;\r\n    private battleVM : BattleVM | undefined;\r\n    private previousProps : Props | undefined;\r\n\r\n    constructor(props: Props) {\r\n        super(props);\r\n        this.state = {\r\n            phase: undefined,\r\n            inputtingPhase: undefined,\r\n            actionResults: [],\r\n            actions: [],\r\n            sideA: undefined,\r\n            sideB: undefined\r\n        }\r\n        this.onActionClicked = this.onActionClicked.bind(this);\r\n        this.onTargetSelected = this.onTargetSelected.bind(this);\r\n        this.onBattlerSelected = this.onBattlerSelected.bind(this);\r\n        this.onTargetSelectionClosed = this.onTargetSelectionClosed.bind(this);\r\n        this.onActionSelectionClosed = this.onActionSelectionClosed.bind(this);\r\n        this.onActionDeleted = this.onActionDeleted.bind(this);\r\n        this.onPositionChange = this.onPositionChange.bind(this);\r\n    }\r\n\r\n    recreateBattleVM() {\r\n        if(this.previousProps !== this.props){\r\n\r\n            this.previousProps = this.props;\r\n\r\n            if(this.subscription !== undefined) {\r\n                this.subscription!.unsubscribe();\r\n                this.subscription = undefined;\r\n            }\r\n            \r\n            this.battleVM = undefined;\r\n            if(this.props.sideA !== undefined && this.props.sideB !== undefined) {\r\n                this.battleVM = new BattleVM(this.props.sideA, this.props.sideB);\r\n                this.registerSubscriptions();\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    registerSubscriptions() {\r\n        if(this.subscription === undefined && this.battleVM !== undefined) {\r\n            let d = [];\r\n            d[0] = this.battleVM!.phase.subscribe(p => this.setState({phase: p}));\r\n            d[1] = this.battleVM!.inputtingPhase.subscribe(p => this.setState({inputtingPhase: p}));\r\n            d[2] = this.battleVM!.actionResults.subscribe(r => this.setState({actionResults: r}));\r\n            d[3] = this.battleVM!.actions.subscribe(a => this.setState({actions: a}));\r\n            d[4] = this.battleVM!.sides.subscribe(([sideA, sideB]) => {\r\n                console.log(\"side changed\", sideA);\r\n                this.setState({sideA, sideB});\r\n            });\r\n            this.subscription = new Subscription();\r\n            d.forEach(d => this.subscription!.add(d));\r\n        }\r\n    }\r\n\r\n    //as per React's documention, it is recommended to listen changes here.\r\n    componentDidMount() {\r\n        this.registerSubscriptions();\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        this.registerSubscriptions();\r\n    }\r\n\r\n    onActionClicked(action: ActionData) {\r\n        this.battleVM!.addAction(action);\r\n    }\r\n\r\n    onTargetSelected(targets: {left: Position[], right: Position[]}) {\r\n        this.battleVM!.setTargets(targets);\r\n    }\r\n\r\n    onBattlerSelected(battler: Battler) {\r\n        this.battleVM!.selectBattler(battler);\r\n    }\r\n\r\n    onEndTurn() {\r\n        this.battleVM!.endInputting();\r\n    }\r\n\r\n    onTargetSelectionClosed() {\r\n        this.battleVM!.cancelTargetSelection();\r\n    }\r\n\r\n    onActionSelectionClosed() {\r\n        this.battleVM!.cancelActionSelection();\r\n    }\r\n\r\n    onActionDeleted(id: number) {\r\n        this.battleVM!.onActionDeleted(id);\r\n    }\r\n\r\n    onPositionChange(pos: Position, pos2: Position, isRed: boolean) {\r\n        this.battleVM!.onPositionChange(pos, pos2, isRed);\r\n    }\r\n\r\n    render() {\r\n        this.recreateBattleVM();\r\n        if(this.battleVM === undefined) {\r\n            return <Redirect to=\"/\"/>\r\n        }\r\n        let actions = null;\r\n        console.log(this.state.inputtingPhase);\r\n        if(this.props.actionDatas !== undefined && this.state.inputtingPhase === \"decideAction\") {\r\n            actions = <ActionSelectionView onActionClicked={this.onActionClicked} actionDatas={this.props.actionDatas} onActionSelectionClosed={this.onActionSelectionClosed}\r\n            />\r\n        }\r\n        let target = null;\r\n        if(this.state.inputtingPhase === \"decideTarget\") {\r\n            target = <TargetView battlersLeft={this.state.sideA!.battlers} battlersRight={this.state.sideB!.battlers} onTargetSelected={this.onTargetSelected} onClose={this.onTargetSelectionClosed}/>\r\n        }\r\n        if(this.state.sideA === undefined || this.state.sideB === undefined) {\r\n            return <></>;\r\n        }\r\n        return <div className=\"container battle-view\">\r\n            <div>\r\n                水>火>风>土>电>水\r\n            </div>\r\n            <div className=\"columns\">\r\n                <SideView isRed={true} side={this.state.sideA!} onBattlerClick={this.onBattlerSelected} onPositionChange={(p1,p2) => this.onPositionChange(p1, p2, true)}/>\r\n                <SideView isRed={false} side={this.state.sideB!} onBattlerClick={this.onBattlerSelected} onPositionChange={(p1,p2) => this.onPositionChange(p1, p2, false)}/>\r\n            </div>\r\n            <ActionRecordsView actions={this.state.actions} onActionDeleted={this.onActionDeleted} />\r\n            <div className=\"control\">\r\n                {\r\n                    this.state.phase === \"inputting\" ? <button className=\"button\" onClick={() => this.onEndTurn()}>结束回合</button> : null\r\n                }\r\n            </div>\r\n            \r\n            <div className={`modal-container ${actions !== null || target !== null ? \"show\" : \"\"}`}>\r\n                {\r\n                    actions !== null ? actions : <React.Fragment />\r\n                }\r\n                {\r\n                    target !== null ? target : <React.Fragment />\r\n                }\r\n\r\n            </div>\r\n            {\r\n                this.state.actionResults.map((result, key) => <ResultView key={key} result={result}/>)\r\n            }\r\n        </div>\r\n    }\r\n}","import React from \"react\";\r\nimport { EditView } from \"./EditView\";\r\nimport { SideData } from \"../models/Side\";\r\nimport { ActionData } from \"../models/ActionData\";\r\nimport { BattleView } from \"./BattleView\";\r\nimport { Route } from \"react-router-dom\";\r\n\r\nexport class AppView extends React.Component<{}, {sideA: SideData | undefined, sideB: SideData | undefined, actions: ActionData[]}>{\r\n\r\n    constructor(props: {}) {\r\n        super(props);\r\n        this.state = {sideA: undefined, sideB: undefined, actions: []};\r\n        this.onComplete = this.onComplete.bind(this);\r\n    }\r\n\r\n    onComplete(sideA:SideData, sideB: SideData, actions: ActionData[]) {\r\n        this.setState({sideA: sideA, sideB: sideB, actions: actions});\r\n    }\r\n\r\n    render() {\r\n        return<div>\r\n            <Route render={props => <EditView onComplete={this.onComplete} {...props} />} path=\"/\" exact />\r\n            <Route render={props => <BattleView {...props} sideA={this.state.sideA} sideB={this.state.sideB} actionDatas={this.state.actions} />} path=\"/battle\"  />\r\n        </div>\r\n    }\r\n}","import React from 'react';\nimport './App.css';\nimport { AppView } from './views/AppView';\n\nconst App: React.FC = () => {\n    \n    return <AppView  />\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {HashRouter as Router } from \"react-router-dom\";\nimport \"bulma\";\nimport \"@fortawesome/fontawesome-free/css/all.css\";\n\nReactDOM.render(<Router><App /></Router>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}