{"version":3,"sources":["models/Attribute.ts","views/Field.tsx","views/AttributeName.ts","views/BattlerInfoView.tsx","models/Battler.ts","views/BattlerPositionView.tsx","views/SideInfoView.tsx","views/ActionInfoView.tsx","views/LoadView.tsx","views/EditView.tsx","models/Side.ts","models/Action.ts","viewmodels/BattleVM.ts","views/BattleFieldView.tsx","views/SideView.tsx","views/TargetView.tsx","views/ResultView.tsx","views/ActionView.tsx","views/ActionSelectionView.tsx","views/ActionRecordsView.tsx","views/BattleView.tsx","views/AppView.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["Attribute","Field","props","label","inputProps","Object","objectWithoutProperties","react_default","a","createElement","className","assign","ATTRIBUTE_NAME","_ATTRIBUTE_NAME","defineProperty","Earth","Electric","Fire","Water","Wind","ICON_NAME","_ICON_NAME","BattlerInfoView","_React$Component","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleDpChange","bind","assertThisInitialized","handleNameChange","inherits","createClass","key","value","e","onBattlerChanged","objectSpread","battler","dp","Number","parseInt","target","name","attribute","attributeResistances","_this2","type","onChange","map","handleAttributeChange","placeholder","onClick","onBattlerDeleted","React","Component","Battler","side","data","position","id","maxDp","currentAttribute","weakState","thisTurnDpDamaged","defence","point","attributeDamage","result","dpDamage","attributePointAttached","knockedIntoWeak","resist","dpRecovery","oldDp","defenceIncrease","console","log","hpDamage","defended","applyHpDamage","FlatPosToXY","pos","Math","floor","XYPosToFlat","x","y","BattlerPositionView","ys","isLeft","rowSpan","battlerPositions","selected","undefined","toString","align","onBattlerPositionChanged","changeHandler","battlers","b","SideInfoView","maxBattlerId","handleHpChange","handleSpChange","addBattler","onSideChanged","hp","sp","toConsumableArray","index","findIndex","_res","push","filter","positions","BattlerInfoView_BattlerInfoView","handleBattlerChanged","deleteBattler","p","i","ActionInfoView","onAttributeChanged","onAttributeDamageChanged","onHpDamageChanged","onSpCostChanged","onNameChanged","onDpRecoveryChanged","onSpRecoveryChanged","onDefenceIncreaseChanged","action","onActionChanged","spCost","spRecovery","onActionDeleted","LoadView","aria-label","onClosed","saves","onLoad","onDelete","stopPropagation","META_ITEM","EditView","maxActionId","state","side2","actions","loadShowing","currentPage","handleSideChanged","handleSide2Changed","onAddAction","onComplete","migrateSaveV2_TO_V3","migrateSaveV3_TO_V4","setState","arr","v","splice","savename","window","prompt","Date","toLocaleString","trim","names","stateString","JSON","stringify","namesString","localStorage","getItem","parse","confirm","setItem","alert","oldSaveItem","newSaveItem","convert","oldNameString","oldSaves","newSave","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","next","done","save","saveString","saveData","err","return","removeItem","newNameString","newNames","_i","_newSave","length","indexOf","convertSide","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","migrateSave","oldSave","forEach","nameString","_this3","dataString","_this4","Fragment","preventDefault","SideInfoView_SideInfoView","ActionInfoView_ActionInfoView","onRemoveAction","react_router_dom","to","onSave","onLoadCanceled","onLoadSelected","onDeleteSave","Side","opponent","damageMultiplier","thisActionDamageMultiplier","damageMultiplierDelta","entries","_ref","_ref2","slicedToArray","find","flatPosition","isDead","oldSp","ret","multiplierAdded","onTurnStart","Action","ad","user","targets","attack","targetPoints","getBattler","canUse","concat","fetchBattlers","self","onActionEnd","t","shift","Attack","hpDamageResult","spRecoveryResult","dpRecoveryResult","defenceIncreaseResult","damageMultiplierResult","attributeDamageResult","applySpRecovery","applyDpRecovery","applyDefenceIncrease","getCurrentAttribute","isWeakState","onDamageWeakState","applyAttributeDamage","BattleVM","sideA","sideB","_sideA","_sideB","_actions","_phase","_sidesSubject","_inputtingPhase","_actionResults","currentProcessingAction","_inputtingAction","_currentInputtingBattler","_nextActionId","setOpponent","BehaviorSubject","startTurn","checkInputting","actionTargets","left","right","inputtingPhase","Error","updateLoop","update","setTimeout","step","getCurrentAttack","dispatchSideChanges","_this$_actions$value$","pos2","isRed","b1","b2","get","BattlerBriefView","dataTransferKey","dragObj","draggable","onDragStart","dataTransfer","setData","onDrop","getData","onPositionChange","onDragOver","types","dropEffect","onMouseEnter","enter","onMouseLeave","exit","attrIcon","attr","BattlerDetailView","getAttributePoint","BattleFieldView","prevState","reduce","col","currentBattler","onEnterBattler","onExitBattler","onBattlerClick","SideView","BattleFieldView_BattleFieldView","BattlerCell","highlighted","TargetView","selectedPosition","0","1","2","3","4","5","onTargetSelected","oldPos","_ref3","_ref4","leftBattlersMap","Array","fill","rightBattlersMap","battlersLeft","battlersRight","onClose","isHighlighted","onConfirm","ResultView","damageMultipiler","dpRcovery","defenceIncreasement","ActionView","onClicked","ActionSelectionView","onActionSelectionClosed","actionDatas","onActionClicked","ActionRecordsView","BattleView","subscription","battleVM","previousProps","phase","actionResults","onBattlerSelected","onTargetSelectionClosed","unsubscribe","registerSubscriptions","d","subscribe","r","sides","Subscription","add","addAction","setTargets","selectBattler","endInputting","cancelTargetSelection","cancelActionSelection","recreateBattleVM","react_router","TargetView_TargetView","p1","p2","onEndTurn","AppView","render","EditView_EditView","path","exact","BattleView_BattleView","App","AppView_AppView","Boolean","location","hostname","match","ReactDOM","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.2271e6b7.chunk.js","sourcesContent":["export enum Attribute{\r\n    Fire, Water, Earth, Wind, Electric\r\n}","import React from \"react\";\r\ninterface Props{\r\n    label: string;\r\n    [x:string] :any;\r\n}\r\nexport function Field(props: Props) {\r\n    let {label, ...inputProps} = props;\r\n    return <div className=\"field is-horizontal\">\r\n        <div className=\"field-label\">\r\n            <label className=\"label\">{label}</label>\r\n        </div>\r\n        <div className=\"field-body\">\r\n            <div className=\"field\">\r\n                <div className=\"control\">\r\n                    <input className=\"input\" {...inputProps}/>\r\n                </div>\r\n                \r\n            </div>\r\n        </div>\r\n        \r\n    </div>\r\n}","import { Attribute } from \"../models/Attribute\";\r\n\r\nexport const ATTRIBUTE_NAME = {\r\n    [Attribute.Earth] : \"地\",\r\n    [Attribute.Electric] : \"电\",\r\n    [Attribute.Fire] : \"火\",\r\n    [Attribute.Water] : \"水\",\r\n    [Attribute.Wind] : \"风\"\r\n}\r\n\r\nexport const ICON_NAME = {\r\n    [Attribute.Earth]: \"fa-mountain\",\r\n    [Attribute.Electric]: \"fa-bolt\",\r\n    [Attribute.Fire]: \"fa-fire\",\r\n    [Attribute.Water]: \"fa-tint\",\r\n    [Attribute.Wind]: \"fa-wind\"\r\n}\r\n","import React, { ChangeEvent } from \"react\";\r\nimport { Attribute } from \"../models/Attribute\";\r\nimport { BattlerData, Position } from \"../models/Battler\";\r\nimport { Field } from \"./Field\";\r\nimport {ATTRIBUTE_NAME, ICON_NAME} from \"./AttributeName\";\r\n\r\ninterface Props{\r\n    isLeft: boolean;\r\n    battler: BattlerData;\r\n    onBattlerChanged: (battler: BattlerData) => void;\r\n    onBattlerDeleted: () => void\r\n}\r\n\r\nexport class BattlerInfoView extends React.Component<Props, {}>{\r\n    constructor(props: Props) {\r\n        super(props);\r\n        this.handleDpChange = this.handleDpChange.bind(this);\r\n        this.handleNameChange = this.handleNameChange.bind(this);\r\n    }\r\n\r\n    handleDpChange(e: ChangeEvent<HTMLInputElement>) {\r\n        this.props.onBattlerChanged({...this.props.battler, dp: Number.parseInt(e.target.value)});\r\n    }\r\n\r\n    handleNameChange(e: ChangeEvent<HTMLInputElement>) {\r\n        this.props.onBattlerChanged({...this.props.battler, name: e.target.value});\r\n    }\r\n\r\n    handleAttributeChange(attribute: Attribute, e: ChangeEvent<HTMLInputElement>) {\r\n        const attributeResistances = {...this.props.battler.attributeResistances, [attribute]: Number.parseInt(e.target.value)};\r\n        this.props.onBattlerChanged({...this.props.battler, attributeResistances});\r\n    }\r\n\r\n    render() {\r\n        return <div className=\"battler-info-view\">\r\n            <Field label=\"DP:\" type=\"number\" onChange={this.handleDpChange} value={this.props.battler.dp} />\r\n            <Field label=\"名称:\" type=\"text\" onChange={this.handleNameChange} value={this.props.battler.name} />\r\n        \r\n            <div className=\"field is-horizontal\">\r\n                <div className=\"field-label\">\r\n                    <label className=\"label\">抗性</label>\r\n                </div>\r\n                <div className=\"field-body\">\r\n                    {\r\n                        [Attribute.Earth, Attribute.Electric, Attribute.Fire, Attribute.Water, Attribute.Wind].map((attribute: Attribute) => {\r\n                            return <div className=\"field\" key={attribute}>\r\n                                <p className=\"control has-icons-left\">\r\n                                    <input type=\"number\" className=\"input\" value={this.props.battler.attributeResistances[attribute]} onChange={this.handleAttributeChange.bind(this, attribute)} placeholder={ATTRIBUTE_NAME[attribute]}/>\r\n                                    <span className=\"icon is-small is-left\">\r\n                                        <i className={\"fas \" + ICON_NAME[attribute]}></i>\r\n                                    </span>\r\n                                </p>\r\n                            </div>\r\n                        })\r\n                    }\r\n                </div>\r\n            </div>\r\n        \r\n            <div className=\"is-grouped-right is-grouped field\">\r\n                <div className=\"control\">\r\n                    <button className=\"button is-danger\" onClick={this.props.onBattlerDeleted}>删除</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    }\r\n\r\n    \r\n}","import {Attribute} from \"./Attribute\"\r\nimport { Side, HpDamageResult as SideHpDamageResult } from \"./Side\";\r\nexport class Battler{\r\n    maxDp: number;\r\n    dp: number;\r\n    attributeResistances: {[key in Attribute]: number}\r\n    side: Side;\r\n    private currentAttribute: {attribute: Attribute | null, point: number}\r\n    private weakState: boolean;\r\n    private thisTurnDpDamaged: boolean;\r\n    position: Position;\r\n    name: string;\r\n    id: number;\r\n    defence: number;\r\n\r\n    constructor(side: Side, data: BattlerData, position: Position, id: number) {\r\n        this.position = position;\r\n        this.side = side;\r\n        this.dp = data.dp;\r\n        this.maxDp = data.dp;\r\n        this.attributeResistances = data.attributeResistances;\r\n        this.currentAttribute = {attribute: null, point: 0};\r\n        this.weakState = false;\r\n        this.thisTurnDpDamaged = false;\r\n        this.name = data.name;\r\n        this.id = id;\r\n        this.defence = 0;\r\n    }\r\n\r\n    getCurrentAttribute() : Attribute | null { \r\n        return this.currentAttribute.attribute;\r\n    }\r\n\r\n    getAttributePoint(): number {\r\n        return this.currentAttribute.point;\r\n    }    \r\n\r\n    applyAttributeDamage(attribute: Attribute, attributeDamage: number): AttributeDamageResult{\r\n        let result: AttributeDamageResult = {dpDamage: 0, attributePointAttached: 0, knockedIntoWeak: false, attribute: null};\r\n        \r\n        if(this.weakState && !this.thisTurnDpDamaged && attribute === this.currentAttribute.attribute) {\r\n            result.dpDamage = 1;\r\n            this.dp -= 1;\r\n            this.thisTurnDpDamaged = true;\r\n        }\r\n        if(this.weakState) {\r\n            //in weak state, attribute point won't increase anymore.\r\n            return result;\r\n        }\r\n        result.attribute = attribute;\r\n        result.attributePointAttached = attributeDamage;\r\n        if(this.currentAttribute.attribute === attribute) {\r\n            this.currentAttribute.point += attributeDamage;\r\n        }\r\n        else{\r\n            this.currentAttribute.attribute = attribute;\r\n            this.currentAttribute.point = attributeDamage;\r\n        }\r\n        let resist = this.attributeResistances[attribute];\r\n        if(resist !== 0 && resist <= this.currentAttribute.point) {\r\n            this.weakState = true;\r\n            this.currentAttribute.point = 0;\r\n            result.knockedIntoWeak = true;\r\n        }\r\n        return result;\r\n    }\r\n\r\n    applyDpRecovery(dpRecovery: number): DpRecoveryResult {\r\n        const oldDp = this.dp;\r\n        this.dp += dpRecovery;\r\n        if(this.dp >= this.maxDp){\r\n            this.dp = this.maxDp;\r\n        }\r\n        if(this.dp < 0) {\r\n            this.dp = 0;\r\n        }\r\n        \r\n        return this.dp - oldDp;\r\n    }\r\n\r\n    applyDefenceIncrease(defenceIncrease: number): DefenceIncreaseResult {\r\n        this.defence += defenceIncrease;\r\n        console.log(this, defenceIncrease);\r\n        return defenceIncrease;\r\n    }\r\n\r\n    applyHpDamage(hpDamage: number): HpDamageResult {\r\n        let defended;\r\n        if(this.defence < hpDamage) {\r\n            defended = this.defence;\r\n            hpDamage -= this.defence;\r\n            this.defence = 0;\r\n            \r\n        }\r\n        else{\r\n            this.defence -= hpDamage;\r\n            defended = hpDamage;\r\n            hpDamage = 0;\r\n        }\r\n        return {...this.side.applyHpDamage(hpDamage), defended};\r\n        \r\n    }\r\n\r\n    onTurnStart() : void{\r\n        if(this.thisTurnDpDamaged) {\r\n            this.weakState = false;\r\n        }\r\n        this.thisTurnDpDamaged = false;\r\n        this.defence = 0;\r\n    }\r\n\r\n    isDead() : boolean {\r\n        return this.dp <= 0;\r\n    }\r\n\r\n    isWeakState(): boolean {\r\n        return this.weakState;\r\n    }\r\n}\r\nexport interface AttributeDamageResult{\r\n    knockedIntoWeak: boolean;\r\n    dpDamage: number;\r\n    attribute: Attribute | null;\r\n    attributePointAttached: number;\r\n}\r\nexport interface BattlerData{\r\n    name: string;\r\n    dp: number;\r\n    id: number;\r\n    attributeResistances: {[key in Attribute]: number};\r\n}\r\n\r\nexport type Position = 0|1|2|3|4|5;\r\nexport function FlatPosToXY(pos: Position) : [0|1|2, 0|1]{\r\n    return [Math.floor(pos / 2), pos % 2] as [0|1|2, 0|1];\r\n}\r\n\r\nexport function XYPosToFlat(x: 0|1|2, y: 0|1): Position {\r\n    return x * 2 + y as Position;\r\n}\r\n\r\nexport interface HpDamageResult extends SideHpDamageResult{\r\n    defended: number;\r\n}\r\n\r\nexport type DpRecoveryResult = number;\r\nexport type DefenceIncreaseResult = number;","import { Position, XYPosToFlat, BattlerData } from \"../models/Battler\";\r\nimport React, { ChangeEvent } from \"react\";\r\n\r\ninterface Props{\r\n    battlers: BattlerData[];\r\n    battlerPositions: {[p in Position]?: number | undefined};\r\n    onBattlerPositionChanged: (pos: Position, id: number | undefined) => void;\r\n    isLeft: boolean;\r\n}\r\nexport function BattlerPositionView(props: Props) {\r\n    const ys = props.isLeft ? [0, 1] : [1, 0];\r\n    const changeHandler = (pos: Position, e: ChangeEvent<HTMLSelectElement>) => {\r\n        const id = e.target.value === \"unselect\" ? undefined : parseInt(e.target.value);\r\n        props.onBattlerPositionChanged(pos, id);\r\n    }\r\n    return <div>\r\n        <table className=\"battler-position-view\">\r\n            <tbody>{\r\n                [0,1,2].map(x => <tr key={x}>\r\n                    {\r\n                        (x === 0 && !props.isLeft) ? <td rowSpan={3} className=\"frontline\">前线</td> : null\r\n                    }\r\n                    {\r\n                        ys.map(y => {\r\n                            const pos = XYPosToFlat(x as 0|1|2, y as 0|1);\r\n                            const id = props.battlerPositions[pos];\r\n                            const selected = id === undefined ? \"unselect\" : id.toString();\r\n                            return <td key={y} align=\"center\">\r\n                                <div className=\"select\">\r\n                                    <select value={selected} onChange={e => changeHandler(pos, e)}>\r\n                                        <option value=\"unselect\"></option> \r\n                                        {\r\n                                            props.battlers.map(b => <option key={b.id} value={b.id.toString()}>\r\n                                                {b.name}\r\n                                            </option>)\r\n                                        }\r\n                                    </select>\r\n                                </div>\r\n                            </td>\r\n                        })\r\n                    }\r\n                    {\r\n                        (x === 0 && props.isLeft) ? <td rowSpan={3} className=\"frontline\">前线</td> : null\r\n                    }\r\n                </tr>)\r\n            }</tbody>\r\n        </table>\r\n    </div>\r\n}","import React, { ReactNode, ChangeEvent } from \"react\";\r\nimport { BattlerData, Position } from \"../models/Battler\";\r\nimport { BattlerInfoView } from \"./BattlerInfoView\";\r\nimport { SideData } from \"../models/Side\";\r\nimport { Attribute } from \"../models/Attribute\";\r\nimport { Field } from \"./Field\";\r\nimport { BattlerPositionView } from \"./BattlerPositionView\";\r\n\r\ninterface Props{\r\n    isLeft: boolean;\r\n    side: SideData;\r\n    onSideChanged: (side: SideData) => void;\r\n}\r\n\r\nexport class SideInfoView extends React.Component<Props, {}>{\r\n\r\n    maxBattlerId: number;\r\n\r\n    constructor(props : Props) {\r\n        super(props);\r\n        this.handleHpChange = this.handleHpChange.bind(this);\r\n        this.handleSpChange = this.handleSpChange.bind(this);\r\n        this.addBattler = this.addBattler.bind(this);\r\n        this.maxBattlerId = 0;\r\n    }\r\n\r\n    handleHpChange(e: ChangeEvent<HTMLInputElement>) {\r\n        this.props.onSideChanged({...this.props.side, hp: Number.parseInt(e.target.value)});\r\n    }\r\n\r\n    handleSpChange(e: ChangeEvent<HTMLInputElement>) {\r\n        this.props.onSideChanged({...this.props.side, sp: Number.parseInt(e.target.value)});\r\n    }\r\n\r\n    handleBattlerChanged(id: number, battler: BattlerData) {\r\n        let battlers = [...this.props.side.battlers];\r\n        const index = battlers.findIndex(b => b.id === id);\r\n        battlers[index] = battler;\r\n        this.props.onSideChanged({...this.props.side, battlers});\r\n    }\r\n\r\n    addBattler() {\r\n        let battlers = [...this.props.side.battlers];\r\n        let res = {[Attribute.Earth]: 0, [Attribute.Electric]: 0, [Attribute.Fire]: 0, [Attribute.Water]: 0, [Attribute.Wind]: 0};\r\n        let b: BattlerData = {dp: 0, name: \"\", attributeResistances: res, id: this.maxBattlerId++};\r\n        battlers.push(b);\r\n        this.props.onSideChanged({...this.props.side, battlers});\r\n    }\r\n\r\n    deleteBattler(id: number) {\r\n        let battlers = this.props.side.battlers.filter(b => b.id !== id);\r\n        const positions: any = this.props.side.battlerPositions;\r\n        for(let key in positions) {\r\n            if(positions[key] === id) {\r\n                positions[key] = undefined;\r\n            }\r\n        }\r\n        this.props.onSideChanged({...this.props.side, battlers, battlerPositions: positions});\r\n    }\r\n\r\n    onBattlerPositionChanged(pos: Position, id: number | undefined): void {\r\n        const battlerPositions = {...this.props.side.battlerPositions, [pos]: id};\r\n        console.log(battlerPositions);\r\n        this.props.onSideChanged({...this.props.side, battlerPositions});\r\n    }\r\n\r\n    render(): ReactNode{\r\n        return <div className=\"column\">\r\n            <div className=\"side-info-view\">\r\n                <Field label=\"HP:\" className=\"input\" type=\"number\" onChange={this.handleHpChange} value={this.props.side.hp}/>\r\n                <Field label=\"AP:\" className=\"input\" type=\"number\" onChange={this.handleSpChange} value={this.props.side.sp}/>\r\n                <div className=\"battlers-view\">\r\n                    <label className=\"label\">角色：</label>\r\n                    {\r\n                        this.props.side.battlers.map((b) => {\r\n                            return <BattlerInfoView isLeft={this.props.isLeft} battler={b} onBattlerChanged={this.handleBattlerChanged.bind(this, b.id) } onBattlerDeleted={() => this.deleteBattler(b.id)} key={b.id}/>\r\n                        })\r\n                    }\r\n                    <button className=\"button\" onClick={this.addBattler}>添加角色</button>\r\n                </div>\r\n                <BattlerPositionView battlers={this.props.side.battlers} battlerPositions={this.props.side.battlerPositions} isLeft={this.props.isLeft} onBattlerPositionChanged={(p,i) => this.onBattlerPositionChanged(p,i)} />\r\n            </div>\r\n        </div>\r\n    }\r\n    \r\n}","import React, { ChangeEvent } from \"react\";\r\nimport { ActionData } from \"../models/ActionData\";\r\nimport { Attribute } from \"../models/Attribute\";\r\nimport { Field } from \"./Field\";\r\n\r\ninterface Props{\r\n    action: ActionData;\r\n    onActionChanged: (action: ActionData) => void;\r\n    onActionDeleted: () => void;\r\n}\r\n\r\nexport class ActionInfoView extends React.Component<Props> {\r\n\r\n    constructor(props: Props) {\r\n        super(props);\r\n        this.onAttributeChanged = this.onAttributeChanged.bind(this);\r\n        this.onAttributeDamageChanged = this.onAttributeDamageChanged.bind(this);\r\n        this.onHpDamageChanged = this.onHpDamageChanged.bind(this);\r\n        this.onSpCostChanged = this.onSpCostChanged.bind(this);\r\n        this.onNameChanged = this.onNameChanged.bind(this);\r\n        this.onDpRecoveryChanged = this.onDpRecoveryChanged.bind(this);\r\n        this.onSpRecoveryChanged = this.onSpRecoveryChanged.bind(this);\r\n        this.onDefenceIncreaseChanged = this.onDefenceIncreaseChanged.bind(this);\r\n    }\r\n\r\n    onAttributeChanged(e: ChangeEvent<HTMLSelectElement>) {\r\n        let action = {...this.props.action, attribute: Number.parseInt(e.target.value)};\r\n        this.props.onActionChanged(action);\r\n    }\r\n\r\n    onHpDamageChanged(e: ChangeEvent<HTMLInputElement>) {\r\n        let action = {...this.props.action, hpDamage: Number.parseInt(e.target.value)};\r\n        this.props.onActionChanged(action);\r\n    }\r\n\r\n    onSpCostChanged(e: ChangeEvent<HTMLInputElement>) {\r\n        let action = {...this.props.action, spCost: Number.parseInt(e.target.value)};\r\n        this.props.onActionChanged(action);\r\n    }\r\n\r\n    onAttributeDamageChanged(e: ChangeEvent<HTMLInputElement>) {\r\n        let action = {...this.props.action, attributeDamage: Number.parseInt(e.target.value)};\r\n        this.props.onActionChanged(action);\r\n    }\r\n\r\n    onNameChanged(e: ChangeEvent<HTMLInputElement>) {\r\n        let action = {...this.props.action, name: e.target.value};\r\n        this.props.onActionChanged(action);\r\n    }\r\n\r\n    onDpRecoveryChanged(e: ChangeEvent<HTMLInputElement>) {\r\n        let action = {...this.props.action, dpRecovery: Number.parseInt(e.target.value)};\r\n        this.props.onActionChanged(action);\r\n    }\r\n\r\n    onSpRecoveryChanged(e: ChangeEvent<HTMLInputElement>) {\r\n        let action = {...this.props.action, spRecovery: Number.parseInt(e.target.value)};\r\n        this.props.onActionChanged(action);\r\n    }\r\n\r\n    onDefenceIncreaseChanged(e: ChangeEvent<HTMLInputElement>) {\r\n        let action = {...this.props.action, defenceIncrease: Number.parseInt(e.target.value)};\r\n        this.props.onActionChanged(action);\r\n    }\r\n    \r\n    render() {\r\n        return <div className=\"action-view\">\r\n            <Field label=\"名称\"  type=\"text\" value={this.props.action.name} onChange={this.onNameChanged} />\r\n            <Field label=\"HP伤害\" type=\"number\" value={this.props.action.hpDamage} onChange={this.onHpDamageChanged} />\r\n            <Field label=\"AP消耗\" type=\"number\" value={this.props.action.spCost} onChange={this.onSpCostChanged} />\r\n            <Field label=\"属性伤害\" type=\"number\" value={this.props.action.attributeDamage} onChange={this.onAttributeDamageChanged} />\r\n            <Field label=\"DP回复\" type=\"number\" value={this.props.action.dpRecovery} onChange={this.onDpRecoveryChanged} />\r\n            <Field label=\"AP回复\" type=\"number\" value={this.props.action.spRecovery} onChange={this.onSpRecoveryChanged} />\r\n            <Field label=\"防御值增加\" type=\"number\" value={this.props.action.defenceIncrease} onChange={this.onDefenceIncreaseChanged} />\r\n            <div className=\"field is-horizontal\">\r\n                <div className=\"field-label is-normal\">\r\n                    <label className=\"label\">属性</label>\r\n                </div>\r\n                <div className=\"field-body\">\r\n                    <div className=\"field\">\r\n                        <div className=\"control\">\r\n                            <div className=\"select is-fullwidth\">\r\n                                <select onChange={this.onAttributeChanged} value={this.props.action.attribute}>\r\n                                    <option value={Attribute.Earth}>土</option>\r\n                                    <option value={Attribute.Electric}>电</option>\r\n                                    <option value={Attribute.Fire}>火</option>\r\n                                    <option value={Attribute.Water}>水</option>\r\n                                    <option value={Attribute.Wind}>风</option>\r\n                                </select> \r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"is-grouped-right is-grouped field\">\r\n                <div className=\"control\">\r\n                    <button className=\"button is-danger\" onClick={this.props.onActionDeleted}>删除</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    }\r\n}","import React from \"react\";\r\ninterface Props{\r\n    saves: string[];\r\n    onClosed: () => void;\r\n    onLoad: (name: string) => void;\r\n    onDelete: (name: string) => void;\r\n}\r\n\r\nexport function LoadView(props: Props) {\r\n    return <div className=\"modal is-active\">\r\n        <div className=\"modal-background\"></div>\r\n        <div className=\"modal-card\">\r\n            <header className=\"modal-card-head\">\r\n                <p className=\"modal-card-title\">\r\n                    读取存档\r\n                </p>\r\n                <button className=\"delete\" aria-label=\"close\" onClick={props.onClosed}></button>\r\n            </header>\r\n            <section className=\"modal-card-body\">\r\n                <div className=\"content\">\r\n                    <ol>\r\n                        {\r\n                            props.saves.map((name, id) => \r\n                                <li className=\"load-name\" key={id} onClick={() => props.onLoad(name)}><span>{name}</span> <button className=\"delete\" onClick={(e) => {props.onDelete(name); e.stopPropagation();}}></button></li>\r\n                            )\r\n                        }\r\n                    </ol>\r\n                </div>\r\n            </section>\r\n        </div>\r\n    </div>\r\n}","import React from \"react\";\r\nimport { SideInfoView } from \"./SideInfoView\";\r\nimport { SideData, Side } from \"../models/Side\";\r\nimport { ActionData } from \"../models/ActionData\";\r\nimport { ActionInfoView } from \"./ActionInfoView\";\r\nimport { Attribute } from \"../models/Attribute\";\r\nimport { LoadView } from \"./LoadView\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst META_ITEM = \"_saveMetaItem_V4\";\r\nconst META_ITEM_V3 = \"_saveMetaItem_V3\";\r\nconst META_ITEM_V2 = \"_saveMetaItem_V2\";\r\n\r\ninterface SaveData{\r\n    side: SideData;\r\n    side2: SideData;\r\n    actions: ActionData[];\r\n}\r\n\r\ninterface Props{\r\n    onComplete: (sideA: SideData, sideB: SideData, actions: ActionData[]) => void;\r\n}\r\n\r\ninterface Action {\r\n    data: ActionData;\r\n    id: number;\r\n}\r\n\r\ninterface State{\r\n    side: SideData;\r\n    side2: SideData;\r\n    actions: Action[];\r\n    loadShowing: boolean;\r\n    saves: string[];\r\n    currentPage: \"sides\" | \"actions\";\r\n}\r\n\r\nexport class EditView extends React.Component<Props, State>{\r\n\r\n    maxActionId: number;\r\n\r\n    constructor(props: Props) {\r\n        super(props);\r\n        this.state = {\r\n            side: {hp: 0, sp: 0, battlers: [], battlerPositions: {}},\r\n            side2: {hp:0, sp:0, battlers: [], battlerPositions: {}},\r\n            actions: [],\r\n            loadShowing: false,\r\n            saves: [],\r\n            currentPage: \"sides\" \r\n        }\r\n        this.maxActionId = 0;\r\n        this.handleSideChanged = this.handleSideChanged.bind(this);\r\n        this.handleSide2Changed = this.handleSide2Changed.bind(this);\r\n        this.onAddAction = this.onAddAction.bind(this);\r\n        this.onComplete = this.onComplete.bind(this);\r\n        this.migrateSaveV2_TO_V3();\r\n        this.migrateSaveV3_TO_V4();\r\n    }\r\n\r\n    handleSideChanged(side: SideData) {\r\n        this.setState({side: side});\r\n    }\r\n\r\n    handleSide2Changed(side: SideData) {\r\n        this.setState({side2: side});\r\n    }\r\n\r\n    onActionChanged(id: number, action: ActionData) {\r\n        this.setState((state) => {\r\n            let arr = [...state.actions];\r\n            const index = arr.findIndex(v=> v.id === id);\r\n            arr[index] = {...arr[index], data: action};\r\n            return {actions: arr};\r\n        })\r\n    }\r\n\r\n    onAddAction() {\r\n        this.setState((state) => {\r\n            let arr = [...state.actions];\r\n            arr.push({id: this.maxActionId++, data: {hpDamage: 0, spCost: 0, attribute: Attribute.Earth, attributeDamage: 0, name: \"\", spRecovery: 0, dpRecovery: 0, defenceIncrease: 0}});\r\n            return {actions: arr};\r\n        })\r\n    }\r\n\r\n    onRemoveAction(id: number) {\r\n        this.setState((state) => {\r\n            const actions = [...state.actions];\r\n            const index = actions.findIndex(v => v.id === id);\r\n            if(index !== -1) {\r\n                actions.splice(index, 1);\r\n            }\r\n            return {actions};\r\n        });\r\n    }\r\n\r\n    onComplete() {\r\n        this.props.onComplete(this.state.side, this.state.side2, this.state.actions.map(v=>v.data));\r\n    }\r\n\r\n    onSave() {\r\n        let savename = window.prompt(\"存档名称（同名会自动覆盖）\", new Date().toLocaleString());\r\n        if(savename === null) {\r\n            return;\r\n        }\r\n        savename = savename.trim();\r\n        if(savename === \"\") {\r\n            return;\r\n        }\r\n        if(savename === META_ITEM || savename === META_ITEM_V2) {\r\n            window.alert(\"非法名称\");\r\n            return;\r\n        }\r\n        //todo remove actions id.\r\n        const stateString = JSON.stringify({side: this.state.side, side2: this.state.side2, actions: this.state.actions.map(v => v.data)});\r\n        const namesString = localStorage.getItem(META_ITEM);\r\n        let names: string[];\r\n        if(namesString === null) {\r\n            names = [];\r\n        }else{\r\n            names = JSON.parse(namesString) as string[];\r\n        }\r\n        if(names.findIndex(x => x === savename) !== -1) {\r\n            if(window.confirm(\"存在同名存档，是否覆盖？\") === false) {\r\n                return;\r\n            }\r\n        }else{\r\n            names.push(savename);\r\n        }\r\n        localStorage.setItem(META_ITEM, JSON.stringify(names));\r\n        localStorage.setItem(savename, stateString);\r\n    }\r\n\r\n    private migrateSave(oldSaveItem: string, newSaveItem: string, convert: (data:any) => any) {\r\n        const oldNameString = localStorage.getItem(oldSaveItem);\r\n        if(oldNameString === null) {\r\n            return;\r\n        }\r\n        const oldSaves = JSON.parse(oldNameString) as string[];\r\n        const newSave = [];\r\n        for (let save of oldSaves) {\r\n            const saveString = localStorage.getItem(save);\r\n            if(saveString === null) {\r\n                continue;\r\n            }\r\n            let saveData = JSON.parse(saveString) as any;\r\n            saveData = convert(saveData);\r\n            newSave.push(save);\r\n            localStorage.setItem(save, JSON.stringify(saveData));\r\n        }\r\n        localStorage.removeItem(oldSaveItem);\r\n        const newNameString = localStorage.getItem(newSaveItem);\r\n        let newNames: string[] = [];\r\n        if(newNameString !== null) {\r\n            newNames = JSON.parse(newNameString) as string[];\r\n        }\r\n        for (let save of newSave) {\r\n            if(newNames.indexOf(save) === -1) {\r\n                newNames.push(save);\r\n            }\r\n        }\r\n        localStorage.setItem(META_ITEM, JSON.stringify(newNames));\r\n    }\r\n\r\n    private migrateSaveV3_TO_V4() {\r\n        const convertSide = (side: any) => {\r\n            let v: any = {};\r\n            for(let b of side.battlers){\r\n                v[b[\"position\"]] = b.id;\r\n                delete b[\"position\"];\r\n            }\r\n            side.battlerPositions = v;\r\n        }\r\n        this.migrateSave(META_ITEM_V3, META_ITEM, (oldSave)=> {\r\n            convertSide(oldSave[\"side\"]);\r\n            convertSide(oldSave[\"side2\"]);\r\n            return oldSave;\r\n        });\r\n    }\r\n\r\n    private migrateSaveV2_TO_V3() {\r\n        this.migrateSave(META_ITEM_V2, META_ITEM_V3, (oldSave) => {\r\n            oldSave.actions.forEach((action: any) => {\r\n                delete action[\"targetArea\"];\r\n            })\r\n            return oldSave;\r\n        })\r\n    }\r\n\r\n    onLoad() {\r\n        const namesString = localStorage.getItem(META_ITEM);\r\n        if(namesString === null) {\r\n            alert(\"无存档\");\r\n            return;\r\n        }\r\n        let names = JSON.parse(namesString) as string[];\r\n        if(names.length === 0) {\r\n            alert(\"无存档\");\r\n            return;\r\n        }\r\n        this.setState({\r\n            loadShowing: true,\r\n            saves: names\r\n        });\r\n    }\r\n\r\n    onLoadCanceled() {\r\n        this.setState({loadShowing: false})\r\n    }\r\n\r\n    onDeleteSave(name: string) {\r\n        const nameString = localStorage.getItem(META_ITEM);\r\n        if(nameString === null) {\r\n            alert(\"读取错误！\");\r\n            this.setState({loadShowing: false});\r\n            return;\r\n        }\r\n        let names = JSON.parse(nameString) as string[];\r\n        const index = names.indexOf(name);\r\n        if(index === -1) {\r\n            alert(\"读取错误！\");\r\n            this.setState({loadShowing: false});\r\n            return;\r\n        }\r\n        names.splice(index, 1);\r\n\r\n        localStorage.setItem(META_ITEM, JSON.stringify(names));\r\n        localStorage.removeItem(name);\r\n\r\n        if(names.length === 0) {\r\n            this.setState({\r\n                loadShowing: false,\r\n                saves: names\r\n            });\r\n        }\r\n        else {\r\n            this.setState({\r\n                loadShowing: true,\r\n                saves: names\r\n            });\r\n        }\r\n    }\r\n\r\n    onLoadSelected(name: string) { \r\n        const dataString = localStorage.getItem(name);\r\n        if(dataString === null) {\r\n            alert(\"读取错误！\");\r\n            this.setState({loadShowing: false});\r\n            return;\r\n        }\r\n        const data = JSON.parse(dataString) as SaveData;\r\n        this.setState({\r\n            loadShowing: false,\r\n            side: data.side,\r\n            side2: data.side2,\r\n            actions: data.actions.map(v => ({id: this.maxActionId++, data: v}))\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return <React.Fragment>\r\n            <div className=\"container\">\r\n                <div className=\"tabs\">\r\n                    <ul>\r\n                        <li className={this.state.currentPage === \"sides\" ? \"is-active\" : \"\"}>\r\n                            <a onClick={(e) => {e.preventDefault(); this.setState({currentPage: \"sides\"});}}>角色</a>\r\n                        </li>\r\n                        <li className={this.state.currentPage === \"actions\" ? \"is-active\" : \"\"}>\r\n                            <a onClick={(e) => {e.preventDefault(); this.setState({currentPage: \"actions\"});}}>行为</a>\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n                {\r\n                    this.state.currentPage === \"sides\" ? \r\n                        <div className=\"sides-view\">\r\n                            <div className=\"columns edit-view-troop-headers\">\r\n                                <div className=\"column edit-view-troop-header red\"><p>红方</p></div>\r\n                                <div className=\"column edit-view-troop-header blue\"><p>蓝方</p></div>\r\n                            </div>\r\n                            \r\n                            <div className=\"columns side-info-views\">\r\n                                <SideInfoView side={this.state.side} onSideChanged={this.handleSideChanged} isLeft={true}/>\r\n                                \r\n                                <SideInfoView side={this.state.side2} onSideChanged={this.handleSide2Changed} isLeft={false}/>\r\n                            </div>\r\n                        </div> \r\n                    :\r\n                         null\r\n                }\r\n                \r\n\r\n                {\r\n                    this.state.currentPage === \"actions\" ? \r\n                        <div className=\"actions-view\">\r\n                            {\r\n                                this.state.actions.map((action) => {\r\n                                    return <ActionInfoView action={action.data} onActionChanged={this.onActionChanged.bind(this, action.id)} key={action.id} onActionDeleted={() => this.onRemoveAction(action.id)}/>\r\n                                })\r\n                            }\r\n                            <div className=\"field\">\r\n                                <button className=\"button\" onClick={this.onAddAction}>添加</button>\r\n                            </div>\r\n                            \r\n                        </div>\r\n                    :\r\n                        null\r\n                }\r\n                \r\n                <div className=\"footer-view field is-grouped\">\r\n                    <p className=\"control\">\r\n                        <Link className=\"button is-primary\" to=\"/battle\" onClick={this.onComplete}>完成</Link>\r\n                    </p>\r\n                    <p className=\"control\">\r\n                        <button className=\"button\" onClick={() => this.onSave()}>保存</button>\r\n                    </p>\r\n                    <p className=\"control\">\r\n                        <button className=\"button\" onClick={() => this.onLoad()}>读取</button>\r\n                    </p>\r\n                    \r\n                </div>\r\n            </div>\r\n            {\r\n                this.state.loadShowing ? \r\n                    <LoadView saves={this.state.saves} onClosed={() => this.onLoadCanceled()} onLoad={(name) => this.onLoadSelected(name)} onDelete={(name) => this.onDeleteSave(name)}/> : null\r\n            }\r\n        </React.Fragment>\r\n    }\r\n\r\n}","import { Battler, BattlerData, Position } from \"./Battler\";\r\nimport { Action } from \"./Action\";\r\n\r\nexport class Side{\r\n    \r\n    opponent: Side | null;\r\n    damageMultiplier: number;\r\n    thisActionDamageMultiplier: number;\r\n    damageMultiplierDelta: number;\r\n    battlers: Battler[];\r\n    hp: number;\r\n    sp: number;\r\n    \r\n    constructor(data: SideData) {\r\n        //this.battlers = data.battlers.map(v => new Battler(this, v));\r\n        this.battlers = Object.entries(data.battlerPositions).map(([pos, id], index) => \r\n            new Battler(this, data.battlers.find(b => b.id === id)!, parseInt(pos) as Position, index)\r\n        );\r\n        console.log(data.battlerPositions, data.battlers);\r\n        console.log(this.battlers);\r\n        this.damageMultiplier = 1.0;\r\n        this.thisActionDamageMultiplier = 1.0;\r\n        this.damageMultiplierDelta = 0.2;\r\n        this.opponent = null;\r\n        this.hp = data.hp;\r\n        this.sp = data.sp;\r\n    }\r\n\r\n    getBattler(position: [number, number]) : Battler | undefined {\r\n        const flatPosition = position[0] * 2 + position[1];\r\n        return this.battlers.find(b => b.position === flatPosition);\r\n    }\r\n    \r\n\r\n    setOpponent(side: Side) {\r\n        this.opponent = side;\r\n    }\r\n\r\n    applyHpDamage(hpDamage: number): HpDamageResult {\r\n        this.hp -= hpDamage;\r\n        if(this.hp < 0) {\r\n            this.hp = 0;\r\n        }\r\n        return {hpDamage: hpDamage, isDead: this.hp === 0};\r\n    }\r\n\r\n    applySpRecovery(spRecovery: number): SpRecoveryResult {\r\n        const oldSp = this.sp;\r\n        this.sp += spRecovery;\r\n        if(this.sp >= 10) {\r\n            this.sp = 10;\r\n        }\r\n        if(this.sp < 0) {\r\n            this.sp = 0;\r\n        }\r\n        return this.sp - oldSp;\r\n    }\r\n\r\n    onDamageWeakState(action: Action): DamageMultiplierResult {\r\n        let ret = {multiplierAdded: this.damageMultiplierDelta};\r\n        this.thisActionDamageMultiplier += this.damageMultiplierDelta;\r\n        this.damageMultiplierDelta += 0.2;\r\n        return ret;\r\n    }\r\n\r\n    onActionEnd() {\r\n        this.damageMultiplier = this.thisActionDamageMultiplier;\r\n    }\r\n\r\n    onTurnStart() {\r\n        this.damageMultiplier = 1.0;\r\n        this.thisActionDamageMultiplier = 1.0;\r\n        this.damageMultiplierDelta = 0.2;\r\n        this.battlers.forEach(b => b.onTurnStart());\r\n        if(this.sp <= 3) {\r\n            this.sp = 3;\r\n        }\r\n    }\r\n\r\n    getDisplayDamageMultiplier(): number{\r\n        return this.thisActionDamageMultiplier;\r\n    }\r\n\r\n\r\n}\r\n\r\nexport interface HpDamageResult{\r\n    hpDamage: number;\r\n    isDead: boolean;\r\n}\r\n\r\nexport type SpRecoveryResult = number;\r\n\r\nexport interface SideData{\r\n    battlerPositions: {[p in Position]? : number|undefined};\r\n    battlers: BattlerData[];\r\n    hp: number;\r\n    sp: number;\r\n}\r\n\r\nexport interface DamageMultiplierResult{\r\n    multiplierAdded: number;\r\n}\r\n","import { HpDamageResult, Battler, Position, AttributeDamageResult, DpRecoveryResult, DefenceIncreaseResult, FlatPosToXY } from \"./Battler\";\r\nimport { DamageMultiplierResult, Side, SpRecoveryResult  } from \"./Side\";\r\nimport { ActionData } from \"./ActionData\";\r\n\r\nexport class Action{\r\n    user: Battler;\r\n    targets: Battler[] | null;\r\n    data: ActionData;\r\n    id: number;\r\n    private attack: Attack | null;\r\n    private targetPoints: {self: Position[], opponent: Position[]};\r\n\r\n    constructor(ad: ActionData, user: Battler, targets: {self: Position[], opponent: Position[]}, id: number) {\r\n        this.data = ad;\r\n        this.targets = null;\r\n        this.attack = null;\r\n        this.user = user;\r\n        this.targetPoints = targets;\r\n        this.id = id;\r\n    }\r\n\r\n    canUse(){\r\n        return !this.user.isDead();\r\n    }\r\n\r\n    private fetchBattlers(side: Side, positions: Position[]) : Battler[]{\r\n        return positions.map(p => side.getBattler(FlatPosToXY(p))).filter(b => b !== undefined) as Battler[];\r\n    }\r\n\r\n    step() : boolean{\r\n        if(!this.canUse()){\r\n            return false;\r\n        }\r\n        if(this.targets === null) {\r\n            this.targets = [...this.fetchBattlers(this.user.side, this.targetPoints.self), ...this.fetchBattlers(this.user.side.opponent!, this.targetPoints.opponent)];\r\n        }\r\n        if(this.targets.length === 0) {\r\n            this.user.side.onActionEnd();\r\n            return false;\r\n        }\r\n        let t = this.targets.shift();\r\n        this.attack = new Attack(this.user, t!, this);\r\n        return true;\r\n    }\r\n\r\n    getCurrentAttack() : Attack | null{\r\n        return this.attack;\r\n    }\r\n}\r\n\r\nexport class Attack{\r\n    user: Battler;\r\n    target: Battler;\r\n    action: Action;\r\n    hpDamageResult: HpDamageResult;\r\n    spRecoveryResult: SpRecoveryResult;\r\n    dpRecoveryResult: DpRecoveryResult;\r\n    defenceIncreaseResult: DefenceIncreaseResult;\r\n    damageMultiplierResult: DamageMultiplierResult | null;\r\n    attributeDamageResult: AttributeDamageResult;\r\n\r\n    constructor(user: Battler, target: Battler, action: Action){\r\n        this.user = user;\r\n        this.target = target;\r\n        this.action = action;\r\n        let hpDamage = this.user.side.damageMultiplier * this.action.data.hpDamage;\r\n        this.hpDamageResult = this.target.applyHpDamage(hpDamage);\r\n        this.damageMultiplierResult = null;\r\n        this.spRecoveryResult = this.target.side.applySpRecovery(this.action.data.spRecovery);\r\n        this.dpRecoveryResult = this.target.applyDpRecovery(this.action.data.dpRecovery);\r\n        this.defenceIncreaseResult = this.target.applyDefenceIncrease(this.action.data.defenceIncrease);\r\n        //TODO: we can combine damageMultiplierResult and attributeDamageResult.\r\n        if(this.action.data.attribute === this.target.getCurrentAttribute() && this.target.isWeakState()) {\r\n            this.damageMultiplierResult = this.user.side.onDamageWeakState(this.action);\r\n        }\r\n        this.attributeDamageResult = this.target.applyAttributeDamage(this.action.data.attribute, this.action.data.attributeDamage);\r\n    }\r\n}","import { Side, SideData } from \"../models/Side\";\r\nimport { Action, Attack } from \"../models/Action\";\r\nimport { ActionData } from \"../models/ActionData\";\r\nimport { Battler, Position, FlatPosToXY } from \"../models/Battler\";\r\nimport { Observable, BehaviorSubject } from \"rxjs\" \r\n\r\nexport type InputtingPhase = \"decideBattler\" | \"decideAction\" | \"decideTarget\" | undefined;\r\nexport type Phase = \"inputting\"|\"processing\" | undefined;\r\n\r\nconst UPDATE_INTERVAL = 200;\r\n\r\nexport class BattleVM {\r\n    private _sideA: Side;\r\n    private _sideB: Side;\r\n    private _actions: BehaviorSubject<Action[]>;\r\n    private _phase: BehaviorSubject<Phase>;\r\n    private _sidesSubject: BehaviorSubject<[Side, Side]>;\r\n    private _inputtingPhase: BehaviorSubject<InputtingPhase>;\r\n    private _actionResults : BehaviorSubject<Attack[]>;\r\n    private currentProcessingAction: Action | undefined;\r\n    private _inputtingAction: ActionData | undefined;\r\n    private _currentInputtingBattler: Battler | undefined;\r\n    private _nextActionId: number;\r\n\r\n    constructor(sideA: SideData, sideB: SideData) {\r\n        this._sideA = new Side(sideA);\r\n        this._sideB = new Side(sideB);\r\n        this._sideA.setOpponent(this._sideB);\r\n        this._sideB.setOpponent(this._sideA);\r\n        this._sidesSubject = new BehaviorSubject([this._sideA, this._sideB]);\r\n        this._actions = new BehaviorSubject([] as Action[]);\r\n        this._phase = new BehaviorSubject(undefined as Phase);\r\n        this._inputtingPhase = new BehaviorSubject(undefined as InputtingPhase);\r\n        this._actionResults = new BehaviorSubject([] as Attack[]);\r\n        this._actions.next([]);\r\n        this._actionResults.next([]);\r\n        this.currentProcessingAction = undefined;\r\n        this.startTurn();\r\n        this._nextActionId = 0;\r\n    }\r\n\r\n    get phase() : Observable<Phase>{\r\n        return this._phase;\r\n    }\r\n\r\n    get sideA() {\r\n        return this._sideA;\r\n    }\r\n\r\n    get sideB() {\r\n        return this._sideB;\r\n    }\r\n\r\n    get actions() : Observable<Action[]>{\r\n        return this._actions;\r\n    }\r\n    \r\n    get sides() : Observable<[Side, Side]> {\r\n        return this._sidesSubject;\r\n    }\r\n\r\n    get inputtingPhase() : Observable<InputtingPhase> {\r\n        return this._inputtingPhase;\r\n    }\r\n\r\n    get actionResults() : Observable<Attack[]> {\r\n        return this._actionResults;\r\n    }\r\n\r\n    get inputtingAction() : ActionData | undefined{\r\n        return this._inputtingAction;\r\n    }\r\n\r\n    get targets() : Battler[] | undefined{\r\n        if(this._currentInputtingBattler === undefined) {\r\n            return undefined;\r\n        }\r\n        else{\r\n            return this._currentInputtingBattler!.side.opponent!.battlers; \r\n        }\r\n    }\r\n    \r\n\r\n    addAction(action: ActionData) : boolean{\r\n        this.checkInputting(\"decideAction\");\r\n        if(action.spCost > this._currentInputtingBattler!.side.sp) {\r\n            return false;\r\n        }\r\n        this._inputtingAction = action;\r\n        this._inputtingPhase.next(\"decideTarget\");\r\n        return true;\r\n    }\r\n\r\n    setTargets(targets: {left: Position[], right: Position[]}) {\r\n        if(this._inputtingAction!.spCost <= this._currentInputtingBattler!.side.sp) {\r\n            this._currentInputtingBattler!.side.sp -= this._inputtingAction!.spCost;\r\n            \r\n            \r\n            let actionTargets;\r\n            if(this._currentInputtingBattler!.side === this._sideA) {\r\n                actionTargets = {self: targets.left, opponent: targets.right};\r\n            }\r\n            else {\r\n                actionTargets = {self: targets.right, opponent: targets.left};\r\n            }\r\n            this._actions.value.push(new Action(this._inputtingAction!, this._currentInputtingBattler!, actionTargets, this._nextActionId));\r\n            ++this._nextActionId;\r\n        }\r\n        this._inputtingPhase.next(\"decideBattler\");\r\n    }\r\n\r\n    selectBattler(battler: Battler) {\r\n        this.checkInputting(\"decideBattler\");\r\n        this._currentInputtingBattler = battler;\r\n        this._inputtingPhase.next(\"decideAction\");\r\n    }\r\n\r\n    checkInputting(inputtingPhase: InputtingPhase) {\r\n        if(this._phase.value !== \"inputting\") {\r\n            throw new Error(\"phase must be inputting\");\r\n        }\r\n        if(this._inputtingPhase.value !== inputtingPhase) {\r\n            throw new Error(\"inputting phase must be \" + inputtingPhase);\r\n        }\r\n    }\r\n\r\n    endInputting() {\r\n        this._phase.next(\"processing\");\r\n        this._inputtingPhase.next(undefined);\r\n        this._actionResults.value.length = 0;\r\n        this._actionResults.next(this._actionResults.value);\r\n        this.updateLoop();\r\n    }\r\n\r\n    updateLoop() {\r\n        this.update();\r\n        if(this._phase.value === \"processing\") {\r\n            setTimeout( ()=> this.updateLoop(), UPDATE_INTERVAL);\r\n        }\r\n    }\r\n\r\n    update() {\r\n        if(this._phase.value === \"inputting\") {\r\n            throw new Error(\"You shouldn't call update in inputting state.\");\r\n        }\r\n        while(true) {\r\n            if(this.currentProcessingAction !== undefined) {\r\n                if(this.currentProcessingAction.step()){\r\n                    this._actionResults.value.push(this.currentProcessingAction.getCurrentAttack()!);\r\n                    this._actionResults.next(this._actionResults.value);\r\n                    return;\r\n                }\r\n            }\r\n            this.currentProcessingAction = this._actions.value.shift();\r\n            this._actions.next(this._actions.value);\r\n            if(this.currentProcessingAction === undefined) {\r\n                this.startTurn();\r\n                break;\r\n            }\r\n        }\r\n\r\n        //after action processed, side may change.\r\n        this.dispatchSideChanges();\r\n        \r\n    }\r\n\r\n    cancelTargetSelection(): void {\r\n        this.checkInputting(\"decideTarget\");\r\n        this._inputtingAction = undefined;\r\n        this._inputtingPhase.next(\"decideAction\");\r\n    }\r\n\r\n    cancelActionSelection() : void {\r\n        this.checkInputting(\"decideAction\");\r\n        this._currentInputtingBattler = undefined;\r\n        this._inputtingPhase.next(\"decideBattler\");\r\n    }\r\n\r\n    private startTurn() {\r\n        this._sideA.onTurnStart();\r\n        this._sideB.onTurnStart();\r\n        this._phase.next(\"inputting\");\r\n        this._inputtingPhase.next(\"decideBattler\");\r\n        this.dispatchSideChanges();\r\n    }\r\n\r\n    onActionDeleted(id: number): void {\r\n        this.checkInputting(\"decideBattler\");\r\n        const index = this._actions.value.findIndex((a) => a.id === id);\r\n        const [action] = this._actions.value.splice(index, 1);\r\n        action.user.side.sp += action.data.spCost;\r\n        this._actions.next(this._actions.value);\r\n    }\r\n\r\n    onPositionChange(pos: Position, pos2: Position, isRed: boolean) {\r\n        let side;\r\n        if(isRed) {\r\n            side = this._sideA;\r\n        }\r\n        else {\r\n            side = this._sideB;\r\n        }\r\n        const b1 = side.getBattler(FlatPosToXY(pos));\r\n        const b2 = side.getBattler(FlatPosToXY(pos2));\r\n        if(b1 !== undefined) {\r\n            b1.position = pos2;\r\n        }\r\n        if(b2 !== undefined) {\r\n            b2.position = pos;\r\n        }\r\n        this.dispatchSideChanges();\r\n    }\r\n\r\n    private dispatchSideChanges() {\r\n        this._sidesSubject.next([this._sideA, this._sideB]);\r\n    }\r\n    \r\n}","import React, { DragEvent } from \"react\";\r\nimport { Battler, Position } from \"../models/Battler\";\r\nimport {ATTRIBUTE_NAME, ICON_NAME} from \"./AttributeName\";\r\n\r\ninterface Props{\r\n    battlers: Battler[];\r\n    isLeft: boolean;\r\n    onBattlerClick: (b: Battler) => void;\r\n    onPositionChange: (pos: Position, pos2: Position) => void;\r\n}\r\n\r\ninterface BriefProps{\r\n    pos: Position;\r\n    battler: Battler | undefined;\r\n    enter: (pos: Position) => void;\r\n    exit: (pos: Position) => void;\r\n    onClick: (b: Battler) => void;\r\n    isLeft: boolean;\r\n    onPositionChange: (pos: Position, pos2: Position) => void;\r\n}\r\n\r\nfunction BattlerBriefView(props: BriefProps){\r\n    const dataTransferKey = props.isLeft ? \"btest/battler_left\" : \"btest/battler_right\";\r\n    const onDragStart = (e: DragEvent) => {\r\n        if(props.battler !== undefined) {\r\n            e.dataTransfer.setData(dataTransferKey, props.pos.toString());\r\n        }\r\n        else{\r\n            e.preventDefault();\r\n        }\r\n    }\r\n    const onDragDrop = (e: DragEvent) => {\r\n        const pos = parseInt(e.dataTransfer.getData(dataTransferKey)) as Position;\r\n        if(pos === props.pos) {\r\n            return;\r\n        }\r\n        e.preventDefault();\r\n        props.onPositionChange(pos, props.pos);\r\n    }\r\n\r\n    const onDragOver = (e: DragEvent) => {\r\n        if(e.dataTransfer.types.indexOf(dataTransferKey) === -1) {\r\n            return;\r\n        }\r\n        e.dataTransfer.dropEffect = \"move\";\r\n        e.preventDefault();\r\n    }\r\n    const dragObj = {draggable:true, onDragStart, onDrop: onDragDrop, onDragOver };\r\n    if(props.battler === undefined) {\r\n        return <td onMouseEnter={() => props.enter(props.pos)} onMouseLeave={() => props.exit(props.pos)} {...dragObj} ></td>\r\n    }\r\n    let attrIcon = null;\r\n    \r\n    const attr = props.battler.getCurrentAttribute();\r\n    if(attr !== null) {\r\n        attrIcon = <span className=\"icon\"><i className={\"fas \" + ICON_NAME[attr]}></i></span>\r\n    }\r\n\r\n    return <td onMouseEnter={() => props.enter(props.pos)} onMouseLeave={() => props.exit(props.pos)} onClick={()=>props.onClick(props.battler!)} {...dragObj}>\r\n        <p className=\"battle-brief-view-name\">{props.battler.name}</p>\r\n        <p className=\"battle-brief-view-dp\">{props.battler.dp}</p>\r\n        <p className=\"battle-brief-view-icons\">\r\n            {\r\n                props.battler.isDead() ? <span className=\"icon\"><i className=\"fas fa-skull\"></i></span> : null\r\n            }\r\n            {\r\n                props.battler.isWeakState() ? <span className=\"icon\"><i className=\"fas fa-heart-broken\"></i></span> : null\r\n            }\r\n            {\r\n                attrIcon\r\n            }\r\n            \r\n        </p>\r\n        \r\n    </td>\r\n}\r\n\r\nfunction BattlerDetailView(props: {battler: Battler|undefined}){\r\n    if(props.battler === undefined) {\r\n        return <div className=\"detail-view\"></div>\r\n    }\r\n    let attribute = props.battler.getCurrentAttribute();\r\n    console.log(\"BattlerDetailView\", props.battler);\r\n    return <div className=\"detail-view\">\r\n        <p>{props.battler.name}\r\n            {\r\n                props.battler.isDead() ? <span className=\"icon\"><i className=\"fas fa-skull\"></i></span> : null\r\n            }\r\n            {\r\n                props.battler.isWeakState() ? <span className=\"icon\"><i className=\"fas fa-heart-broken\"></i></span> : null\r\n            }\r\n        </p>\r\n        \r\n        <p><b>DP:</b> {props.battler.dp}</p>\r\n        <p><b>抗:</b>{props.battler.defence}</p>\r\n        {\r\n            attribute === null ? null : \r\n            <p><b>{ATTRIBUTE_NAME[attribute]}</b> {props.battler.getAttributePoint()}</p>\r\n        }\r\n    </div>\r\n}\r\n\r\nexport class BattleFieldView extends React.Component<Props, {pos: Position | undefined}>{\r\n    constructor(props: Props) {\r\n        super(props);\r\n        this.state = {\r\n            pos: undefined\r\n        }\r\n    }\r\n\r\n    onEnterBattler(pos: Position) {\r\n        this.setState({pos});\r\n    }\r\n\r\n    onExitBattler(pos: Position) {\r\n        this.setState((prevState) => prevState.pos === pos ? {pos: undefined} : {pos: prevState.pos});\r\n    }\r\n\r\n    render() {\r\n        const battlers: {[key in Position]? : Battler} = this.props.battlers.reduce((state: {[p in Position]? : Battler}, b) => {state[b.position] = b; return state;}, {});\r\n        const col = this.props.isLeft ? [0, 1] : [1, 0];\r\n        let currentBattler = this.state.pos === undefined ? undefined : battlers[this.state.pos];\r\n        return <React.Fragment>\r\n            <table className=\"battle-field-view\">\r\n                <tbody>\r\n                    {\r\n                        [0,1,2].map(x => <tr key={x}>\r\n                            {\r\n                                (x === 0 && !this.props.isLeft) ? <td rowSpan={3} className=\"frontline\"><span>前线</span></td> : null\r\n                            }\r\n                            {\r\n                                col.map(y => <BattlerBriefView \r\n                                    pos={(x * 2 + y) as Position} \r\n                                    key={y} \r\n                                    battler={battlers[(x * 2 + y) as Position]} \r\n                                    enter={(b) => this.onEnterBattler(b)} \r\n                                    exit={(b) => this.onExitBattler(b)} \r\n                                    onClick={this.props.onBattlerClick} isLeft={this.props.isLeft} \r\n                                    onPositionChange={this.props.onPositionChange}\r\n                                />)\r\n                            }\r\n                            {\r\n                                (x === 0 && this.props.isLeft) ? <td rowSpan={3} className=\"frontline\"><span>前线</span></td> : null\r\n                            }\r\n                        </tr>)\r\n                    }\r\n                </tbody>\r\n            </table>\r\n            <BattlerDetailView battler={currentBattler} />\r\n        </React.Fragment>\r\n    }\r\n}","import { Side } from \"../models/Side\";\r\nimport React from \"react\";\r\nimport { Battler, Position } from \"../models/Battler\";\r\nimport { BattleFieldView } from \"./BattleFieldView\";\r\n\r\ninterface Props{\r\n    onPositionChange: (pos: Position, pos2: Position) => void;\r\n    side: Side;\r\n    onBattlerClick: (b: Battler) => void;\r\n    isRed: boolean;\r\n}\r\n\r\n\r\nexport function SideView(props: Props) {\r\n    return <div className={\"side-view column is-6\" + (props.isRed ? \" red\" : \" blue\") }>\r\n        <div>\r\n            <p><b>HP:</b> {props.side.hp}</p>\r\n            <p><b>AP:</b> {props.side.sp}</p>\r\n            <BattleFieldView isLeft={props.isRed} battlers={props.side.battlers} onBattlerClick={props.onBattlerClick} onPositionChange={props.onPositionChange}/>\r\n        </div>\r\n    </div>\r\n}\r\n\r\n","import { Battler, Position, XYPosToFlat } from \"../models/Battler\";\r\nimport React from \"react\";\r\n\r\ninterface Props{\r\n    battlersLeft: Battler[];\r\n    battlersRight: Battler[];\r\n    onTargetSelected: (selected: {left: Position[], right: Position[]}) => void;\r\n    onClose: () => void;\r\n}\r\n\r\nfunction BattlerCell(props: {onClick: () => void, pos: Position, highlighted: boolean, name: string}) {\r\n    return <td className={props.highlighted ? \"highlighted\" : \"\"} onClick={() => props.onClick()}>{props.name}</td>\r\n}\r\n\r\nexport class TargetView extends React.Component<Props, {selectedPosition: {left: {[p in Position] : boolean}, right: {[p in Position]: boolean}}}> {\r\n    constructor(props: Props) {\r\n        super(props);\r\n        this.state = {selectedPosition: {left: {0: false, 1: false, 2: false, 3: false, 4: false, 5: false}, right: {0: false, 1: false, 2: false, 3: false, 4: false, 5: false}}};\r\n        this.onTargetSelected = this.onTargetSelected.bind(this);\r\n    }\r\n\r\n    onTargetSelected(pos: Position, isLeft: boolean) {\r\n        this.setState(prevState => {\r\n            {\r\n                const oldPos = {left: {...prevState.selectedPosition.left}, right: {...prevState.selectedPosition.right}};\r\n                if(isLeft) {\r\n                    oldPos.left[pos] = !oldPos.left[pos];\r\n                }\r\n                else{\r\n                    oldPos.right[pos] = !oldPos.right[pos];\r\n                }\r\n                return {selectedPosition: oldPos}\r\n            }\r\n        });\r\n    }\r\n\r\n    onConfirm() {\r\n        const convert = (v: {[p in Position]: boolean}) => Object.entries(v).filter(([x,y]) => y).map(([key, _]) => Number.parseInt(key));\r\n        const left = convert(this.state.selectedPosition.left) as Position[];\r\n        const right = convert(this.state.selectedPosition.right) as Position[];\r\n        this.props.onTargetSelected({left, right});\r\n    }\r\n\r\n    render() {\r\n        let leftBattlersMap: (Battler|null)[] = Array(6).fill(null);\r\n        let rightBattlersMap: (Battler|null)[] = Array(6).fill(null);\r\n        this.props.battlersLeft.forEach(b => leftBattlersMap[b.position] = b);\r\n        this.props.battlersRight.forEach(b => rightBattlersMap[b.position] = b);\r\n        return <div className=\"modal target-view is-active\">\r\n                <div className=\"modal-background\"></div>\r\n                <div className=\"modal-card\">\r\n                    <header className=\"modal-card-head\">\r\n                        <p className=\"modal-card-title\">选择目标</p>\r\n                        <button className=\"delete\" aria-label=\"close\" onClick={()=>this.props.onClose()}></button>\r\n                    </header>\r\n                    <section className=\"modal-card-body\">\r\n                        <table className=\"target-view-table\">\r\n                            <tbody>\r\n                                {\r\n                                    [0,1,2].map(x => \r\n                                        <tr key={x}>\r\n                                            {\r\n                                                [0,1].map(y => {\r\n                                                    let pos = XYPosToFlat(x as 0|1|2, y as 0|1);\r\n                                                    let battler = leftBattlersMap[pos];\r\n                                                    let name = battler === null ? \"\" : battler.name;\r\n                                                    let isHighlighted = this.state.selectedPosition.left[pos];\r\n                                                    return <BattlerCell key={y} onClick={()=>this.onTargetSelected(pos, true)} pos={pos} name={name} highlighted={isHighlighted}/>\r\n                                                })\r\n                                            }\r\n                                            {\r\n                                                x === 0 ? <td rowSpan={3} className=\"target-view-frontline\">前线</td> : null\r\n                                            }\r\n                                            {\r\n                                                [1,0].map(y => {\r\n                                                    let pos = XYPosToFlat(x as 0|1|2, y as 0|1);\r\n                                                    let battler = rightBattlersMap[pos];\r\n                                                    let name = battler === null ? \"\" : battler.name;\r\n                                                    let isHighlighted = this.state.selectedPosition.right[pos];\r\n                                                    return <BattlerCell key={y} onClick={()=>this.onTargetSelected(pos, false)} pos={pos} name={name} highlighted={isHighlighted}/>\r\n                                                })\r\n                                            }\r\n                                        </tr>\r\n                                    )\r\n                                }\r\n                            </tbody>\r\n                        </table>\r\n                    </section>\r\n                    <footer className=\"modal-card-foot\">\r\n                        <button className=\"button is-success\" onClick={() => this.onConfirm()}>确认</button>\r\n                        <button className=\"button\" onClick={() => this.props.onClose()}>取消</button>\r\n                    </footer>\r\n                </div>\r\n            </div>\r\n    }\r\n}","import { Attack } from \"../models/Action\";\r\nimport { ATTRIBUTE_NAME } from \"./AttributeName\";\r\nimport React from \"react\";\r\n\r\ninterface Props{\r\n    result: Attack;\r\n}\r\nexport function ResultView(props: Props) {\r\n    let attribute = null;\r\n    if(props.result.attributeDamageResult.attribute !== null) {\r\n        attribute = <React.Fragment>\r\n                <p>附加了 {props.result.attributeDamageResult.attributePointAttached} 点 {ATTRIBUTE_NAME[props.result.attributeDamageResult.attribute]} </p>\r\n                <p>{props.result.attributeDamageResult.knockedIntoWeak ? \"打入了弱点状态\" : \"\"} \r\n                 {props.result.attributeDamageResult.dpDamage > 0 ? `造成了${props.result.attributeDamageResult.dpDamage}点DP伤害` : \"\" } </p>\r\n            </React.Fragment>;\r\n    }\r\n    let damageMultipiler = null;\r\n    if(props.result.damageMultiplierResult !== null) {\r\n        damageMultipiler = <p>\r\n            伤害提升率上涨了: {props.result.damageMultiplierResult.multiplierAdded}\r\n        </p>\r\n    }\r\n    let dpRcovery = null;\r\n    if(props.result.dpRecoveryResult !== 0) {\r\n        dpRcovery = <p>DP回复了：{props.result.dpRecoveryResult} </p>\r\n    }\r\n    let spRecovery = null;\r\n    if(props.result.spRecoveryResult !== 0) {\r\n        spRecovery = <p>SP回复了：{props.result.spRecoveryResult} </p>\r\n    }\r\n    let defenceIncreasement = null;\r\n    if(props.result.defenceIncreaseResult !== 0) {\r\n        defenceIncreasement = <p>防御上涨了：{props.result.defenceIncreaseResult}</p>\r\n    }\r\n    return <div className=\"result-view\">\r\n        <p>{props.result.action.user.name} 对 {props.result.target.name} 使用了 {props.result.action.data.name}</p>\r\n        <p>消耗了{props.result.hpDamageResult.defended}点防御</p>\r\n        <p>造成了 {props.result.hpDamageResult.hpDamage} 点伤害 {props.result.hpDamageResult.isDead ? \"对面已死亡\" : \"\"}</p>\r\n        {attribute}\r\n        {damageMultipiler}\r\n        {dpRcovery}\r\n        {spRecovery}\r\n        {defenceIncreasement}\r\n    </div>\r\n}","import { ActionData } from \"../models/ActionData\";\r\nimport React from \"react\";\r\n\r\n\r\ninterface Props{\r\n    action: ActionData;\r\n    onClicked: (action: ActionData) => void;\r\n}\r\n\r\nexport function ActionView(props: Props) {\r\n    return <p className=\"action\" onClick={() => props.onClicked(props.action)}>\r\n        <span className=\"name\">{props.action.name}</span> \r\n        &nbsp;\r\n        <span className=\"sp-cost\"><b>SP消耗:</b>{props.action.spCost}</span>\r\n    </p>\r\n\r\n}","import { ActionData } from \"../models/ActionData\";\r\nimport { ActionView } from \"./ActionView\";\r\nimport React from \"react\";\r\n\r\ninterface Props {\r\n    onActionSelectionClosed: () => void;\r\n    actionDatas: ActionData[];\r\n    onActionClicked: (action: ActionData) => void;\r\n}\r\nexport function ActionSelectionView(props: Props) {\r\n    return <div className=\"actions-selection modal is-active\">  \r\n        <div className=\"modal-background\"></div>\r\n        <div className=\"modal-card\">\r\n            <header className=\"modal-card-head\">\r\n                <p className=\"modal-card-title\">选择行动</p>\r\n                <button className=\"delete\" aria-label=\"close\" onClick={() => props.onActionSelectionClosed()}></button>\r\n            </header>\r\n            <section className=\"modal-card-body\">\r\n                {\r\n                    props.actionDatas.map((action, id) => \r\n                    <ActionView action={action} key={id} onClicked={() => props.onActionClicked(action)}/>)\r\n                }\r\n            </section>\r\n        </div>\r\n    </div>\r\n}","import { Action } from \"../models/Action\";\r\nimport React from \"react\";\r\n\r\ninterface Props{\r\n    actions: Action[];\r\n    onActionDeleted: (id: number) => void;\r\n}\r\nexport function ActionRecordsView(props: Props) {\r\n    return <div className=\"action-records\">\r\n        {\r\n            props.actions.map(action => <p key={action.id} className=\"action-record\">\r\n                <span>{action.user.name}</span>\r\n                <span className=\"action-record-action-use\">使用了</span>\r\n                <span className=\"action-record-action-name\">{action.data.name}</span> \r\n                <button className=\"delete action-record-delete\" onClick={e=>{e.preventDefault(); props.onActionDeleted(action.id)} }>X</button>\r\n            </p>)\r\n        }\r\n    </div>\r\n}","import React from \"react\";\r\nimport { SideData, Side } from \"../models/Side\";\r\nimport { ActionData } from \"../models/ActionData\";\r\nimport { Phase, BattleVM, InputtingPhase } from \"../viewmodels/BattleVM\";\r\nimport { Action, Attack } from \"../models/Action\";\r\nimport { Subscription } from \"rxjs\";\r\nimport { SideView } from \"./SideView\";\r\nimport { TargetView } from \"./TargetView\";\r\nimport { Battler, Position } from \"../models/Battler\";\r\nimport { ResultView } from \"./ResultView\";\r\nimport { ActionSelectionView } from \"./ActionSelectionView\";\r\nimport { ActionRecordsView } from \"./ActionRecordsView\";\r\nimport { Redirect } from \"react-router\";\r\n\r\ninterface Props{\r\n    sideA: SideData | undefined;\r\n    sideB: SideData | undefined;\r\n    actionDatas: ActionData[] | undefined;\r\n}\r\ninterface State {\r\n    phase: Phase;\r\n    inputtingPhase: InputtingPhase;\r\n    actionResults: Attack[];\r\n    actions: Action[];\r\n    sideA: Side | undefined;\r\n    sideB: Side | undefined;\r\n}\r\n\r\nexport class BattleView extends React.Component<Props, State>{\r\n\r\n    private subscription : Subscription | undefined;\r\n    private battleVM : BattleVM | undefined;\r\n    private previousProps : Props | undefined;\r\n\r\n    constructor(props: Props) {\r\n        super(props);\r\n        this.state = {\r\n            phase: undefined,\r\n            inputtingPhase: undefined,\r\n            actionResults: [],\r\n            actions: [],\r\n            sideA: undefined,\r\n            sideB: undefined\r\n        }\r\n        this.onActionClicked = this.onActionClicked.bind(this);\r\n        this.onTargetSelected = this.onTargetSelected.bind(this);\r\n        this.onBattlerSelected = this.onBattlerSelected.bind(this);\r\n        this.onTargetSelectionClosed = this.onTargetSelectionClosed.bind(this);\r\n        this.onActionSelectionClosed = this.onActionSelectionClosed.bind(this);\r\n        this.onActionDeleted = this.onActionDeleted.bind(this);\r\n        this.onPositionChange = this.onPositionChange.bind(this);\r\n    }\r\n\r\n    recreateBattleVM() {\r\n        if(this.previousProps !== this.props){\r\n\r\n            this.previousProps = this.props;\r\n\r\n            if(this.subscription !== undefined) {\r\n                this.subscription!.unsubscribe();\r\n                this.subscription = undefined;\r\n            }\r\n            \r\n            this.battleVM = undefined;\r\n            if(this.props.sideA !== undefined && this.props.sideB !== undefined) {\r\n                this.battleVM = new BattleVM(this.props.sideA, this.props.sideB);\r\n                this.registerSubscriptions();\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    registerSubscriptions() {\r\n        if(this.subscription === undefined && this.battleVM !== undefined) {\r\n            let d = [];\r\n            d[0] = this.battleVM!.phase.subscribe(p => this.setState({phase: p}));\r\n            d[1] = this.battleVM!.inputtingPhase.subscribe(p => this.setState({inputtingPhase: p}));\r\n            d[2] = this.battleVM!.actionResults.subscribe(r => this.setState({actionResults: r}));\r\n            d[3] = this.battleVM!.actions.subscribe(a => this.setState({actions: a}));\r\n            d[4] = this.battleVM!.sides.subscribe(([sideA, sideB]) => {\r\n                console.log(\"side changed\", sideA);\r\n                this.setState({sideA, sideB});\r\n            });\r\n            this.subscription = new Subscription();\r\n            d.forEach(d => this.subscription!.add(d));\r\n        }\r\n    }\r\n\r\n    //as per React's documention, it is recommended to listen changes here.\r\n    componentDidMount() {\r\n        this.registerSubscriptions();\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        this.registerSubscriptions();\r\n    }\r\n\r\n    onActionClicked(action: ActionData) {\r\n        this.battleVM!.addAction(action);\r\n    }\r\n\r\n    onTargetSelected(targets: {left: Position[], right: Position[]}) {\r\n        this.battleVM!.setTargets(targets);\r\n    }\r\n\r\n    onBattlerSelected(battler: Battler) {\r\n        this.battleVM!.selectBattler(battler);\r\n    }\r\n\r\n    onEndTurn() {\r\n        this.battleVM!.endInputting();\r\n    }\r\n\r\n    onTargetSelectionClosed() {\r\n        this.battleVM!.cancelTargetSelection();\r\n    }\r\n\r\n    onActionSelectionClosed() {\r\n        this.battleVM!.cancelActionSelection();\r\n    }\r\n\r\n    onActionDeleted(id: number) {\r\n        this.battleVM!.onActionDeleted(id);\r\n    }\r\n\r\n    onPositionChange(pos: Position, pos2: Position, isRed: boolean) {\r\n        this.battleVM!.onPositionChange(pos, pos2, isRed);\r\n    }\r\n\r\n    render() {\r\n        this.recreateBattleVM();\r\n        if(this.battleVM === undefined) {\r\n            return <Redirect to=\"/\"/>\r\n        }\r\n        let actions = null;\r\n        console.log(this.state.inputtingPhase);\r\n        if(this.props.actionDatas !== undefined && this.state.inputtingPhase === \"decideAction\") {\r\n            actions = <ActionSelectionView onActionClicked={this.onActionClicked} actionDatas={this.props.actionDatas} onActionSelectionClosed={this.onActionSelectionClosed}\r\n            />\r\n        }\r\n        let target = null;\r\n        if(this.state.inputtingPhase === \"decideTarget\") {\r\n            target = <TargetView battlersLeft={this.state.sideA!.battlers} battlersRight={this.state.sideB!.battlers} onTargetSelected={this.onTargetSelected} onClose={this.onTargetSelectionClosed}/>\r\n        }\r\n        if(this.state.sideA === undefined || this.state.sideB === undefined) {\r\n            return <></>;\r\n        }\r\n        return <div className=\"container battle-view\">\r\n            <div className=\"columns\">\r\n                <SideView isRed={true} side={this.state.sideA!} onBattlerClick={this.onBattlerSelected} onPositionChange={(p1,p2) => this.onPositionChange(p1, p2, true)}/>\r\n                <SideView isRed={false} side={this.state.sideB!} onBattlerClick={this.onBattlerSelected} onPositionChange={(p1,p2) => this.onPositionChange(p1, p2, false)}/>\r\n            </div>\r\n            <ActionRecordsView actions={this.state.actions} onActionDeleted={this.onActionDeleted} />\r\n            <div className=\"control\">\r\n                {\r\n                    this.state.phase === \"inputting\" ? <button className=\"button\" onClick={() => this.onEndTurn()}>结束回合</button> : null\r\n                }\r\n            </div>\r\n            \r\n            <div className={`modal-container ${actions !== null || target !== null ? \"show\" : \"\"}`}>\r\n                {\r\n                    actions !== null ? actions : <React.Fragment />\r\n                }\r\n                {\r\n                    target !== null ? target : <React.Fragment />\r\n                }\r\n\r\n            </div>\r\n            {\r\n                this.state.actionResults.map((result, key) => <ResultView key={key} result={result}/>)\r\n            }\r\n        </div>\r\n    }\r\n}","import React from \"react\";\r\nimport { EditView } from \"./EditView\";\r\nimport { SideData } from \"../models/Side\";\r\nimport { ActionData } from \"../models/ActionData\";\r\nimport { BattleView } from \"./BattleView\";\r\nimport { Route } from \"react-router-dom\";\r\n\r\nexport class AppView extends React.Component<{}, {sideA: SideData | undefined, sideB: SideData | undefined, actions: ActionData[]}>{\r\n\r\n    constructor(props: {}) {\r\n        super(props);\r\n        this.state = {sideA: undefined, sideB: undefined, actions: []};\r\n        this.onComplete = this.onComplete.bind(this);\r\n    }\r\n\r\n    onComplete(sideA:SideData, sideB: SideData, actions: ActionData[]) {\r\n        this.setState({sideA: sideA, sideB: sideB, actions: actions});\r\n    }\r\n\r\n    render() {\r\n        return<div>\r\n            <Route render={props => <EditView onComplete={this.onComplete} {...props} />} path=\"/\" exact />\r\n            <Route render={props => <BattleView {...props} sideA={this.state.sideA} sideB={this.state.sideB} actionDatas={this.state.actions} />} path=\"/battle\"  />\r\n        </div>\r\n    }\r\n}","import React from 'react';\nimport './App.css';\nimport { AppView } from './views/AppView';\n\nconst App: React.FC = () => {\n    \n    return <AppView  />\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {HashRouter as Router } from \"react-router-dom\";\nimport \"bulma\";\nimport \"@fortawesome/fontawesome-free/css/all.css\";\n\nReactDOM.render(<Router><App /></Router>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}